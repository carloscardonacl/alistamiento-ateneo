{"remainingRequest":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\rxjs\\operator\\skip.js","dependencies":[{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\rxjs\\operator\\skip.js","mtime":1576545899719},{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576545781437},{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1576545722790}],"contextDependencies":[],"result":["\"use strict\";\nvar skip_1 = require('../operators/skip');\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * <img src=\"./img/skip.png\" width=\"100%\">\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nfunction skip(count) {\n    return skip_1.skip(count)(this);\n}\nexports.skip = skip;\n//# sourceMappingURL=skip.js.map",null]}