{"remainingRequest":"C:\\GitHub\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\GitHub\\sigespro\\node_modules\\ng2-archwizard\\dist\\directives\\reset-wizard.directive.js","dependencies":[{"path":"C:\\GitHub\\sigespro\\node_modules\\ng2-archwizard\\dist\\directives\\reset-wizard.directive.js","mtime":1582731158733},{"path":"C:\\GitHub\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582731122996},{"path":"C:\\GitHub\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1582731101534}],"contextDependencies":[],"result":["import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\nimport { WizardState } from '../navigation/wizard-state.model';\n/**\n * The `resetWizard` directive can be used to reset the wizard to its initial state.\n * This directive accepts an output, which can be used to specify some custom cleanup work during the reset process.\n *\n * ### Syntax\n *\n * ```html\n * <button resetWizard (finalize)=\"custom reset task\">...</button>\n * ```\n *\n * @author Marc Arndt\n */\nvar ResetWizardDirective = /*@__PURE__*/ (function () {\n    /**\n     * Constructor\n     *\n     * @param wizardState The wizard state\n     */\n    function ResetWizardDirective(wizardState) {\n        this.wizardState = wizardState;\n        /**\n         * An [[EventEmitter]] containing some tasks to be done, directly before the wizard is being reset\n         */\n        this.finalize = new EventEmitter();\n    }\n    Object.defineProperty(ResetWizardDirective.prototype, \"navigationMode\", {\n        /**\n         * The navigation mode\n         *\n         * @returns {NavigationMode}\n         */\n        get: function () {\n            return this.wizardState.navigationMode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resets the wizard\n     */\n    ResetWizardDirective.prototype.onClick = function () {\n        // do some optional cleanup work\n        this.finalize.emit();\n        // reset the wizard to its initial state\n        this.navigationMode.reset();\n    };\n    return ResetWizardDirective;\n}());\nexport { ResetWizardDirective };\n//# sourceMappingURL=reset-wizard.directive.js.map \n",null]}