{"remainingRequest":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\src\\assets\\charts\\amchart\\amcharts.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\src\\assets\\charts\\amchart\\amcharts.js","mtime":1577367856996},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535664048428},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1535664036292}],"contextDependencies":[],"result":["(function () { var d; window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 60, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = [], d.amString = \"am\", d.pmString = \"pm\"); d.Class = function (a) { var b = function () { arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments)); }; a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function () { for (var a = 0; a < arguments.length; a++)\r\n    this.events[arguments[a]] = []; }, b.prototype.listenTo = function (a, b, c) { this.removeListener(a, b, c); a.events[b].push({ handler: c, scope: this }); }, b.prototype.addListener = function (a, b, c) { this.removeListener(this, a, b); a && this.events[a] && this.events[a].push({ handler: b, scope: c }); }, b.prototype.removeListener = function (a, b, c) { if (a && a.events && (a = a.events[b]))\r\n    for (b = a.length - 1; 0 <= b; b--)\r\n        a[b].handler === c && a.splice(b, 1); }, b.prototype.fire = function (a) { for (var b = this.events[a.type], c = 0; c < b.length; c++) {\r\n    var d = b[c];\r\n    d.handler.call(d.scope, a);\r\n} }); for (var c in a)\r\n    b.prototype[c] = a[c]; return b; }; d.addChart = function (a) { window.requestAnimationFrame ? d.animationRequested || (d.animationRequested = !0, window.requestAnimationFrame(d.update)) : d.updateInt || (d.updateInt = setInterval(function () { d.update(); }, Math.round(1E3 / d.updateRate))); d.charts.push(a); }; d.removeChart = function (a) { for (var b = d.charts, c = b.length - 1; 0 <= c; c--)\r\n    b[c] == a && b.splice(c, 1); 0 === b.length && (d.requestAnimation && (window.cancelAnimationFrame(d.requestAnimation), d.animationRequested = !1), d.updateInt && (clearInterval(d.updateInt), d.updateInt = NaN)); }; d.isModern = !0; d.getIEVersion = function () { var a = 0, b, c; \"Microsoft Internet Explorer\" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1))); return a; }; d.applyLang = function (a, b) { var c = d.translations; b.dayNames = d.extend({}, d.dayNames); b.shortDayNames = d.extend({}, d.shortDayNames); b.monthNames = d.extend({}, d.monthNames); b.shortMonthNames = d.extend({}, d.shortMonthNames); b.amString = \"am\"; b.pmString = \"pm\"; c && (c = c[a]) && (d.lang = c, b.langObj = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)), c.am && (b.amString = c.am), c.pm && (b.pmString = c.pm)); d.amString = b.amString; d.pmString = b.pmString; }; d.IEversion = d.getIEVersion(); 9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0); d.dx = 0; d.dy = 0; if (document.addEventListener || window.opera)\r\n    d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5; document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0)); window.chrome && (d.chrome = !0); d.handleMouseUp = function (a) { for (var b = d.charts, c = 0; c < b.length; c++) {\r\n    var e = b[c];\r\n    e && e.handleReleaseOutside && e.handleReleaseOutside(a);\r\n} }; d.handleMouseMove = function (a) { for (var b = d.charts, c = 0; c < b.length; c++) {\r\n    var e = b[c];\r\n    e && e.handleMouseMove && e.handleMouseMove(a);\r\n} }; d.handleWheel = function (a) { for (var b = d.charts, c = 0; c < b.length; c++) {\r\n    var e = b[c];\r\n    if (e && e.mouseIsOver) {\r\n        (e.mouseWheelScrollEnabled || e.mouseWheelZoomEnabled) && e.handleWheel && e.handleWheel(a);\r\n        break;\r\n    }\r\n} }; d.resetMouseOver = function () { for (var a = d.charts, b = 0; b < a.length; b++) {\r\n    var c = a[b];\r\n    c && (c.mouseIsOver = !1);\r\n} }; d.ready = function (a) { d.onReadyArray.push(a); }; d.handleLoad = function () { d.isReady = !0; for (var a = d.onReadyArray, b = 0; b < a.length; b++) {\r\n    var c = a[b];\r\n    isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b);\r\n} d.onReadyArray = []; }; d.addInitHandler = function (a, b) { d.initHandlers.push({ method: a, types: b }); }; d.callInitHandler = function (a) { var b = d.initHandlers; if (d.initHandlers)\r\n    for (var c = 0; c < b.length; c++) {\r\n        var e = b[c];\r\n        e.types ? d.isInArray(e.types, a.type) && e.method(a) : e.method(a);\r\n    } }; d.getUniqueId = function () { d.uid++; return \"AmChartsEl-\" + d.uid; }; d.isNN && (document.addEventListener(\"mousemove\", d.handleMouseMove), document.addEventListener(\"mouseup\", d.handleMouseUp, !0), window.addEventListener(\"load\", d.handleLoad, !0)); d.isIE && (document.attachEvent(\"onmousemove\", d.handleMouseMove), document.attachEvent(\"onmouseup\", d.handleMouseUp), window.attachEvent(\"onload\", d.handleLoad)); d.addWheelListeners = function () { d.wheelIsListened || (d.isNN && (window.addEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.addEventListener(\"mousewheel\", d.handleWheel, !0)), d.isIE && document.attachEvent(\"onmousewheel\", d.handleWheel)); d.wheelIsListened = !0; }; d.clear = function () { var a = d.charts; if (a)\r\n    for (var b = a.length - 1; 0 <= b; b--)\r\n        a[b].clear(); d.updateInt && clearInterval(d.updateInt); d.requestAnimation && window.cancelAnimationFrame(d.requestAnimation); d.charts = []; d.isNN && (document.removeEventListener(\"mousemove\", d.handleMouseMove, !0), document.removeEventListener(\"mouseup\", d.handleMouseUp, !0), window.removeEventListener(\"load\", d.handleLoad, !0), window.removeEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.removeEventListener(\"mousewheel\", d.handleWheel, !0)); d.isIE && (document.detachEvent(\"onmousemove\", d.handleMouseMove), document.detachEvent(\"onmouseup\", d.handleMouseUp), window.detachEvent(\"onload\", d.handleLoad)); }; d.makeChart = function (a, b, c) { var e = b.type, h = b.theme; d.isString(h) && (h = d.themes[h], b.theme = h); var f; switch (e) {\r\n    case \"serial\":\r\n        f = new d.AmSerialChart(h);\r\n        break;\r\n    case \"xy\":\r\n        f = new d.AmXYChart(h);\r\n        break;\r\n    case \"pie\":\r\n        f = new d.AmPieChart(h);\r\n        break;\r\n    case \"radar\":\r\n        f = new d.AmRadarChart(h);\r\n        break;\r\n    case \"gauge\":\r\n        f = new d.AmAngularGauge(h);\r\n        break;\r\n    case \"funnel\":\r\n        f = new d.AmFunnelChart(h);\r\n        break;\r\n    case \"map\":\r\n        f = new d.AmMap(h);\r\n        break;\r\n    case \"stock\":\r\n        f = new d.AmStockChart(h);\r\n        break;\r\n    case \"gantt\": f = new d.AmGanttChart(h);\r\n} d.extend(f, b); d.isReady ? isNaN(c) ? f.write(a) : setTimeout(function () { d.realWrite(f, a); }, c) : d.ready(function () { isNaN(c) ? f.write(a) : setTimeout(function () { d.realWrite(f, a); }, c); }); return f; }; d.realWrite = function (a, b) { a.write(b); }; d.updateCount = 0; d.validateAt = Math.round(d.updateRate / 10); d.update = function () { var a = d.charts; d.updateCount++; var b = !1; d.updateCount == d.validateAt && (b = !0, d.updateCount = 0); if (a)\r\n    for (var c = a.length - 1; 0 <= c; c--)\r\n        a[c].update && a[c].update(), b && (a[c].autoResize ? a[c].validateSize && a[c].validateSize() : a[c].premeasure && a[c].premeasure()); window.requestAnimationFrame && (d.requestAnimation = window.requestAnimationFrame(d.update)); }; \"complete\" == document.readyState && d.handleLoad(); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.toBoolean = function (a, b) { if (void 0 === a)\r\n        return b; switch (String(a).toLowerCase()) {\r\n        case \"true\":\r\n        case \"yes\":\r\n        case \"1\": return !0;\r\n        case \"false\":\r\n        case \"no\":\r\n        case \"0\":\r\n        case null: return !1;\r\n        default: return !!a;\r\n    } };\r\n    d.removeFromArray = function (a, b) { var c; if (void 0 !== b && void 0 !== a)\r\n        for (c = a.length - 1; 0 <= c; c--)\r\n            a[c] == b && a.splice(c, 1); };\r\n    d.getPath = function () { var a = document.getElementsByTagName(\"script\"); if (a)\r\n        for (var b = 0; b < a.length; b++) {\r\n            var c = a[b].src;\r\n            if (-1 !== c.search(/\\/(amcharts|ammap)\\.js/))\r\n                return c.replace(/\\/(amcharts|ammap)\\.js.*/, \"/\");\r\n        } };\r\n    d.normalizeUrl = function (a) { return \"\" !== a && -1 === a.search(/\\/$/) ? a + \"/\" : a; };\r\n    d.isAbsolute = function (a) { return 0 === a.search(/^http[s]?:|^\\//); };\r\n    d.isInArray = function (a, b) { for (var c = 0; c < a.length; c++)\r\n        if (a[c] == b)\r\n            return !0; return !1; };\r\n    d.getDecimals = function (a) { var b = 0; isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length)); return b; };\r\n    d.wordwrap = function (a, b, c, e) { var h, f, g, k; a += \"\"; if (1 > b)\r\n        return a; h = -1; for (a = (k = a.split(/\\r\\n|\\n|\\r/)).length; ++h < a; k[h] += g) {\r\n        g = k[h];\r\n        for (k[h] = \"\"; g.length > b; k[h] += d.trim(g.slice(0, f)) + ((g = g.slice(f)).length ? c : \"\"))\r\n            f = 2 == e || (f = g.slice(0, b + 1).match(/\\S*(\\s)?$/))[1] ? b : f.input.length - f[0].length || 1 == e && b || f.input.length + (f = g.slice(b).match(/^\\S*/))[0].length;\r\n        g = d.trim(g);\r\n    } return k.join(c); };\r\n    d.trim = function (a) { return a.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\"); };\r\n    d.wrappedText = function (a, b, c, e, h, f, g, k) {\r\n        var l = d.text(a, b, c, e, h, f, g);\r\n        if (l) {\r\n            var m = l.getBBox();\r\n            if (m.width > k) {\r\n                var p = \"\\n\";\r\n                d.isModern || (p = \"<br>\");\r\n                k = Math.floor(k / (m.width /\r\n                    b.length));\r\n                2 < k && (k -= 2);\r\n                b = d.wordwrap(b, k, p, !0);\r\n                l.remove();\r\n                l = d.text(a, b, c, e, h, f, g);\r\n            }\r\n        }\r\n        return l;\r\n    };\r\n    d.getStyle = function (a, b) { var c = \"\"; if (document.defaultView && document.defaultView.getComputedStyle)\r\n        try {\r\n            c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b);\r\n        }\r\n        catch (e) { }\r\n    else\r\n        a.currentStyle && (b = b.replace(/\\-(\\w)/g, function (a, b) { return b.toUpperCase(); }), c = a.currentStyle[b]); return c; };\r\n    d.removePx = function (a) { if (void 0 !== a)\r\n        return Number(a.substring(0, a.length - 2)); };\r\n    d.getURL = function (a, b) { if (a)\r\n        if (\"_self\" != b && b)\r\n            if (\"_top\" == b && window.top)\r\n                window.top.location.href = a;\r\n            else if (\"_parent\" == b && window.parent)\r\n                window.parent.location.href = a;\r\n            else if (\"_blank\" == b)\r\n                window.open(a);\r\n            else {\r\n                var c = document.getElementsByName(b)[0];\r\n                c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a);\r\n            }\r\n        else\r\n            window.location.href = a; };\r\n    d.ifArray = function (a) { return a && \"object\" == typeof a && 0 < a.length ? !0 : !1; };\r\n    d.callMethod = function (a, b) { var c; for (c = 0; c < b.length; c++) {\r\n        var e = b[c];\r\n        if (e) {\r\n            if (e[a])\r\n                e[a]();\r\n            var d = e.length;\r\n            if (0 < d) {\r\n                var f;\r\n                for (f = 0; f < d; f++) {\r\n                    var g = e[f];\r\n                    if (g && g[a])\r\n                        g[a]();\r\n                }\r\n            }\r\n        }\r\n    } };\r\n    d.toNumber = function (a) { return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\")); };\r\n    d.toColor = function (a) { if (\"\" !== a && void 0 !== a)\r\n        if (-1 != a.indexOf(\",\")) {\r\n            a = a.split(\",\");\r\n            var b;\r\n            for (b = 0; b < a.length; b++) {\r\n                var c = a[b].substring(a[b].length - 6, a[b].length);\r\n                a[b] = \"#\" + c;\r\n            }\r\n        }\r\n        else\r\n            a = a.substring(a.length - 6, a.length), a = \"#\" + a; return a; };\r\n    d.toCoordinate = function (a, b, c) { var e; void 0 !== a && (a = String(a), c && c < b && (b = c), e = Number(a), -1 != a.indexOf(\"!\") && (e = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (e = b * Number(a.substr(0, a.length - 1)) / 100)); return e; };\r\n    d.fitToBounds = function (a, b, c) { a < b && (a = b); a > c && (a = c); return a; };\r\n    d.isDefined = function (a) { return void 0 === a ? !1 : !0; };\r\n    d.stripNumbers = function (a) { return a.replace(/[0-9]+/g, \"\"); };\r\n    d.roundTo = function (a, b) { if (0 > b)\r\n        return a; var c = Math.pow(10, b); return Math.round(a * c) / c; };\r\n    d.toFixed = function (a, b) {\r\n        var c = !1;\r\n        0 > a && (c = !0, a = Math.abs(a));\r\n        var e = String(Math.round(a * Math.pow(10, b)));\r\n        if (0 < b) {\r\n            var d = e.length;\r\n            if (d < b) {\r\n                var f;\r\n                for (f = 0; f <\r\n                    b - d; f++)\r\n                    e = \"0\" + e;\r\n            }\r\n            d = e.substring(0, e.length - b);\r\n            \"\" === d && (d = 0);\r\n            e = d + \".\" + e.substring(e.length - b, e.length);\r\n            return c ? \"-\" + e : e;\r\n        }\r\n        return String(e);\r\n    };\r\n    d.formatDuration = function (a, b, c, e, h, f) { var g = d.intervals, k = f.decimalSeparator; if (a >= g[b].contains) {\r\n        var l = a - Math.floor(a / g[b].contains) * g[b].contains;\r\n        \"ss\" == b ? (l = d.formatNumber(l, f), 1 == l.split(k)[0].length && (l = \"0\" + l)) : l = d.roundTo(l, f.precision);\r\n        (\"mm\" == b || \"hh\" == b) && 10 > l && (l = \"0\" + l);\r\n        c = l + \"\" + e[b] + \"\" + c;\r\n        a = Math.floor(a / g[b].contains);\r\n        b = g[b].nextInterval;\r\n        return d.formatDuration(a, b, c, e, h, f);\r\n    } \"ss\" == b && (a = d.formatNumber(a, f), 1 == a.split(k)[0].length && (a = \"0\" + a)); (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a); c = a + \"\" + e[b] + \"\" + c; if (g[h].count > g[b].count)\r\n        for (a = g[b].count; a < g[h].count; a++)\r\n            b = g[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + e[b] + \"\" + c : \"DD\" == b && (c = \"0\" + e[b] + \"\" + c); \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1)); return c; };\r\n    d.formatNumber = function (a, b, c, e, h) { a = d.roundTo(a, b.precision); isNaN(c) && (c = b.precision); var f = b.decimalSeparator; b = b.thousandsSeparator; var g; g = 0 > a ? \"-\" : \"\"; a = Math.abs(a); var k = String(a), l = !1; -1 != k.indexOf(\"e\") && (l = !0); 0 <= c && !l && (k = d.toFixed(a, c)); var m = \"\"; if (l)\r\n        m = k;\r\n    else {\r\n        var k = k.split(\".\"), l = String(k[0]), p;\r\n        for (p = l.length; 0 <= p; p -= 3)\r\n            m = p != l.length ? 0 !== p ? l.substring(p - 3, p) + b + m : l.substring(p - 3, p) + m : l.substring(p - 3, p);\r\n        void 0 !== k[1] && (m = m + f + k[1]);\r\n        void 0 !== c && 0 < c && \"0\" != m && (m = d.addZeroes(m, f, c));\r\n    } m = g + m; \"\" === g && !0 === e && 0 !== a && (m = \"+\" + m); !0 === h && (m += \"%\"); return m; };\r\n    d.addZeroes = function (a, b, c) { a = a.split(b); void 0 === a[1] && 0 < c && (a[1] = \"0\"); return a[1].length < c ? (a[1] += \"0\", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0]; };\r\n    d.scientificToNormal = function (a) { var b; a = String(a).split(\"e\"); var c; if (\"-\" == a[1].substr(0, 1)) {\r\n        b = \"0.\";\r\n        for (c = 0; c < Math.abs(Number(a[1])) - 1; c++)\r\n            b += \"0\";\r\n        b += a[0].split(\".\").join(\"\");\r\n    }\r\n    else {\r\n        var e = 0;\r\n        b = a[0].split(\".\");\r\n        b[1] && (e = b[1].length);\r\n        b = a[0].split(\".\").join(\"\");\r\n        for (c = 0; c < Math.abs(Number(a[1])) - e; c++)\r\n            b += \"0\";\r\n    } return b; };\r\n    d.toScientific = function (a, b) { if (0 === a)\r\n        return \"0\"; var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), e = String(e).split(\".\").join(b); return String(e) + \"e\" + c; };\r\n    d.randomColor = function () { return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6); };\r\n    d.hitTest = function (a, b, c) { var e = !1, h = a.x, f = a.x + a.width, g = a.y, k = a.y + a.height, l = d.isInRectangle; e || (e = l(h, g, b)); e || (e = l(h, k, b)); e || (e = l(f, g, b)); e || (e = l(f, k, b)); e || !0 === c || (e = d.hitTest(b, a, !0)); return e; };\r\n    d.isInRectangle = function (a, b, c) { return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1; };\r\n    d.isPercents = function (a) { if (-1 != String(a).indexOf(\"%\"))\r\n        return !0; };\r\n    d.formatValue = function (a, b, c, e, h, f, g, k) { if (b) {\r\n        void 0 === h && (h = \"\");\r\n        var l;\r\n        for (l = 0; l < c.length; l++) {\r\n            var m = c[l], p = b[m];\r\n            void 0 !== p && (p = f ? d.addPrefix(p, k, g, e) : d.formatNumber(p, e), a = a.replace(new RegExp(\"\\\\[\\\\[\" + h + \"\" + m + \"\\\\]\\\\]\", \"g\"), p));\r\n        }\r\n    } return a; };\r\n    d.formatDataContextValue = function (a, b) { if (a) {\r\n        var c = a.match(/\\[\\[.*?\\]\\]/g), e;\r\n        for (e = 0; e < c.length; e++) {\r\n            var d = c[e], d = d.substr(2, d.length - 4);\r\n            void 0 !== b[d] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + d + \"\\\\]\\\\]\", \"g\"), b[d]));\r\n        }\r\n    } return a; };\r\n    d.massReplace = function (a, b) { for (var c in b)\r\n        if (b.hasOwnProperty(c)) {\r\n            var e = b[c];\r\n            void 0 === e && (e = \"\");\r\n            a = a.replace(c, e);\r\n        } return a; };\r\n    d.cleanFromEmpty = function (a) { return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\"); };\r\n    d.addPrefix = function (a, b, c, e, h) { var f = d.formatNumber(a, e), g = \"\", k, l, m; if (0 === a)\r\n        return \"0\"; 0 > a && (g = \"-\"); a = Math.abs(a); if (1 < a)\r\n        for (k = b.length - 1; -1 < k; k--) {\r\n            if (a >= b[k].number && (l = a / b[k].number, m = Number(e.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, { precision: -1, decimalSeparator: e.decimalSeparator, thousandsSeparator: e.thousandsSeparator }), !h || l == c)) {\r\n                f = g + \"\" + m + \"\" + b[k].prefix;\r\n                break;\r\n            }\r\n        }\r\n    else\r\n        for (k = 0; k < c.length; k++)\r\n            if (a <= c[k].number) {\r\n                l = a / c[k].number;\r\n                m = Math.abs(Math.floor(Math.log(l) * Math.LOG10E));\r\n                l = d.roundTo(l, m);\r\n                f = g + \"\" + l + \"\" + c[k].prefix;\r\n                break;\r\n            } return f; };\r\n    d.remove = function (a) { a && a.remove(); };\r\n    d.getEffect = function (a) { \">\" == a && (a = \"easeOutSine\"); \"<\" == a && (a = \"easeInSine\"); \"elastic\" == a && (a = \"easeOutElastic\"); return a; };\r\n    d.getObjById = function (a, b) { var c, e; for (e = 0; e < a.length; e++) {\r\n        var d = a[e];\r\n        if (d.id == b) {\r\n            c = d;\r\n            break;\r\n        }\r\n    } return c; };\r\n    d.applyTheme = function (a, b, c) { b || (b = d.theme); try {\r\n        b = JSON.parse(JSON.stringify(b));\r\n    }\r\n    catch (e) { } b && b[c] && d.extend(a, b[c]); };\r\n    d.isString = function (a) { return \"string\" == typeof a ? !0 : !1; };\r\n    d.extend = function (a, b, c) { var e; a || (a = {}); for (e in b)\r\n        c ? a.hasOwnProperty(e) || (a[e] = b[e]) : a[e] = b[e]; return a; };\r\n    d.copyProperties = function (a, b) { for (var c in a)\r\n        a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c]); };\r\n    d.processObject = function (a, b, c, e) { if (!1 === a instanceof b && (a = e ? d.extend(new b(c), a) : d.extend(a, new b(c), !0), a.listeners))\r\n        for (var h in a.listeners)\r\n            b = a.listeners[h], a.addListener(b.event, b.method); return a; };\r\n    d.fixNewLines = function (a) { var b = RegExp(\"\\\\n\", \"g\"); a && (a = a.replace(b, \"<br />\")); return a; };\r\n    d.fixBrakes = function (a) { if (d.isModern) {\r\n        var b = RegExp(\"<br>\", \"g\");\r\n        a && (a = a.replace(b, \"\\n\"));\r\n    }\r\n    else\r\n        a = d.fixNewLines(a); return a; };\r\n    d.deleteObject = function (a, b) { if (a) {\r\n        if (void 0 === b || null === b)\r\n            b = 20;\r\n        if (0 !== b)\r\n            if (\"[object Array]\" === Object.prototype.toString.call(a))\r\n                for (var c = 0; c < a.length; c++)\r\n                    d.deleteObject(a[c], b - 1), a[c] = null;\r\n            else if (a && !a.tagName)\r\n                try {\r\n                    for (c in a.theme = null, a)\r\n                        a[c] && (\"object\" == typeof a[c] && d.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null));\r\n                }\r\n                catch (e) { }\r\n    } };\r\n    d.bounce = function (a, b, c, e, d) { return (b /= d) < 1 / 2.75 ? 7.5625 * e * b * b + c : b < 2 / 2.75 ? e * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? e * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : e * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c; };\r\n    d.easeInOutQuad = function (a, b, c, e, d) { b /= d / 2; if (1 > b)\r\n        return e / 2 * b * b + c; b--; return -e / 2 * (b * (b - 2) - 1) + c; };\r\n    d.easeInSine = function (a, b, c, e, d) { return -e * Math.cos(b / d * (Math.PI / 2)) + e + c; };\r\n    d.easeOutSine = function (a, b, c, e, d) {\r\n        return e * Math.sin(b / d * (Math.PI /\r\n            2)) + c;\r\n    };\r\n    d.easeOutElastic = function (a, b, c, e, d) { a = 1.70158; var f = 0, g = e; if (0 === b)\r\n        return c; if (1 == (b /= d))\r\n        return c + e; f || (f = .3 * d); g < Math.abs(e) ? (g = e, a = f / 4) : a = f / (2 * Math.PI) * Math.asin(e / g); return g * Math.pow(2, -10 * b) * Math.sin(2 * (b * d - a) * Math.PI / f) + e + c; };\r\n    d.fixStepE = function (a) { a = a.toExponential(0).split(\"e\"); var b = Number(a[1]); 9 == Number(a[0]) && b++; return d.generateNumber(1, b); };\r\n    d.generateNumber = function (a, b) { var c = \"\", e; e = 0 > b ? Math.abs(b) - 1 : Math.abs(b); var d; for (d = 0; d < e; d++)\r\n        c += \"0\"; return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c); };\r\n    d.setCN = function (a, b, c, e) { if (a.addClassNames && b && (b = b.node) && c) {\r\n        var d = b.getAttribute(\"class\");\r\n        a = a.classNamePrefix + \"-\";\r\n        e && (a = \"\");\r\n        d ? b.setAttribute(\"class\", d + \" \" + a + c) : b.setAttribute(\"class\", a + c);\r\n    } };\r\n    d.removeCN = function (a, b, c) { b && (b = b.node) && c && (b = b.classList) && b.remove(a.classNamePrefix + \"-\" + c); };\r\n    d.parseDefs = function (a, b) { for (var c in a) {\r\n        var e = typeof a[c];\r\n        if (0 < a[c].length && \"object\" == e)\r\n            for (var h = 0; h < a[c].length; h++)\r\n                e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c][h], e);\r\n        else\r\n            \"object\" == e ? (e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c], e)) : b.setAttribute(c, a[c]);\r\n    } };\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.AxisBase = d.Class({ construct: function (a) { this.createEvents(\"clickItem\", \"rollOverItem\", \"rollOutItem\", \"rollOverGuide\", \"rollOutGuide\", \"clickGuide\"); this.titleDY = this.y = this.x = this.dy = this.dx = 0; this.axisThickness = 1; this.axisColor = \"#000000\"; this.axisAlpha = 1; this.gridCount = this.tickLength = 5; this.gridAlpha = .15; this.gridThickness = 1; this.gridColor = \"#000000\"; this.dashLength = 0; this.labelFrequency = 1; this.showLastLabel = this.showFirstLabel = !0; this.fillColor = \"#FFFFFF\"; this.fillAlpha = 0; this.labelsEnabled = !0; this.labelRotation = 0; this.autoGridCount = !0; this.offset = 0; this.guides = []; this.visible = !0; this.counter = 0; this.guides = []; this.ignoreAxisWidth = this.inside = !1; this.minHorizontalGap = 75; this.minVerticalGap = 35; this.titleBold = !0; this.minorGridEnabled = !1; this.minorGridAlpha = .07; this.autoWrap = !1; this.titleAlign = \"middle\"; this.labelOffset = 0; this.bcn = \"axis-\"; this.centerLabels = !1; this.firstDayOfWeek = 1; this.centerLabelOnFullPeriod = this.markPeriodChange = this.boldPeriodBeginning = !0; this.titleWidth = 0; this.periods = [{ period: \"fff\", count: 1 }, { period: \"fff\", count: 5 }, { period: \"fff\", count: 10 }, { period: \"fff\", count: 50 }, { period: \"fff\", count: 100 }, { period: \"fff\", count: 500 }, { period: \"ss\", count: 1 }, { period: \"ss\", count: 5 }, { period: \"ss\", count: 10 }, { period: \"ss\", count: 30 }, { period: \"mm\", count: 1 }, { period: \"mm\", count: 5 }, { period: \"mm\", count: 10 }, { period: \"mm\", count: 30 }, { period: \"hh\", count: 1 }, { period: \"hh\", count: 3 }, { period: \"hh\", count: 6 }, { period: \"hh\", count: 12 }, { period: \"DD\", count: 1 }, { period: \"DD\", count: 2 }, { period: \"DD\", count: 3 }, { period: \"DD\", count: 4 }, { period: \"DD\", count: 5 }, { period: \"WW\", count: 1 }, { period: \"MM\", count: 1 }, { period: \"MM\", count: 2 }, { period: \"MM\", count: 3 }, { period: \"MM\", count: 6 }, { period: \"YYYY\", count: 1 }, { period: \"YYYY\", count: 2 }, { period: \"YYYY\", count: 5 }, { period: \"YYYY\", count: 10 }, { period: \"YYYY\", count: 50 }, { period: \"YYYY\", count: 100 }]; this.dateFormats = [{ period: \"fff\", format: \"NN:SS.QQQ\" }, { period: \"ss\", format: \"JJ:NN:SS\" }, { period: \"mm\", format: \"JJ:NN\" }, { period: \"hh\", format: \"JJ:NN\" }, { period: \"DD\", format: \"MMM DD\" }, { period: \"WW\", format: \"MMM DD\" }, { period: \"MM\", format: \"MMM\" }, { period: \"YYYY\", format: \"YYYY\" }]; this.nextPeriod = { fff: \"ss\", ss: \"mm\", mm: \"hh\", hh: \"DD\", DD: \"MM\", MM: \"YYYY\" }; d.applyTheme(this, a, \"AxisBase\"); }, zoom: function (a, b) { this.start = a; this.end = b; this.dataChanged = !0; this.draw(); }, fixAxisPosition: function () { var a = this.position; \"H\" == this.orientation ? (\"left\" == a && (a = \"bottom\"), \"right\" == a && (a = \"top\")) : (\"bottom\" == a && (a = \"left\"), \"top\" == a && (a = \"right\")); this.position = a; }, init: function () { this.createBalloon(); }, draw: function () { var a = this.chart; this.prevBY = this.prevBX = NaN; this.allLabels = []; this.counter = 0; this.destroy(); this.fixAxisPosition(); this.setBalloonBounds(); this.labels = []; var b = a.container, c = b.set(); a.gridSet.push(c); this.set = c; b = b.set(); a.axesLabelsSet.push(b); this.labelsSet = b; this.axisLine = new this.axisRenderer(this); this.autoGridCount ? (\"V\" == this.orientation ? (a = this.height / this.minVerticalGap, 3 > a && (a = 3)) : a = this.width / this.minHorizontalGap, this.gridCountR = Math.max(a, 1)) : this.gridCountR = this.gridCount; this.axisWidth = this.axisLine.axisWidth; this.addTitle(); }, setOrientation: function (a) { this.orientation = a ? \"H\" : \"V\"; }, addTitle: function () { var a = this.title; this.titleLabel = null; if (a) {\r\n            var b = this.chart, c = this.titleColor;\r\n            void 0 === c && (c = b.color);\r\n            var e = this.titleFontSize;\r\n            isNaN(e) && (e = b.fontSize + 1);\r\n            a = d.text(b.container, a, c, b.fontFamily, e, this.titleAlign, this.titleBold);\r\n            d.setCN(b, a, this.bcn + \"title\");\r\n            this.titleLabel = a;\r\n        } }, positionTitle: function () { var a = this.titleLabel; if (a) {\r\n            var b, c, e = this.labelsSet, h = {};\r\n            0 < e.length() ? h = e.getBBox() : (h.x = 0, h.y = 0, h.width = this.width, h.height = this.height, d.VML && (h.y += this.y, h.x += this.x));\r\n            e.push(a);\r\n            var e = h.x, f = h.y;\r\n            d.VML && (f -= this.y, e -= this.x);\r\n            var g = h.width, h = h.height, k = this.width, l = this.height, m = 0, p = a.getBBox().height / 2, q = this.inside, n = this.titleAlign;\r\n            switch (this.position) {\r\n                case \"top\":\r\n                    b = \"left\" == n ? -1 : \"right\" == n ? k : k / 2;\r\n                    c = f - 10 - p;\r\n                    break;\r\n                case \"bottom\":\r\n                    b = \"left\" == n ? -1 : \"right\" == n ? k : k / 2;\r\n                    c = f + h + 10 + p;\r\n                    break;\r\n                case \"left\":\r\n                    b = e - 10 - p;\r\n                    q && (b -= 5);\r\n                    m = -90;\r\n                    c = (\"left\" == n ? l + 1 : \"right\" == n ? -1 : l / 2) + this.titleDY;\r\n                    this.titleWidth = p + 10;\r\n                    break;\r\n                case \"right\": b = e + g + 10 + p, q && (b += 7), c = (\"left\" == n ? l + 2 : \"right\" == n ? -2 : l / 2) + this.titleDY, this.titleWidth = p + 10, m = -90;\r\n            }\r\n            this.marginsChanged ? (a.translate(b, c), this.tx = b, this.ty = c) : a.translate(this.tx, this.ty);\r\n            this.marginsChanged = !1;\r\n            isNaN(this.titleRotation) || (m = this.titleRotation);\r\n            0 !== m && a.rotate(m);\r\n        } }, pushAxisItem: function (a, b) { var c = this, e = a.graphics(); 0 < e.length() && (b ? c.labelsSet.push(e) : c.set.push(e)); if (e = a.getLabel())\r\n            c.labelsSet.push(e), e.click(function (b) { c.handleMouse(b, a, \"clickItem\"); }).touchend(function (b) { c.handleMouse(b, a, \"clickItem\"); }).mouseover(function (b) { c.handleMouse(b, a, \"rollOverItem\"); }).mouseout(function (b) { c.handleMouse(b, a, \"rollOutItem\"); }); }, handleMouse: function (a, b, c) { this.fire({ type: c, value: b.value, serialDataItem: b.serialDataItem, axis: this, target: b.label, chart: this.chart, event: a }); }, addGuide: function (a) { for (var b = this.guides, c = !1, e = b.length, h = 0; h < b.length; h++)\r\n            b[h] == a && (c = !0, e = h); a = d.processObject(a, d.Guide, this.theme); a.id || (a.id = \"guideAuto\" + e + \"_\" + (new Date).getTime()); c || b.push(a); }, removeGuide: function (a) { var b = this.guides, c; for (c = 0; c < b.length; c++)\r\n            b[c] == a && b.splice(c, 1); }, handleGuideOver: function (a) { clearTimeout(this.chart.hoverInt); var b = a.graphics.getBBox(), c = this.x + b.x + b.width / 2, b = this.y + b.y + b.height / 2, e = a.fillColor; void 0 === e && (e = a.lineColor); this.chart.showBalloon(a.balloonText, e, !0, c, b); this.fire({ type: \"rollOverGuide\", guide: a, chart: this.chart }); }, handleGuideOut: function (a) { this.chart.hideBalloon(); this.fire({ type: \"rollOutGuide\", guide: a, chart: this.chart }); }, handleGuideClick: function (a) { this.chart.hideBalloon(); this.fire({ type: \"clickGuide\", guide: a, chart: this.chart }); }, addEventListeners: function (a, b) { var c = this; a.mouseover(function () { c.handleGuideOver(b); }); a.mouseup(function () { c.handleGuideClick(b); }); a.touchstart(function () { c.handleGuideOver(b); }); a.mouseout(function () { c.handleGuideOut(b); }); }, getBBox: function () { var a; this.labelsSet && (a = this.labelsSet.getBBox()); a ? d.VML || (a = { x: a.x + this.x, y: a.y + this.y, width: a.width, height: a.height }) : a = { x: 0, y: 0, width: 0, height: 0 }; return a; }, destroy: function () { d.remove(this.set); d.remove(this.labelsSet); var a = this.axisLine; a && d.remove(a.axisSet); d.remove(this.grid0); }, chooseMinorFrequency: function (a) { for (var b = 10; 0 < b; b--)\r\n            if (a / b == Math.round(a / b))\r\n                return a / b; }, parseDatesDraw: function () {\r\n            var a, b = this.chart, c = this.showFirstLabel, e = this.showLastLabel, h, f = \"\", g = d.extractPeriod(this.minPeriod), k = d.getPeriodDuration(g.period, g.count), l, m, p, q, n, t = this.firstDayOfWeek, r = this.boldPeriodBeginning;\r\n            a = this.minorGridEnabled;\r\n            var w, z = this.gridAlpha, x, u = this.choosePeriod(0), A = u.period, u = u.count, y = d.getPeriodDuration(A, u);\r\n            y < k && (A = g.period, u = g.count, y = k);\r\n            g = A;\r\n            \"WW\" == g && (g = \"DD\");\r\n            this.stepWidth = this.getStepWidth(this.timeDifference);\r\n            var B = Math.ceil(this.timeDifference / y) + 5, D = l = d.resetDateToMin(new Date(this.startTime - y), A, u, t).getTime();\r\n            if (g == A && 1 == u && this.centerLabelOnFullPeriod || this.autoWrap || this.centerLabels)\r\n                p = y * this.stepWidth, this.autoWrap && !this.centerLabels && (p = -p);\r\n            this.cellWidth = k * this.stepWidth;\r\n            q = Math.round(l / y);\r\n            k = -1;\r\n            q / 2 == Math.round(q / 2) && (k = -2, l -= y);\r\n            q = this.firstTime;\r\n            var C = 0, I = 0;\r\n            a && 1 < u && (w = this.chooseMinorFrequency(u), x = d.getPeriodDuration(A, w), \"DD\" == A && (x += d.getPeriodDuration(\"hh\")), \"fff\" == A && (x = 1));\r\n            if (0 < this.gridCountR)\r\n                for (B - 5 - k > this.autoRotateCount && !isNaN(this.autoRotateAngle) && (this.labelRotationR = this.autoRotateAngle), a = k; a <= B; a++) {\r\n                    n = q + y * (a + Math.floor((D - q) / y)) - C;\r\n                    \"DD\" == A && (n += 36E5);\r\n                    n = d.resetDateToMin(new Date(n), A, u, t).getTime();\r\n                    \"MM\" == A && (h = (n - l) / y, 1.5 <= (n - l) / y && (n = n - (h - 1) * y + d.getPeriodDuration(\"DD\", 3), n = d.resetDateToMin(new Date(n), A, 1).getTime(), C += y));\r\n                    h = (n - this.startTime) * this.stepWidth;\r\n                    if (\"radar\" == b.type) {\r\n                        if (h = this.axisWidth -\r\n                            h, 0 > h || h > this.axisWidth)\r\n                            continue;\r\n                    }\r\n                    else\r\n                        this.rotate ? \"date\" == this.type && \"middle\" == this.gridPosition && (I = -y * this.stepWidth / 2) : \"date\" == this.type && (h = this.axisWidth - h);\r\n                    f = !1;\r\n                    this.nextPeriod[g] && (f = this.checkPeriodChange(this.nextPeriod[g], 1, n, l, g));\r\n                    l = !1;\r\n                    f && this.markPeriodChange ? (f = this.dateFormatsObject[this.nextPeriod[g]], this.twoLineMode && (f = this.dateFormatsObject[g] + \"\\n\" + f, f = d.fixBrakes(f)), l = !0) : f = this.dateFormatsObject[g];\r\n                    r || (l = !1);\r\n                    this.currentDateFormat = f;\r\n                    f = d.formatDate(new Date(n), f, b);\r\n                    if (a == k && !c || a == B && !e)\r\n                        f = \" \";\r\n                    this.labelFunction && (f = this.labelFunction(f, new Date(n), this, A, u, m).toString());\r\n                    this.boldLabels && (l = !0);\r\n                    m = new this.axisItemRenderer(this, h, f, !1, p, I, !1, l);\r\n                    this.pushAxisItem(m);\r\n                    m = l = n;\r\n                    if (!isNaN(w))\r\n                        for (h = 1; h < u; h += w)\r\n                            this.gridAlpha = this.minorGridAlpha, f = n + x * h, f = d.resetDateToMin(new Date(f), A, w, t).getTime(), f = new this.axisItemRenderer(this, (f - this.startTime) * this.stepWidth, void 0, void 0, void 0, void 0, void 0, void 0, void 0, !0), this.pushAxisItem(f);\r\n                    this.gridAlpha = z;\r\n                }\r\n        }, choosePeriod: function (a) { var b = d.getPeriodDuration(this.periods[a].period, this.periods[a].count), c = this.periods; return this.timeDifference < b && 0 < a ? c[a - 1] : Math.ceil(this.timeDifference / b) <= this.gridCountR ? c[a] : a + 1 < c.length ? this.choosePeriod(a + 1) : c[a]; }, getStepWidth: function (a) { var b; this.startOnAxis ? (b = this.axisWidth / (a - 1), 1 == a && (b = this.axisWidth)) : b = this.axisWidth / a; return b; }, timeZoom: function (a, b) { this.startTime = a; this.endTime = b; }, minDuration: function () { var a = d.extractPeriod(this.minPeriod); return d.getPeriodDuration(a.period, a.count); }, checkPeriodChange: function (a, b, c, e, h) { c = new Date(c); var f = new Date(e), g = this.firstDayOfWeek; e = b; \"DD\" == a && (b = 1); c = d.resetDateToMin(c, a, b, g).getTime(); b = d.resetDateToMin(f, a, b, g).getTime(); return \"DD\" == a && \"hh\" != h && c - b < d.getPeriodDuration(a, e) - d.getPeriodDuration(\"hh\", 1) ? !1 : c != b ? !0 : !1; }, generateDFObject: function () { this.dateFormatsObject = {}; var a; for (a = 0; a < this.dateFormats.length; a++) {\r\n            var b = this.dateFormats[a];\r\n            this.dateFormatsObject[b.period] = b.format;\r\n        } }, hideBalloon: function () { this.balloon && this.balloon.hide && this.balloon.hide(); this.prevBY = this.prevBX = NaN; }, formatBalloonText: function (a) { return a; }, showBalloon: function (a, b, c, e) { var d = this.offset; switch (this.position) {\r\n            case \"bottom\":\r\n                b = this.height + d;\r\n                break;\r\n            case \"top\":\r\n                b = -d;\r\n                break;\r\n            case \"left\":\r\n                a = -d;\r\n                break;\r\n            case \"right\": a = this.width + d;\r\n        } c || (c = this.currentDateFormat); if (\"V\" == this.orientation) {\r\n            if (0 > b || b > this.height)\r\n                return;\r\n            if (isNaN(b)) {\r\n                this.hideBalloon();\r\n                return;\r\n            }\r\n            b = this.adjustBalloonCoordinate(b, e);\r\n            e = this.coordinateToValue(b);\r\n        }\r\n        else {\r\n            if (0 > a || a > this.width)\r\n                return;\r\n            if (isNaN(a)) {\r\n                this.hideBalloon();\r\n                return;\r\n            }\r\n            a = this.adjustBalloonCoordinate(a, e);\r\n            e = this.coordinateToValue(a);\r\n        } var f; if (d = this.chart.chartCursor)\r\n            f = d.index; if (this.balloon && void 0 !== e && this.balloon.enabled) {\r\n            if (this.balloonTextFunction) {\r\n                if (\"date\" == this.type || !0 === this.parseDates)\r\n                    e = new Date(e);\r\n                e = this.balloonTextFunction(e);\r\n            }\r\n            else\r\n                this.balloonText ? e = this.formatBalloonText(this.balloonText, f, c) : isNaN(e) || (e = this.formatValue(e, c));\r\n            if (a != this.prevBX || b != this.prevBY)\r\n                this.balloon.setPosition(a, b), this.prevBX = a, this.prevBY = b, e && this.balloon.showBalloon(e);\r\n        } }, adjustBalloonCoordinate: function (a) { return a; }, createBalloon: function () { var a = this.chart, b = a.chartCursor; b && (b = b.cursorPosition, \"mouse\" != b && (this.stickBalloonToCategory = !0), \"start\" == b && (this.stickBalloonToStart = !0), \"ValueAxis\" == this.cname && (this.stickBalloonToCategory = !1)); this.balloon && (this.balloon.destroy && this.balloon.destroy(), d.extend(this.balloon, a.balloon, !0)); }, setBalloonBounds: function () { var a = this.balloon; if (a) {\r\n            var b = this.chart;\r\n            a.cornerRadius = 0;\r\n            a.shadowAlpha = 0;\r\n            a.borderThickness = 1;\r\n            a.borderAlpha = 1;\r\n            a.adjustBorderColor = !1;\r\n            a.showBullet = !1;\r\n            this.balloon = a;\r\n            a.chart = b;\r\n            a.mainSet = b.plotBalloonsSet;\r\n            a.pointerWidth = this.tickLength;\r\n            if (this.parseDates || \"date\" == this.type)\r\n                a.pointerWidth = 0;\r\n            a.className = this.id;\r\n            b = \"V\";\r\n            \"V\" == this.orientation && (b = \"H\");\r\n            this.stickBalloonToCategory || (a.animationDuration = 0);\r\n            var c, e, d, f, g = this.inside, k = this.width, l = this.height;\r\n            switch (this.position) {\r\n                case \"bottom\":\r\n                    c = 0;\r\n                    e = k;\r\n                    g ? (d = 0, f = l) : (d = l, f = l + 1E3);\r\n                    break;\r\n                case \"top\":\r\n                    c = 0;\r\n                    e = k;\r\n                    g ? (d = 0, f = l) : (d = -1E3, f = 0);\r\n                    break;\r\n                case \"left\":\r\n                    d = 0;\r\n                    f = l;\r\n                    g ? (c = 0, e = k) : (c = -1E3, e = 0);\r\n                    break;\r\n                case \"right\": d = 0, f = l, g ? (c = 0, e = k) : (c = k, e = k + 1E3);\r\n            }\r\n            a.drop || (a.pointerOrientation = b);\r\n            a.setBounds(c, d, e, f);\r\n        } } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.ValueAxis = d.Class({ inherits: d.AxisBase, construct: function (a) { this.cname = \"ValueAxis\"; this.createEvents(\"axisChanged\", \"logarithmicAxisFailed\", \"axisZoomed\", \"axisIntZoomed\"); d.ValueAxis.base.construct.call(this, a); this.dataChanged = !0; this.stackType = \"none\"; this.position = \"left\"; this.unitPosition = \"right\"; this.includeAllValues = this.recalculateToPercents = this.includeHidden = this.includeGuidesInMinMax = this.integersOnly = !1; this.durationUnits = { DD: \"d. \", hh: \":\", mm: \":\", ss: \"\" }; this.scrollbar = !1; this.baseValue = 0; this.radarCategoriesEnabled = !0; this.axisFrequency = 1; this.gridType = \"polygons\"; this.useScientificNotation = !1; this.axisTitleOffset = 10; this.pointPosition = \"axis\"; this.minMaxMultiplier = 1; this.logGridLimit = 2; this.totalTextOffset = this.treatZeroAs = 0; this.minPeriod = \"ss\"; this.relativeStart = 0; this.relativeEnd = 1; d.applyTheme(this, a, this.cname); }, updateData: function () { 0 >= this.gridCountR && (this.gridCountR = 1); this.totals = []; this.data = this.chart.chartData; var a = this.chart; \"xy\" != a.type && (this.stackGraphs(\"smoothedLine\"), this.stackGraphs(\"line\"), this.stackGraphs(\"column\"), this.stackGraphs(\"step\")); this.recalculateToPercents && this.recalculate(); if (this.synchronizationMultiplier && this.synchronizeWith)\r\n            d.isString(this.synchronizeWith) && (this.synchronizeWith = a.getValueAxisById(this.synchronizeWith)), this.synchronizeWith && (this.synchronizeWithAxis(this.synchronizeWith), this.foundGraphs = !0);\r\n        else if (this.foundGraphs = !1, this.getMinMax(), 0 === this.start && this.end == this.data.length - 1 && isNaN(this.minZoom) && isNaN(this.maxZoom) || isNaN(this.fullMin) && isNaN(this.fullMax))\r\n            this.fullMin = this.min, this.fullMax = this.max, \"date\" != this.type && this.strictMinMax && (isNaN(this.minimum) || (this.fullMin = this.minimum), isNaN(this.maximum) || (this.fullMax = this.maximum)), this.logarithmic && (this.fullMin = this.logMin, 0 === this.fullMin && (this.fullMin = this.treatZeroAs)), \"date\" == this.type && (this.minimumDate || (this.fullMin = this.minRR), this.maximumDate || (this.fullMax = this.maxRR), this.strictMinMax && (this.minimumDate && (this.fullMin = this.minimumDate.getTime()), this.maximumDate && (this.fullMax = this.maximumDate.getTime()))); }, draw: function () {\r\n            d.ValueAxis.base.draw.call(this);\r\n            var a = this.chart, b = this.set;\r\n            this.labelRotationR = this.labelRotation;\r\n            d.setCN(a, this.set, \"value-axis value-axis-\" + this.id);\r\n            d.setCN(a, this.labelsSet, \"value-axis value-axis-\" + this.id);\r\n            d.setCN(a, this.axisLine.axisSet, \"value-axis value-axis-\" + this.id);\r\n            var c = this.type;\r\n            \"duration\" == c && (this.duration = \"ss\");\r\n            !0 === this.dataChanged && (this.updateData(), this.dataChanged = !1);\r\n            \"date\" == c && (this.logarithmic = !1, this.min = this.minRR, this.max = this.maxRR, this.reversed = !1, this.getDateMinMax());\r\n            if (this.logarithmic) {\r\n                var e = this.treatZeroAs, h = this.getExtremes(0, this.data.length - 1).min;\r\n                !isNaN(this.minimum) && this.minimum < h && (h = this.minimum);\r\n                this.logMin = h;\r\n                this.minReal < h && (this.minReal = h);\r\n                isNaN(this.minReal) && (this.minReal = h);\r\n                0 < e && 0 === h && (this.minReal = h = e);\r\n                if (0 >= h || 0 >= this.minimum) {\r\n                    this.fire({ type: \"logarithmicAxisFailed\", chart: a });\r\n                    return;\r\n                }\r\n            }\r\n            this.grid0 = null;\r\n            var f, g, k = a.dx, l = a.dy, e = !1, h = this.logarithmic;\r\n            if (isNaN(this.min) || isNaN(this.max) || !this.foundGraphs || Infinity == this.min || -Infinity == this.max)\r\n                e = !0;\r\n            else {\r\n                \"date\" == this.type && this.min == this.max && (this.max += this.minDuration(), this.min -= this.minDuration());\r\n                var m = this.labelFrequency, p = this.showFirstLabel, q = this.showLastLabel, n = 1, t = 0;\r\n                this.minCalc = this.min;\r\n                this.maxCalc = this.max;\r\n                if (this.strictMinMax && (isNaN(this.minimum) || (this.min = this.minimum), isNaN(this.maximum) || (this.max = this.maximum), this.min == this.max))\r\n                    return;\r\n                isNaN(this.minZoom) || (this.minReal = this.min = this.minZoom);\r\n                isNaN(this.maxZoom) || (this.max = this.maxZoom);\r\n                if (this.logarithmic) {\r\n                    g = this.fullMin;\r\n                    var r = this.fullMax;\r\n                    isNaN(this.minimum) || (g = this.minimum);\r\n                    isNaN(this.maximum) || (r = this.maximum);\r\n                    var r = Math.log(r) * Math.LOG10E - Math.log(g) * Math.LOG10E, w = Math.log(this.max) / Math.LN10 - Math.log(g) * Math.LOG10E;\r\n                    this.relativeStart = d.roundTo((Math.log(this.minReal) / Math.LN10 - Math.log(g) * Math.LOG10E) / r, 5);\r\n                    this.relativeEnd = d.roundTo(w / r, 5);\r\n                }\r\n                else\r\n                    this.relativeStart = d.roundTo(d.fitToBounds((this.min - this.fullMin) / (this.fullMax - this.fullMin), 0, 1), 5), this.relativeEnd = d.roundTo(d.fitToBounds((this.max - this.fullMin) / (this.fullMax - this.fullMin), 0, 1), 5);\r\n                var r = Math.round((this.maxCalc - this.minCalc) / this.step) + 1, z;\r\n                !0 === h ? (z = Math.log(this.max) * Math.LOG10E - Math.log(this.minReal) * Math.LOG10E, this.stepWidth = this.axisWidth / z, z > this.logGridLimit && (r = Math.ceil(Math.log(this.max) * Math.LOG10E) + 1, t = Math.round(Math.log(this.minReal) * Math.LOG10E), r > this.gridCountR && (n = Math.ceil(r / this.gridCountR)))) : this.stepWidth = this.axisWidth / (this.max - this.min);\r\n                var x = 0;\r\n                1 > this.step && -1 < this.step && (x = d.getDecimals(this.step));\r\n                this.integersOnly && (x = 0);\r\n                x > this.maxDecCount && (x = this.maxDecCount);\r\n                w = this.precision;\r\n                isNaN(w) || (x = w);\r\n                isNaN(this.maxZoom) && (this.max = d.roundTo(this.max, this.maxDecCount), this.min = d.roundTo(this.min, this.maxDecCount));\r\n                g = {};\r\n                g.precision = x;\r\n                g.decimalSeparator = a.nf.decimalSeparator;\r\n                g.thousandsSeparator = a.nf.thousandsSeparator;\r\n                this.numberFormatter = g;\r\n                var u;\r\n                this.exponential = !1;\r\n                for (g = t; g < r; g += n) {\r\n                    var A = d.roundTo(this.step * g + this.min, x);\r\n                    -1 != String(A).indexOf(\"e\") && (this.exponential = !0);\r\n                }\r\n                this.duration && (this.maxInterval = d.getMaxInterval(this.max, this.duration));\r\n                var x = this.step, y, A = this.minorGridAlpha;\r\n                this.minorGridEnabled && (y = this.getMinorGridStep(x, this.stepWidth * x));\r\n                if (this.autoGridCount || 0 !== this.gridCount)\r\n                    if (\"date\" == c)\r\n                        this.generateDFObject(), this.timeDifference = this.max - this.min, this.maxTime = this.lastTime = this.max, this.startTime = this.firstTime = this.min, this.parseDatesDraw();\r\n                    else\r\n                        for (r >= this.autoRotateCount && !isNaN(this.autoRotateAngle) && (this.labelRotationR = this.autoRotateAngle), c = this.minCalc, h && (r++, c = this.maxCalc - r * x), this.gridCountReal = r, g = this.startCount = t; g < r; g += n)\r\n                            if (t = x * g + c, t = d.roundTo(t, this.maxDecCount + 1), !this.integersOnly || Math.round(t) == t)\r\n                                if (isNaN(w) || Number(d.toFixed(t, w)) == t) {\r\n                                    if (!0 === h)\r\n                                        if (z > this.logGridLimit)\r\n                                            t = Math.pow(10, g);\r\n                                        else if (0 >= t && (t = c + x * g + x / 2, 0 >= t))\r\n                                            continue;\r\n                                    u = this.formatValue(t, !1, g);\r\n                                    Math.round(g / m) != g / m && (u = void 0);\r\n                                    if (0 === g && !p || g == r - 1 && !q)\r\n                                        u = \" \";\r\n                                    f = this.getCoordinate(t);\r\n                                    var B;\r\n                                    this.rotate && this.autoWrap && (B = this.stepWidth * x - 10);\r\n                                    u = new this.axisItemRenderer(this, f, u, void 0, B, void 0, void 0, this.boldLabels);\r\n                                    this.pushAxisItem(u);\r\n                                    if (t == this.baseValue && \"radar\" != a.type) {\r\n                                        var D, C, I = this.width, H = this.height;\r\n                                        \"H\" == this.orientation ? 0 <= f && f <= I + 1 && (D = [f, f, f + k], C = [H, 0, l]) : 0 <= f && f <= H + 1 && (D = [0, I, I + k], C = [f, f, f + l]);\r\n                                        D && (f = d.fitToBounds(2 * this.gridAlpha, 0, 1), isNaN(this.zeroGridAlpha) || (f = this.zeroGridAlpha), f = d.line(a.container, D, C, this.gridColor, f, 1, this.dashLength), f.translate(this.x, this.y), this.grid0 = f, a.axesSet.push(f), f.toBack(), d.setCN(a, f, this.bcn + \"zero-grid-\" + this.id), d.setCN(a, f, this.bcn + \"zero-grid\"));\r\n                                    }\r\n                                    if (!isNaN(y) && 0 < A && g < r - 1) {\r\n                                        f = x / y;\r\n                                        h && (y = x * (g + n) + this.minCalc, y = d.roundTo(y, this.maxDecCount + 1), z > this.logGridLimit && (y = Math.pow(10, g + n)), f = 9, y = (y - t) / f);\r\n                                        I = this.gridAlpha;\r\n                                        this.gridAlpha = this.minorGridAlpha;\r\n                                        for (H = 1; H < f; H++) {\r\n                                            var Q = this.getCoordinate(t + y * H), Q = new this.axisItemRenderer(this, Q, \"\", !1, 0, 0, !1, !1, 0, !0);\r\n                                            this.pushAxisItem(Q);\r\n                                        }\r\n                                        this.gridAlpha = I;\r\n                                    }\r\n                                }\r\n                z = this.guides;\r\n                B = z.length;\r\n                if (0 < B) {\r\n                    D = this.fillAlpha;\r\n                    for (g = this.fillAlpha = 0; g < B; g++)\r\n                        C = z[g],\r\n                            k = NaN, y = C.above, isNaN(C.toValue) || (k = this.getCoordinate(C.toValue), u = new this.axisItemRenderer(this, k, \"\", !0, NaN, NaN, C), this.pushAxisItem(u, y)), l = NaN, isNaN(C.value) || (l = this.getCoordinate(C.value), u = new this.axisItemRenderer(this, l, C.label, !0, NaN, (k - l) / 2, C), this.pushAxisItem(u, y)), isNaN(k) && (l -= 3, k = l + 3), u && (m = u.label) && this.addEventListeners(m, C), isNaN(k - l) || 0 > l && 0 > k || (k = new this.guideFillRenderer(this, l, k, C), this.pushAxisItem(k, y), y = k.graphics(), C.graphics = y, this.addEventListeners(y, C));\r\n                    this.fillAlpha =\r\n                        D;\r\n                }\r\n                u = this.baseValue;\r\n                this.min > this.baseValue && this.max > this.baseValue && (u = this.min);\r\n                this.min < this.baseValue && this.max < this.baseValue && (u = this.max);\r\n                h && u < this.minReal && (u = this.minReal);\r\n                this.baseCoord = this.getCoordinate(u, !0);\r\n                u = { type: \"axisChanged\", target: this, chart: a };\r\n                u.min = h ? this.minReal : this.min;\r\n                u.max = this.max;\r\n                this.fire(u);\r\n                this.axisCreated = !0;\r\n            }\r\n            h = this.axisLine.set;\r\n            u = this.labelsSet;\r\n            b.translate(this.x, this.y);\r\n            u.translate(this.x, this.y);\r\n            this.positionTitle();\r\n            \"radar\" != a.type && h.toFront();\r\n            !this.visible || e ? (b.hide(), h.hide(), u.hide()) : (b.show(), h.show(), u.show());\r\n            this.axisY = this.y;\r\n            this.axisX = this.x;\r\n        }, getDateMinMax: function () { this.minimumDate && (this.minimumDate instanceof Date || (this.minimumDate = d.getDate(this.minimumDate, this.chart.dataDateFormat, \"fff\")), this.min = this.minimumDate.getTime()); this.maximumDate && (this.maximumDate instanceof Date || (this.maximumDate = d.getDate(this.maximumDate, this.chart.dataDateFormat, \"fff\")), this.max = this.maximumDate.getTime()); }, formatValue: function (a, b, c) { var e = this.exponential, h = this.logarithmic, f = this.numberFormatter, g = this.chart; if (f)\r\n            return !0 === this.logarithmic && (e = -1 != String(a).indexOf(\"e\") ? !0 : !1), this.useScientificNotation && (e = !0), this.usePrefixes && (e = !1), e ? (c = -1 == String(a).indexOf(\"e\") ? a.toExponential(15) : String(a), e = c.split(\"e\"), c = Number(e[0]), e = Number(e[1]), c = d.roundTo(c, 14), b || isNaN(this.precision) || (c = d.roundTo(c, this.precision)), 10 == c && (c = 1, e += 1), c = c + \"e\" + e, 0 === a && (c = \"0\"), 1 == a && (c = \"1\")) : (h && (e = String(a).split(\".\"), e[1] ? (f.precision = e[1].length, 0 > c && (f.precision = Math.abs(c)), b && 1 < a && (f.precision = 0), b || isNaN(this.precision) || (f.precision = this.precision)) : f.precision = -1), c = this.usePrefixes ? d.addPrefix(a, g.prefixesOfBigNumbers, g.prefixesOfSmallNumbers, f, !b) : d.formatNumber(a, f, f.precision)), this.duration && (b && (f.precision = 0), c = d.formatDuration(a, this.duration, \"\", this.durationUnits, this.maxInterval, f)), \"date\" == this.type && (c = d.formatDate(new Date(a), this.currentDateFormat, g)), this.recalculateToPercents ? c += \"%\" : (b = this.unit) && (c = \"left\" == this.unitPosition ? b + c : c + b), this.labelFunction && (c = \"date\" == this.type ? this.labelFunction(c, new Date(a), this).toString() : this.labelFunction(a, c, this).toString()), c; }, getMinorGridStep: function (a, b) { var c = [5, 4, 2]; 60 > b && c.shift(); for (var e = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E), d = 0; d < c.length; d++) {\r\n            var f = a / c[d], g = Math.floor(Math.log(Math.abs(f)) * Math.LOG10E);\r\n            if (!(1 < Math.abs(e - g)))\r\n                if (1 > a) {\r\n                    if (g = Math.pow(10, -g) * f, g == Math.round(g))\r\n                        return f;\r\n                }\r\n                else if (f == Math.round(f))\r\n                    return f;\r\n        } }, stackGraphs: function (a) { var b = this.stackType; \"stacked\" == b && (b = \"regular\"); \"line\" == b && (b = \"none\"); \"100% stacked\" == b && (b = \"100%\"); this.stackType = b; var c = [], e = [], h = [], f = [], g, k = this.chart.graphs, l, m, p, q, n, t = this.baseValue, r = !1; if (\"line\" == a || \"step\" == a || \"smoothedLine\" == a)\r\n            r = !0; if (r && (\"regular\" == b || \"100%\" == b))\r\n            for (q = 0; q < k.length; q++)\r\n                p = k[q], p.stackGraph = null, p.hidden || (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable && (l && (p.stackGraph = l), l = p)); p = this.start - 10; l = this.end + 10; q = this.data.length - 1; p = d.fitToBounds(p, 0, q); l = d.fitToBounds(l, 0, q); for (n = p; n <= l; n++) {\r\n            var w = 0;\r\n            for (q = 0; q < k.length; q++)\r\n                if (p = k[q], p.hidden)\r\n                    p.newStack && (h[n] = NaN, e[n] = NaN);\r\n                else if (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable)\r\n                    if (m = this.data[n].axes[this.id].graphs[p.id], g = m.values.value, isNaN(g))\r\n                        p.newStack && (h[n] = NaN, e[n] = NaN);\r\n                    else {\r\n                        var z = d.getDecimals(g);\r\n                        w < z && (w = z);\r\n                        isNaN(f[n]) ? f[n] = Math.abs(g) : f[n] += Math.abs(g);\r\n                        f[n] = d.roundTo(f[n], w);\r\n                        z = p.fillToGraph;\r\n                        r && z && (z = this.data[n].axes[this.id].graphs[z.id]) && (m.values.open = z.values.value);\r\n                        \"regular\" == b && (r && (isNaN(c[n]) ? (c[n] = g, m.values.close = g, m.values.open = this.baseValue) : (isNaN(g) ? m.values.close = c[n] : m.values.close = g + c[n], m.values.open = c[n], c[n] = m.values.close)), \"column\" == a && (p.newStack && (h[n] = NaN, e[n] = NaN), m.values.close = g, 0 > g ? (m.values.close = g, isNaN(e[n]) ? m.values.open = t : (m.values.close += e[n], m.values.open = e[n]), e[n] = m.values.close) : (m.values.close = g, isNaN(h[n]) ? m.values.open = t : (m.values.close += h[n], m.values.open = h[n]), h[n] = m.values.close)));\r\n                    }\r\n        } for (n = this.start; n <= this.end; n++)\r\n            for (q = 0; q < k.length; q++)\r\n                (p = k[q], p.hidden) ? p.newStack && (h[n] = NaN, e[n] = NaN) : (m = p.type, p.chart == this.chart && p.valueAxis == this && a == m && p.stackable && (m = this.data[n].axes[this.id].graphs[p.id], g = m.values.value, isNaN(g) || (c = g / f[n] * 100, m.values.percents = c, m.values.total = f[n], p.newStack && (h[n] = NaN, e[n] = NaN), \"100%\" == b && (isNaN(e[n]) && (e[n] = 0), isNaN(h[n]) && (h[n] = 0), 0 > c ? (m.values.close = d.fitToBounds(c + e[n], -100, 100), m.values.open = e[n], e[n] = m.values.close) : (m.values.close = d.fitToBounds(c + h[n], -100, 100), m.values.open = h[n], h[n] = m.values.close))))); }, recalculate: function () { var a = this.chart, b = a.graphs, c; for (c = 0; c < b.length; c++) {\r\n            var e = b[c];\r\n            if (e.valueAxis == this) {\r\n                var h = \"value\";\r\n                if (\"candlestick\" == e.type || \"ohlc\" == e.type)\r\n                    h = \"open\";\r\n                var f, g, k = this.end + 2, k = d.fitToBounds(this.end + 1, 0, this.data.length - 1), l = this.start;\r\n                0 < l && l--;\r\n                var m;\r\n                g = this.start;\r\n                e.compareFromStart && (g = 0);\r\n                if (!isNaN(a.startTime) && (m = a.categoryAxis)) {\r\n                    var p = m.minDuration(), p = new Date(a.startTime + p / 2), q = d.resetDateToMin(new Date(a.startTime), m.minPeriod).getTime();\r\n                    d.resetDateToMin(new Date(p), m.minPeriod).getTime() > q && g++;\r\n                }\r\n                if (m = a.recalculateFromDate)\r\n                    m = d.getDate(m, a.dataDateFormat, \"fff\"), g = a.getClosestIndex(a.chartData, \"time\", m.getTime(), !0, 0, a.chartData.length), k = a.chartData.length - 1;\r\n                for (m = g; m <= k && (g = this.data[m].axes[this.id].graphs[e.id], f = g.values[h], e.recalculateValue && (f = g.dataContext[e.valueField + e.recalculateValue]), isNaN(f)); m++)\r\n                    ;\r\n                this.recBaseValue = f;\r\n                for (h = l; h <= k; h++) {\r\n                    g = this.data[h].axes[this.id].graphs[e.id];\r\n                    g.percents = {};\r\n                    var l = g.values, n;\r\n                    for (n in l)\r\n                        g.percents[n] = \"percents\" != n ? l[n] / f * 100 - 100 : l[n];\r\n                }\r\n            }\r\n        } }, getMinMax: function () {\r\n            var a = !1, b = this.chart, c = b.graphs, e;\r\n            for (e = 0; e < c.length; e++) {\r\n                var h = c[e].type;\r\n                (\"line\" == h || \"step\" == h || \"smoothedLine\" == h) && this.expandMinMax && (a = !0);\r\n            }\r\n            a && (0 < this.start && this.start--, this.end < this.data.length - 1 && this.end++);\r\n            \"serial\" == b.type && (!0 !== b.categoryAxis.parseDates || a || this.end < this.data.length - 1 && this.end++);\r\n            this.includeAllValues && (this.start = 0, this.end = this.data.length - 1);\r\n            a = this.minMaxMultiplier;\r\n            b = this.getExtremes(this.start, this.end);\r\n            this.min = b.min;\r\n            this.max = b.max;\r\n            this.minRR = this.min;\r\n            this.maxRR = this.max;\r\n            a = (this.max - this.min) * (a - 1);\r\n            this.min -= a;\r\n            this.max += a;\r\n            a = this.guides.length;\r\n            if (this.includeGuidesInMinMax && 0 < a)\r\n                for (b = 0; b < a; b++)\r\n                    c = this.guides[b], c.toValue < this.min && (this.min = c.toValue), c.value < this.min && (this.min = c.value), c.toValue > this.max && (this.max = c.toValue), c.value > this.max && (this.max = c.value);\r\n            isNaN(this.minimum) || (this.min = this.minimum);\r\n            isNaN(this.maximum) || (this.max = this.maximum);\r\n            \"date\" == this.type && this.getDateMinMax();\r\n            this.min > this.max && (a = this.max, this.max = this.min, this.min = a);\r\n            isNaN(this.minZoom) || (this.min = this.minZoom);\r\n            isNaN(this.maxZoom) || (this.max = this.maxZoom);\r\n            this.minCalc = this.min;\r\n            this.maxCalc = this.max;\r\n            this.minReal = this.min;\r\n            this.maxReal = this.max;\r\n            0 === this.min && 0 === this.max && (this.max = 9);\r\n            this.min > this.max && (this.min = this.max - 1);\r\n            a = this.min;\r\n            b = this.max;\r\n            c = this.max - this.min;\r\n            e = 0 === c ? Math.pow(10, Math.floor(Math.log(Math.abs(this.max)) * Math.LOG10E)) / 10 : Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\r\n            isNaN(this.maximum) && (this.max = Math.ceil(this.max / e) * e + e);\r\n            isNaN(this.minimum) && (this.min =\r\n                Math.floor(this.min / e) * e - e);\r\n            0 > this.min && 0 <= a && (this.min = 0);\r\n            0 < this.max && 0 >= b && (this.max = 0);\r\n            \"100%\" == this.stackType && (this.min = 0 > this.min ? -100 : 0, this.max = 0 > this.max ? 0 : 100);\r\n            c = this.max - this.min;\r\n            e = Math.pow(10, Math.floor(Math.log(Math.abs(c)) * Math.LOG10E)) / 10;\r\n            this.step = Math.ceil(c / this.gridCountR / e) * e;\r\n            c = Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E));\r\n            c = d.fixStepE(c);\r\n            e = Math.ceil(this.step / c);\r\n            5 < e && (e = 10);\r\n            5 >= e && 2 < e && (e = 5);\r\n            this.step = Math.ceil(this.step / (c * e)) * c * e;\r\n            isNaN(this.setStep) || (this.step =\r\n                this.setStep);\r\n            1 > c ? (this.maxDecCount = Math.abs(Math.log(Math.abs(c)) * Math.LOG10E), this.maxDecCount = Math.round(this.maxDecCount), this.step = d.roundTo(this.step, this.maxDecCount + 1)) : this.maxDecCount = 0;\r\n            this.min = this.step * Math.floor(this.min / this.step);\r\n            this.max = this.step * Math.ceil(this.max / this.step);\r\n            0 > this.min && 0 <= a && (this.min = 0);\r\n            0 < this.max && 0 >= b && (this.max = 0);\r\n            1 < this.minReal && 1 < this.max - this.minReal && (this.minReal = Math.floor(this.minReal));\r\n            c = Math.pow(10, Math.floor(Math.log(Math.abs(this.minReal)) * Math.LOG10E));\r\n            0 === this.min && (this.minReal = c);\r\n            0 === this.min && 1 < this.minReal && (this.minReal = 1);\r\n            0 < this.min && 0 < this.minReal - this.step && (this.minReal = this.min + this.step < this.minReal ? this.min + this.step : this.min);\r\n            this.logarithmic && (2 < Math.log(b) * Math.LOG10E - Math.log(a) * Math.LOG10E ? (this.minReal = this.min = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)), this.maxReal = this.max = Math.pow(10, Math.ceil(Math.log(Math.abs(b)) * Math.LOG10E))) : (a = Math.pow(10, Math.floor(Math.log(Math.abs(a)) * Math.LOG10E)) / 10, Math.pow(10, Math.floor(Math.log(Math.abs(this.min)) *\r\n                Math.LOG10E)) / 10 < a && (this.minReal = this.min = 10 * a)));\r\n        }, getExtremes: function (a, b) {\r\n            var c, e, d;\r\n            for (d = a; d <= b; d++) {\r\n                var f = this.data[d].axes[this.id].graphs, g;\r\n                for (g in f)\r\n                    if (f.hasOwnProperty(g)) {\r\n                        var k = this.chart.graphsById[g];\r\n                        if (k.includeInMinMax && (!k.hidden || this.includeHidden)) {\r\n                            isNaN(c) && (c = Infinity);\r\n                            isNaN(e) && (e = -Infinity);\r\n                            this.foundGraphs = !0;\r\n                            k = f[g].values;\r\n                            this.recalculateToPercents && (k = f[g].percents);\r\n                            var l;\r\n                            if (this.minMaxField)\r\n                                l = k[this.minMaxField], l < c && (c = l), l > e && (e = l);\r\n                            else\r\n                                for (var m in k)\r\n                                    k.hasOwnProperty(m) &&\r\n                                        \"percents\" != m && \"total\" != m && \"error\" != m && (l = k[m], l < c && (c = l), l > e && (e = l));\r\n                        }\r\n                    }\r\n            }\r\n            return { min: c, max: e };\r\n        }, zoomOut: function (a) { this.maxZoom = this.minZoom = NaN; this.zoomToRelativeValues(0, 1, a); }, zoomToRelativeValues: function (a, b, c) {\r\n            if (this.reversed) {\r\n                var e = a;\r\n                a = 1 - b;\r\n                b = 1 - e;\r\n            }\r\n            var d = this.fullMax, e = this.fullMin, f = e + (d - e) * a, g = e + (d - e) * b;\r\n            0 <= this.minimum && 0 > f && (f = 0);\r\n            this.logarithmic && (isNaN(this.minimum) || (e = this.minimum), isNaN(this.maximum) || (d = this.maximum), d = Math.log(d) * Math.LOG10E - Math.log(e) * Math.LOG10E, f = Math.pow(10, d * a +\r\n                Math.log(e) * Math.LOG10E), g = Math.pow(10, d * b + Math.log(e) * Math.LOG10E));\r\n            return this.zoomToValues(f, g, c);\r\n        }, zoomToValues: function (a, b, c) {\r\n            if (b < a) {\r\n                var e = b;\r\n                b = a;\r\n                a = e;\r\n            }\r\n            var h = this.fullMax, e = this.fullMin;\r\n            this.relativeStart = d.roundTo((a - e) / (h - e), 9);\r\n            this.relativeEnd = d.roundTo((b - e) / (h - e), 9);\r\n            if (this.logarithmic) {\r\n                isNaN(this.minimum) || (e = this.minimum);\r\n                isNaN(this.maximum) || (h = this.maximum);\r\n                var h = Math.log(h) * Math.LOG10E - Math.log(e) * Math.LOG10E, f = Math.log(b) / Math.LN10 - Math.log(e) * Math.LOG10E;\r\n                this.relativeStart = d.roundTo((Math.log(a) /\r\n                    Math.LN10 - Math.log(e) * Math.LOG10E) / h, 9);\r\n                this.relativeEnd = d.roundTo(f / h, 9);\r\n            }\r\n            if (this.minZoom != a || this.maxZoom != b)\r\n                return this.minZoom = a, this.maxZoom = b, e = { type: \"axisZoomed\" }, e.chart = this.chart, e.valueAxis = this, e.startValue = a, e.endValue = b, e.relativeStart = this.relativeStart, e.relativeEnd = this.relativeEnd, this.prevStartValue == a && this.prevEndValue == b || this.fire(e), this.prevStartValue = a, this.prevEndValue = b, c || (a = {}, d.copyProperties(e, a), a.type = \"axisIntZoomed\", this.fire(a)), 0 === this.relativeStart && 1 == this.relativeEnd &&\r\n                    (this.maxZoom = this.minZoom = NaN), !0;\r\n        }, coordinateToValue: function (a) { if (isNaN(a))\r\n            return NaN; var b = this.axisWidth, c = this.stepWidth, e = this.reversed, d = this.rotate, f = this.min, g = this.minReal; return !0 === this.logarithmic ? Math.pow(10, (d ? !0 === e ? (b - a) / c : a / c : !0 === e ? a / c : (b - a) / c) + Math.log(g) * Math.LOG10E) : !0 === e ? d ? f - (a - b) / c : a / c + f : d ? a / c + f : f - (a - b) / c; }, getCoordinate: function (a, b) {\r\n            if (isNaN(a))\r\n                return NaN;\r\n            var c = this.rotate, e = this.reversed, d = this.axisWidth, f = this.stepWidth, g = this.min, k = this.minReal;\r\n            !0 === this.logarithmic ?\r\n                (0 === a && (a = this.treatZeroAs), g = Math.log(a) * Math.LOG10E - Math.log(k) * Math.LOG10E, c = c ? !0 === e ? d - f * g : f * g : !0 === e ? f * g : d - f * g) : c = !0 === e ? c ? d - f * (a - g) : f * (a - g) : c ? f * (a - g) : d - f * (a - g);\r\n            1E7 < Math.abs(c) && (c = c / Math.abs(c) * 1E7);\r\n            b || (c = Math.round(c));\r\n            return c;\r\n        }, synchronizeWithAxis: function (a) { this.synchronizeWith = a; this.listenTo(this.synchronizeWith, \"axisChanged\", this.handleSynchronization); }, handleSynchronization: function () { if (this.synchronizeWith) {\r\n            d.isString(this.synchronizeWith) && (this.synchronizeWith = this.chart.getValueAxisById(this.synchronizeWith));\r\n            var a = this.synchronizeWith, b = a.min, c = a.max, a = a.step, e = this.synchronizationMultiplier;\r\n            e && (this.min = b * e, this.max = c * e, this.step = a * e, b = Math.abs(Math.log(Math.abs(Math.pow(10, Math.floor(Math.log(Math.abs(this.step)) * Math.LOG10E)))) * Math.LOG10E), this.maxDecCount = b = Math.round(b), this.draw());\r\n        } } });\r\n})();\r\n(function () { var d = window.AmCharts; d.RecAxis = d.Class({ construct: function (a) { var b = a.chart, c = a.axisThickness, e = a.axisColor, h = a.axisAlpha, f = a.offset, g = a.dx, k = a.dy, l = a.x, m = a.y, p = a.height, q = a.width, n = b.container; \"H\" == a.orientation ? (e = d.line(n, [0, q], [0, 0], e, h, c), this.axisWidth = a.width, \"bottom\" == a.position ? (k = c / 2 + f + p + m - 1, c = l) : (k = -c / 2 - f + m + k, c = g + l)) : (this.axisWidth = a.height, \"right\" == a.position ? (e = d.line(n, [0, 0, -g], [0, p, p - k], e, h, c), k = m + k, c = c / 2 + f + g + q + l - 1) : (e = d.line(n, [0, 0], [0, p], e, h, c), k = m, c = -c / 2 - f + l)); e.translate(c, k); c = b.container.set(); c.push(e); b.axesSet.push(c); d.setCN(b, e, a.bcn + \"line\"); this.axisSet = c; this.set = e; } }); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.RecItem = d.Class({ construct: function (a, b, c, e, h, f, g, k, l, m, p, q) {\r\n            b = Math.round(b);\r\n            var n = a.chart;\r\n            this.value = c;\r\n            void 0 == c && (c = \"\");\r\n            l || (l = 0);\r\n            void 0 == e && (e = !0);\r\n            var t = n.fontFamily, r = a.fontSize;\r\n            void 0 == r && (r = n.fontSize);\r\n            var w = a.color;\r\n            void 0 == w && (w = n.color);\r\n            void 0 !== p && (w = p);\r\n            var z = a.chart.container, x = z.set();\r\n            this.set = x;\r\n            var u = a.axisThickness, A = a.axisColor, y = a.axisAlpha, B = a.tickLength, D = a.gridAlpha, C = a.gridThickness, I = a.gridColor, H = a.dashLength, Q = a.fillColor, M = a.fillAlpha, P = a.labelsEnabled;\r\n            p = a.labelRotationR;\r\n            var ia = a.counter, J = a.inside, aa = a.labelOffset, ma = a.dx, na = a.dy, Pa = a.orientation, Z = a.position, da = a.previousCoord, X = a.height, xa = a.width, ea = a.offset, fa, Ba;\r\n            g ? (void 0 !== g.id && (q = n.classNamePrefix + \"-guide-\" + g.id), P = !0, isNaN(g.tickLength) || (B = g.tickLength), void 0 != g.lineColor && (I = g.lineColor), void 0 != g.color && (w = g.color), isNaN(g.lineAlpha) || (D = g.lineAlpha), isNaN(g.dashLength) || (H = g.dashLength), isNaN(g.lineThickness) || (C = g.lineThickness), !0 === g.inside && (J = !0, 0 < ea && (ea = 0)), isNaN(g.labelRotation) || (p = g.labelRotation), isNaN(g.fontSize) || (r = g.fontSize), g.position && (Z = g.position), void 0 !== g.boldLabel && (k = g.boldLabel), isNaN(g.labelOffset) || (aa = g.labelOffset)) : \"\" === c && (B = 0);\r\n            m && !isNaN(a.minorTickLength) && (B = a.minorTickLength);\r\n            var ga = \"start\";\r\n            0 < h && (ga = \"middle\");\r\n            a.centerLabels && (ga = \"middle\");\r\n            var V = p * Math.PI / 180, Y, Da, G = 0, v = 0, oa = 0, ha = Y = 0, Qa = 0;\r\n            \"V\" == Pa && (p = 0);\r\n            var ca;\r\n            P && \"\" !== c && (ca = a.autoWrap && 0 === p ? d.wrappedText(z, c, w, t, r, ga, k, Math.abs(h), 0) : d.text(z, c, w, t, r, ga, k), ga = ca.getBBox(), ha = ga.width, Qa = ga.height);\r\n            if (\"H\" == Pa) {\r\n                if (0 <= b && b <= xa + 1 && (0 < B && 0 < y && b + l <= xa + 1 && (fa = d.line(z, [b + l, b + l], [0, B], A, y, C), x.push(fa)), 0 < D && (Ba = d.line(z, [b, b + ma, b + ma], [X, X + na, na], I, D, C, H), x.push(Ba))), v = 0, G = b, g && 90 == p && J && (G -= r), !1 === e ? (ga = \"start\", v = \"bottom\" == Z ? J ? v + B : v - B : J ? v - B : v + B, G += 3, 0 < h && (G += h / 2 - 3, ga = \"middle\"), 0 < p && (ga = \"middle\")) : ga = \"middle\", 1 == ia && 0 < M && !g && !m && da < xa && (e = d.fitToBounds(b, 0, xa), da = d.fitToBounds(da, 0, xa), Y = e - da, 0 < Y && (Da = d.rect(z, Y, a.height, Q, M), Da.translate(e - Y + ma, na), x.push(Da))), \"bottom\" == Z ? (v += X + r / 2 + ea, J ? (0 < p ? (v = X - ha / 2 * Math.sin(V) - B - 3, a.centerRotatedLabels || (G += ha / 2 * Math.cos(V) - 4 + 2)) : 0 > p ? (v = X + ha * Math.sin(V) - B - 3 + 2, G += -ha * Math.cos(V) - Qa * Math.sin(V) - 4) : v -= B + r + 3 + 3, v -= aa) : (0 < p ? (v = X + ha / 2 * Math.sin(V) + B + 3, a.centerRotatedLabels || (G -= ha / 2 * Math.cos(V))) : 0 > p ? (v = X + B + 3 - ha / 2 * Math.sin(V) + 2, G += ha / 2 * Math.cos(V)) : v += B + u + 3 + 3, v += aa)) : (v += na + r / 2 - ea, G += ma, J ? (0 < p ? (v = ha / 2 * Math.sin(V) + B + 3, a.centerRotatedLabels || (G -= ha / 2 * Math.cos(V))) : v += B + 3, v += aa) : (0 < p ? (v = -(ha / 2) * Math.sin(V) - B - 6, a.centerRotatedLabels || (G += ha / 2 * Math.cos(V))) : v -= B +\r\n                    r + 3 + u + 3, v -= aa)), \"bottom\" == Z ? Y = (J ? X - B - 1 : X + u - 1) + ea : (oa = ma, Y = (J ? na : na - B - u + 1) - ea), f && (G += f), r = G, 0 < p && (r += ha / 2 * Math.cos(V)), ca && (f = 0, J && (f = ha / 2 * Math.cos(V)), r + f > xa + 2 || 0 > r))\r\n                    ca.remove(), ca = null;\r\n            }\r\n            else {\r\n                0 <= b && b <= X + 1 && (0 < B && 0 < y && b + l <= X + 1 && (fa = d.line(z, [0, B + 1], [b + l, b + l], A, y, C), x.push(fa)), 0 < D && (Ba = d.line(z, [0, ma, xa + ma], [b, b + na, b + na], I, D, C, H), x.push(Ba)));\r\n                ga = \"end\";\r\n                if (!0 === J && \"left\" == Z || !1 === J && \"right\" == Z)\r\n                    ga = \"start\";\r\n                v = b - Qa / 2 + 2;\r\n                1 == ia && 0 < M && !g && !m && (e = d.fitToBounds(b, 0, X), da = d.fitToBounds(da, 0, X), V = e - da, Da = d.polygon(z, [0, a.width, a.width, 0], [0, 0, V, V], Q, M), Da.translate(ma, e - V + na), x.push(Da));\r\n                v += r / 2;\r\n                \"right\" == Z ? (G += ma + xa + ea, v += na, J ? (f || (v -= r / 2 + 3), G = G - (B + 4) - aa) : (G += B + 4 + u, v -= 2, G += aa)) : J ? (G += B + 4 - ea, f || (v -= r / 2 + 3), g && (G += ma, v += na), G += aa) : (G += -B - u - 4 - 2 - ea, v -= 2, G -= aa);\r\n                fa && (\"right\" == Z ? (oa += ma + ea + xa - 1, Y += na, oa = J ? oa - u : oa + u) : (oa -= ea, J || (oa -= B + u)));\r\n                f && (v += f);\r\n                J = -3;\r\n                \"right\" == Z && (J += na);\r\n                ca && (v > X + 1 || v < J - r / 10) && (ca.remove(), ca = null);\r\n            }\r\n            fa && (fa.translate(oa, Y), d.setCN(n, fa, a.bcn + \"tick\"), d.setCN(n, fa, q, !0), g && d.setCN(n, fa, \"guide\"));\r\n            !1 === a.visible && (fa && fa.remove(), ca && (ca.remove(), ca = null));\r\n            ca && (ca.attr({ \"text-anchor\": ga }), ca.translate(G, v, NaN, !0), 0 !== p && ca.rotate(-p, a.chart.backgroundColor), a.allLabels.push(ca), this.label = ca, d.setCN(n, ca, a.bcn + \"label\"), d.setCN(n, ca, q, !0), g && d.setCN(n, ca, \"guide\"));\r\n            Ba && (d.setCN(n, Ba, a.bcn + \"grid\"), d.setCN(n, Ba, q, !0), g && d.setCN(n, Ba, \"guide\"));\r\n            Da && (d.setCN(n, Da, a.bcn + \"fill\"), d.setCN(n, Da, q, !0));\r\n            m ? Ba && d.setCN(n, Ba, a.bcn + \"grid-minor\") : (a.counter = 0 === ia ? 1 : 0, a.previousCoord = b);\r\n            0 === this.set.node.childNodes.length && this.set.remove();\r\n        }, graphics: function () { return this.set; }, getLabel: function () { return this.label; } });\r\n})();\r\n(function () { var d = window.AmCharts; d.RecFill = d.Class({ construct: function (a, b, c, e) { var h = a.dx, f = a.dy, g = a.orientation, k = 0; if (c < b) {\r\n        var l = b;\r\n        b = c;\r\n        c = l;\r\n    } var m = e.fillAlpha; isNaN(m) && (m = 0); var l = a.chart.container, p = e.fillColor; \"V\" == g ? (b = d.fitToBounds(b, 0, a.height), c = d.fitToBounds(c, 0, a.height)) : (b = d.fitToBounds(b, 0, a.width), c = d.fitToBounds(c, 0, a.width)); c -= b; isNaN(c) && (c = 4, k = 2, m = 0); 0 > c && \"object\" == typeof p && (p = p.join(\",\").split(\",\").reverse()); \"V\" == g ? (g = d.rect(l, a.width, c, p, m), g.translate(h, b - k + f)) : (g = d.rect(l, c, a.height, p, m), g.translate(b - k + h, f)); d.setCN(a.chart, g, \"guide-fill\"); e.id && d.setCN(a.chart, g, \"guide-fill-\" + e.id); this.set = l.set([g]); }, graphics: function () { return this.set; }, getLabel: function () { } }); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.AmChart = d.Class({ construct: function (a) { this.svgIcons = this.tapToActivate = !0; this.theme = a; this.classNamePrefix = \"amcharts\"; this.addClassNames = !1; this.version = \"3.21.5\"; d.addChart(this); this.createEvents(\"buildStarted\", \"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\", \"resized\", \"animationFinished\"); this.height = this.width = \"100%\"; this.dataChanged = !0; this.chartCreated = !1; this.previousWidth = this.previousHeight = 0; this.backgroundColor = \"#FFFFFF\"; this.borderAlpha = this.backgroundAlpha = 0; this.color = this.borderColor = \"#000000\"; this.fontFamily = \"Verdana\"; this.fontSize = 11; this.usePrefixes = !1; this.autoResize = !0; this.autoDisplay = !1; this.addCodeCredits = this.accessible = !0; this.touchStartTime = this.touchClickDuration = 0; this.precision = -1; this.percentPrecision = 2; this.decimalSeparator = \".\"; this.thousandsSeparator = \",\"; this.labels = []; this.allLabels = []; this.titles = []; this.marginRight = this.marginLeft = this.autoMarginOffset = 0; this.timeOuts = []; this.creditsPosition = \"top-left\"; var b = document.createElement(\"div\"), c = b.style; c.overflow = \"hidden\"; c.position = \"relative\"; c.textAlign = \"left\"; this.chartDiv = b; b = document.createElement(\"div\"); c = b.style; c.overflow = \"hidden\"; c.position = \"relative\"; c.textAlign = \"left\"; this.legendDiv = b; this.titleHeight = 0; this.hideBalloonTime = 150; this.handDrawScatter = 2; this.cssScale = this.handDrawThickness = 1; this.cssAngle = 0; this.prefixesOfBigNumbers = [{ number: 1E3, prefix: \"k\" }, { number: 1E6, prefix: \"M\" }, { number: 1E9, prefix: \"G\" }, { number: 1E12, prefix: \"T\" }, { number: 1E15, prefix: \"P\" }, { number: 1E18, prefix: \"E\" }, { number: 1E21, prefix: \"Z\" }, { number: 1E24, prefix: \"Y\" }]; this.prefixesOfSmallNumbers = [{ number: 1E-24, prefix: \"y\" }, { number: 1E-21, prefix: \"z\" }, { number: 1E-18, prefix: \"a\" }, { number: 1E-15, prefix: \"f\" }, { number: 1E-12, prefix: \"p\" }, { number: 1E-9, prefix: \"n\" }, { number: 1E-6, prefix: \"\\u03bc\" }, { number: .001, prefix: \"m\" }]; this.panEventsEnabled = !0; this.product = \"amcharts\"; this.animations = []; this.balloon = new d.AmBalloon(this.theme); this.balloon.chart = this; this.processTimeout = 0; this.processCount = 1E3; this.animatable = []; this.langObj = {}; d.applyTheme(this, a, \"AmChart\"); }, drawChart: function () { 0 < this.realWidth && 0 < this.realHeight && (this.drawBackground(), this.redrawLabels(), this.drawTitles(), this.brr(), this.renderFix(), this.chartDiv && (this.boundingRect = this.chartDiv.getBoundingClientRect())); }, makeAccessible: function (a, b, c) { this.accessible && a && (c && a.setAttr(\"role\", c), a.setAttr(\"aria-label\", b)); }, drawBackground: function () { d.remove(this.background); var a = this.container, b = this.backgroundColor, c = this.backgroundAlpha, e = this.set; d.isModern || 0 !== c || (c = .001); var h = this.updateWidth(); this.realWidth = h; var f = this.updateHeight(); this.realHeight = f; b = d.polygon(a, [0, h - 1, h - 1, 0], [0, 0, f - 1, f - 1], b, c, 1, this.borderColor, this.borderAlpha); d.setCN(this, b, \"bg\"); this.background = b; e.push(b); if (b = this.backgroundImage)\r\n            a = a.image(b, 0, 0, h, f), d.setCN(this, b, \"bg-image\"), this.bgImg = a, e.push(a); }, drawTitles: function (a) {\r\n            var b = this.titles;\r\n            this.titleHeight = 0;\r\n            if (d.ifArray(b)) {\r\n                var c = 20, e;\r\n                for (e = 0; e < b.length; e++) {\r\n                    var h = b[e], h = d.processObject(h, d.Title, this.theme);\r\n                    if (!1 !== h.enabled) {\r\n                        var f = h.color;\r\n                        void 0 === f && (f = this.color);\r\n                        var g = h.size;\r\n                        isNaN(g) && (g = this.fontSize + 2);\r\n                        isNaN(h.alpha);\r\n                        var k = this.marginLeft, l = !0;\r\n                        void 0 !== h.bold && (l = h.bold);\r\n                        f = d.wrappedText(this.container, h.text, f, this.fontFamily, g, \"middle\", l, this.realWidth - 35 - this.marginRight - k);\r\n                        f.translate(k + (this.realWidth - this.marginRight - k) / 2, c);\r\n                        f.node.style.pointerEvents = \"none\";\r\n                        h.sprite = f;\r\n                        void 0 !== h.tabIndex && f.setAttr(\"tabindex\", h.tabIndex);\r\n                        d.setCN(this, f, \"title\");\r\n                        h.id && d.setCN(this, f, \"title-\" + h.id);\r\n                        f.attr({ opacity: h.alpha });\r\n                        c += f.getBBox().height +\r\n                            5;\r\n                        a ? f.remove() : this.freeLabelsSet.push(f);\r\n                    }\r\n                }\r\n                this.titleHeight = c - 10;\r\n            }\r\n        }, write: function (a) { var b = this; if (b.listeners)\r\n            for (var c = 0; c < b.listeners.length; c++) {\r\n                var e = b.listeners[c];\r\n                b.addListener(e.event, e.method);\r\n            } b.fire({ type: \"buildStarted\", chart: b }); b.afterWriteTO && clearTimeout(b.afterWriteTO); 0 < b.processTimeout ? b.afterWriteTO = setTimeout(function () { b.afterWrite.call(b, a); }, b.processTimeout) : b.afterWrite(a); }, afterWrite: function (a) { var b; if (b = \"object\" != typeof a ? document.getElementById(a) : a) {\r\n            for (; b.firstChild;)\r\n                b.removeChild(b.firstChild);\r\n            this.div = b;\r\n            b.style.overflow = \"hidden\";\r\n            b.style.textAlign = \"left\";\r\n            a = this.chartDiv;\r\n            var c = this.legendDiv, e = this.legend, h = c.style, f = a.style;\r\n            this.measure();\r\n            this.previousHeight = this.divRealHeight;\r\n            this.previousWidth = this.divRealWidth;\r\n            var g, k = document.createElement(\"div\");\r\n            g = k.style;\r\n            g.position = \"relative\";\r\n            this.containerDiv = k;\r\n            k.className = this.classNamePrefix + \"-main-div\";\r\n            a.className = this.classNamePrefix + \"-chart-div\";\r\n            b.appendChild(k);\r\n            (b = this.exportConfig) && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this, b));\r\n            this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));\r\n            this.AmExport && this.AmExport.init && this.AmExport.init();\r\n            if (e) {\r\n                e = this.addLegend(e, e.divId);\r\n                if (e.enabled)\r\n                    switch (h.left = null, h.top = null, h.right = null, f.left = null, f.right = null, f.top = null, h.position = \"relative\", f.position = \"relative\", g.width = \"100%\", g.height = \"100%\", e.position) {\r\n                        case \"bottom\":\r\n                            k.appendChild(a);\r\n                            k.appendChild(c);\r\n                            break;\r\n                        case \"top\":\r\n                            k.appendChild(c);\r\n                            k.appendChild(a);\r\n                            break;\r\n                        case \"absolute\":\r\n                            h.position = \"absolute\";\r\n                            f.position = \"absolute\";\r\n                            void 0 !== e.left && (h.left = e.left + \"px\");\r\n                            void 0 !== e.right && (h.right = e.right + \"px\");\r\n                            void 0 !== e.top && (h.top = e.top + \"px\");\r\n                            void 0 !== e.bottom && (h.bottom = e.bottom + \"px\");\r\n                            e.marginLeft = 0;\r\n                            e.marginRight = 0;\r\n                            k.appendChild(a);\r\n                            k.appendChild(c);\r\n                            break;\r\n                        case \"right\":\r\n                            h.position = \"relative\";\r\n                            f.position = \"absolute\";\r\n                            k.appendChild(a);\r\n                            k.appendChild(c);\r\n                            break;\r\n                        case \"left\":\r\n                            h.position = \"absolute\";\r\n                            f.position = \"relative\";\r\n                            k.appendChild(a);\r\n                            k.appendChild(c);\r\n                            break;\r\n                        case \"outside\": k.appendChild(a);\r\n                    }\r\n                else\r\n                    k.appendChild(a);\r\n                this.prevLegendPosition = e.position;\r\n            }\r\n            else\r\n                k.appendChild(a);\r\n            this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\r\n            (this.mouseWheelScrollEnabled || this.mouseWheelZoomEnabled) && d.addWheelListeners();\r\n            this.initChart();\r\n        } }, createLabelsSet: function () { d.remove(this.labelsSet); this.labelsSet = this.container.set(); this.freeLabelsSet.push(this.labelsSet); }, initChart: function () { this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme); window.AmCharts_path && (this.path = window.AmCharts_path); void 0 === this.path && (this.path = d.getPath()); void 0 === this.path && (this.path = \"amcharts/\"); this.path = d.normalizeUrl(this.path); void 0 === this.pathToImages && (this.pathToImages = this.path + \"images/\"); this.initHC || (d.callInitHandler(this), this.initHC = !0); d.applyLang(this.language, this); var a = this.numberFormatter; a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator)); (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision); this.nf = { precision: this.precision, thousandsSeparator: this.thousandsSeparator, decimalSeparator: this.decimalSeparator }; this.pf = { precision: this.percentPrecision, thousandsSeparator: this.thousandsSeparator, decimalSeparator: this.decimalSeparator }; this.destroy(); (a = this.container) ? (a.container.innerHTML = \"\", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this); this.container = a; this.extension = \".png\"; this.svgIcons && d.SVG && (this.extension = \".svg\"); this.checkDisplay(); this.checkTransform(this.div); a.chart = this; d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, d.remove(this.set), this.set = a.set(), d.remove(this.gridSet), this.gridSet = a.set(), d.remove(this.cursorLineSet), this.cursorLineSet = a.set(), d.remove(this.graphsBehindSet), this.graphsBehindSet = a.set(), d.remove(this.bulletBehindSet), this.bulletBehindSet = a.set(), d.remove(this.columnSet), this.columnSet = a.set(), d.remove(this.graphsSet), this.graphsSet = a.set(), d.remove(this.trendLinesSet), this.trendLinesSet = a.set(), d.remove(this.axesSet), this.axesSet = a.set(), d.remove(this.cursorSet), this.cursorSet = a.set(), d.remove(this.scrollbarsSet), this.scrollbarsSet = a.set(), d.remove(this.bulletSet), this.bulletSet = a.set(), d.remove(this.freeLabelsSet), this.freeLabelsSet = a.set(), d.remove(this.axesLabelsSet), this.axesLabelsSet = a.set(), d.remove(this.balloonsSet), this.balloonsSet = a.set(), d.remove(this.plotBalloonsSet), this.plotBalloonsSet = a.set(), d.remove(this.zoomButtonSet), this.zoomButtonSet = a.set(), d.remove(this.zbSet), this.zbSet = null, d.remove(this.linkSet), this.linkSet = a.set()) : this.fire({ type: \"failed\", chart: this }); }, premeasure: function () { var a = this.div; if (a) {\r\n            try {\r\n                this.boundingRect = this.chartDiv.getBoundingClientRect();\r\n            }\r\n            catch (e) { }\r\n            var b = a.offsetWidth, c = a.offsetHeight;\r\n            a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\r\n            if (b != this.mw || c != this.mh)\r\n                this.mw = b, this.mh = c, this.measure();\r\n        } }, measure: function () { var a = this.div; if (a) {\r\n            var b = this.chartDiv, c = a.offsetWidth, e = a.offsetHeight, h = this.container;\r\n            a.clientHeight && (c = a.clientWidth, e = a.clientHeight);\r\n            var e = Math.round(e), c = Math.round(c), a = Math.round(d.toCoordinate(this.width, c)), f = Math.round(d.toCoordinate(this.height, e));\r\n            (c != this.previousWidth || e != this.previousHeight) && 0 < a && 0 < f && (b.style.width = a + \"px\", b.style.height = f + \"px\", b.style.padding = 0, h && h.setSize(a, f), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme));\r\n            this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, f);\r\n            this.updateWidth();\r\n            this.balloon.chart = this;\r\n            this.realWidth = a;\r\n            this.realHeight = f;\r\n            this.divRealWidth = c;\r\n            this.divRealHeight = e;\r\n        } }, checkDisplay: function () { if (this.autoDisplay && this.container) {\r\n            var a = d.rect(this.container, 10, 10), b = a.getBBox();\r\n            0 === b.width && 0 === b.height && (this.divRealHeight = this.divRealWidth = this.realHeight = this.realWidth = 0, this.previousWidth = this.previousHeight = NaN);\r\n            a.remove();\r\n        } }, checkTransform: function (a) { if (this.autoTransform && window.getComputedStyle && a) {\r\n            if (a.style) {\r\n                var b = window.getComputedStyle(a, null);\r\n                if (b && (b = b.getPropertyValue(\"-webkit-transform\") || b.getPropertyValue(\"-moz-transform\") || b.getPropertyValue(\"-ms-transform\") || b.getPropertyValue(\"-o-transform\") || b.getPropertyValue(\"transform\")) && \"none\" !== b) {\r\n                    var c = b.split(\"(\")[1].split(\")\")[0].split(\",\"), b = c[0], c = c[1], b = Math.sqrt(b * b + c * c);\r\n                    isNaN(b) || (this.cssScale *= b);\r\n                }\r\n            }\r\n            a.parentNode && this.checkTransform(a.parentNode);\r\n        } }, destroy: function () { this.chartDiv.innerHTML = \"\"; this.clearTimeOuts(); this.legend && this.legend.destroy(); }, clearTimeOuts: function () { var a = this.timeOuts; if (a) {\r\n            var b;\r\n            for (b = 0; b < a.length; b++)\r\n                clearTimeout(a[b]);\r\n        } this.timeOuts = []; }, clear: function (a) { try {\r\n            document.removeEventListener(\"touchstart\", this.docfn1, !0), document.removeEventListener(\"touchend\", this.docfn2, !0);\r\n        }\r\n        catch (b) { } d.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]); this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null; this.clearTimeOuts(); this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv)); a || d.removeChart(this); if (a = this.div)\r\n            for (; a.firstChild;)\r\n                a.removeChild(a.firstChild); this.legend && this.legend.destroy(); this.AmExport && this.AmExport.clear && this.AmExport.clear(); }, setMouseCursor: function (a) { \"auto\" == a && d.isNN && (a = \"default\"); this.chartDiv.style.cursor = a; this.legendDiv.style.cursor = a; }, redrawLabels: function () { this.labels = []; var a = this.allLabels; this.createLabelsSet(); var b; for (b = 0; b < a.length; b++)\r\n            this.drawLabel(a[b]); }, drawLabel: function (a) { var b = this; if (b.container && !1 !== a.enabled) {\r\n            a = d.processObject(a, d.Label, b.theme);\r\n            var c = a.y, e = a.text, h = a.align, f = a.size, g = a.color, k = a.rotation, l = a.alpha, m = a.bold, p = d.toCoordinate(a.x, b.realWidth), c = d.toCoordinate(c, b.realHeight);\r\n            p || (p = 0);\r\n            c || (c = 0);\r\n            void 0 === g && (g = b.color);\r\n            isNaN(f) && (f = b.fontSize);\r\n            h || (h = \"start\");\r\n            \"left\" == h && (h = \"start\");\r\n            \"right\" == h && (h = \"end\");\r\n            \"center\" == h && (h = \"middle\", k ? c = b.realHeight - c + c / 2 : p = b.realWidth / 2 - p);\r\n            void 0 === l && (l = 1);\r\n            void 0 === k && (k = 0);\r\n            c += f / 2;\r\n            e = d.text(b.container, e, g, b.fontFamily, f, h, m, l);\r\n            e.translate(p, c);\r\n            void 0 !== a.tabIndex && e.setAttr(\"tabindex\", a.tabIndex);\r\n            d.setCN(b, e, \"label\");\r\n            a.id && d.setCN(b, e, \"label-\" + a.id);\r\n            0 !== k && e.rotate(k);\r\n            a.url ? (e.setAttr(\"cursor\", \"pointer\"), e.click(function () { d.getURL(a.url, b.urlTarget); })) : e.node.style.pointerEvents = \"none\";\r\n            b.labelsSet.push(e);\r\n            b.labels.push(e);\r\n        } }, addLabel: function (a, b, c, e, d, f, g, k, l, m) { a = { x: a, y: b, text: c, align: e, size: d, color: f, alpha: k, rotation: g, bold: l, url: m, enabled: !0 }; this.container && this.drawLabel(a); this.allLabels.push(a); }, clearLabels: function () { var a = this.labels, b; for (b = a.length - 1; 0 <= b; b--)\r\n            a[b].remove(); this.labels = []; this.allLabels = []; }, updateHeight: function () { var a = this.divRealHeight, b = this.legend; if (b) {\r\n            var c = this.legendDiv.offsetHeight, b = b.position;\r\n            if (\"top\" == b || \"bottom\" == b) {\r\n                a -= c;\r\n                if (0 > a || isNaN(a))\r\n                    a = 0;\r\n                this.chartDiv.style.height = a + \"px\";\r\n            }\r\n        } return a; }, updateWidth: function () { var a = this.divRealWidth, b = this.divRealHeight, c = this.legend; if (c) {\r\n            var e = this.legendDiv, d = e.offsetWidth;\r\n            isNaN(c.width) || (d = c.width);\r\n            c.ieW && (d = c.ieW);\r\n            var f = e.offsetHeight, e = e.style, g = this.chartDiv.style, k = c.position;\r\n            if ((\"right\" == k || \"left\" == k) && void 0 === c.divId) {\r\n                a -= d;\r\n                if (0 > a || isNaN(a))\r\n                    a = 0;\r\n                g.width = a + \"px\";\r\n                this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, this.realHeight);\r\n                \"left\" == k ? (g.left = d + \"px\", e.left = \"0px\") : (g.left = \"0px\", e.left = a + \"px\");\r\n                b > f && (e.top = (b - f) / 2 + \"px\");\r\n            }\r\n        } return a; }, getTitleHeight: function () { this.drawTitles(!0); return this.titleHeight; }, addTitle: function (a, b, c, e, d) {\r\n            isNaN(b) && (b = this.fontSize + 2);\r\n            a = { text: a, size: b, color: c, alpha: e,\r\n                bold: d, enabled: !0 };\r\n            this.titles.push(a);\r\n            return a;\r\n        }, handleWheel: function (a) { var b = 0; a || (a = window.event); a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3); b && this.handleWheelReal(b, a.shiftKey); a.preventDefault && a.preventDefault(); }, handleWheelReal: function () { }, handleDocTouchStart: function () { this.handleMouseMove(); this.tmx = this.mouseX; this.tmy = this.mouseY; this.touchStartTime = (new Date).getTime(); }, handleDocTouchEnd: function () { -.5 < this.tmx && this.tmx < this.divRealWidth + 1 && 0 < this.tmy && this.tmy < this.divRealHeight ? (this.handleMouseMove(), 4 > Math.abs(this.mouseX - this.tmx) && 4 > Math.abs(this.mouseY - this.tmy) ? (this.tapped = !0, this.panRequired && this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"none\", this.chartDiv.style.touchAction = \"none\")) : this.mouseIsOver || this.resetTouchStyle()) : (this.tapped = !1, this.resetTouchStyle()); }, resetTouchStyle: function () { this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"auto\", this.chartDiv.style.touchAction = \"auto\"); }, checkTouchDuration: function (a) { var b = this, c = (new Date).getTime(); if (a)\r\n            if (a.touches)\r\n                b.isTouchEvent = !0;\r\n            else if (!b.isTouchEvent)\r\n                return !0; if (c - b.touchStartTime > b.touchClickDuration)\r\n            return !0; setTimeout(function () { b.resetTouchDuration(); }, 300); }, resetTouchDuration: function () { this.isTouchEvent = !1; }, checkTouchMoved: function () { if (4 < Math.abs(this.mouseX - this.tmx) || 4 < Math.abs(this.mouseY - this.tmy))\r\n            return !0; }, addListeners: function () { var a = this, b = a.chartDiv; document.addEventListener ? (\"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function (b) { a.handleTouchStart.call(a, b); }, !0), b.addEventListener(\"touchmove\", function (b) { a.handleMouseMove.call(a, b); }, !0), b.addEventListener(\"touchend\", function (b) { a.handleTouchEnd.call(a, b); }, !0), a.docfn1 = function (b) { a.handleDocTouchStart.call(a, b); }, a.docfn2 = function (b) { a.handleDocTouchEnd.call(a, b); }, document.addEventListener(\"touchstart\", a.docfn1, !0), document.addEventListener(\"touchend\", a.docfn2, !0)), b.addEventListener(\"mousedown\", function (b) { a.mouseIsOver = !0; a.handleMouseMove.call(a, b); a.handleMouseDown.call(a, b); a.handleDocTouchStart.call(a, b); }, !0), b.addEventListener(\"mouseover\", function (b) { a.handleMouseOver.call(a, b); }, !0), b.addEventListener(\"mouseout\", function (b) { a.handleMouseOut.call(a, b); }, !0), b.addEventListener(\"mouseup\", function (b) { a.handleDocTouchEnd.call(a, b); }, !0)) : (b.attachEvent(\"onmousedown\", function (b) { a.handleMouseDown.call(a, b); }), b.attachEvent(\"onmouseover\", function (b) { a.handleMouseOver.call(a, b); }), b.attachEvent(\"onmouseout\", function (b) { a.handleMouseOut.call(a, b); })); }, dispDUpd: function () { this.skipEvents || (this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, this.fire({ type: \"dataUpdated\", chart: this })), this.chartCreated || (this.chartCreated = !0, this.fire({ type: \"init\", chart: this })), this.chartRendered || (this.fire({ type: \"rendered\", chart: this }), this.chartRendered = !0), this.fire({ type: \"drawn\", chart: this })); this.skipEvents = !1; }, validateSize: function () { var a = this; a.premeasure(); a.checkDisplay(); a.cssScale = 1; a.cssAngle = 0; a.checkTransform(a.div); if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {\r\n            var b = a.legend;\r\n            if (0 < a.realWidth && 0 < a.realHeight) {\r\n                a.sizeChanged = !0;\r\n                if (b) {\r\n                    a.legendInitTO && clearTimeout(a.legendInitTO);\r\n                    var c = setTimeout(function () { b.invalidateSize(); }, 10);\r\n                    a.timeOuts.push(c);\r\n                    a.legendInitTO = c;\r\n                }\r\n                a.marginsUpdated = !1;\r\n                clearTimeout(a.initTO);\r\n                c = setTimeout(function () { a.initChart(); }, 10);\r\n                a.timeOuts.push(c);\r\n                a.initTO = c;\r\n            }\r\n            a.renderFix();\r\n            b && b.renderFix && b.renderFix();\r\n            clearTimeout(a.resizedTO);\r\n            a.resizedTO = setTimeout(function () { a.fire({ type: \"resized\", chart: a }); }, 10);\r\n            a.previousHeight = a.divRealHeight;\r\n            a.previousWidth = a.divRealWidth;\r\n        } }, invalidateSize: function () { this.previousHeight = this.previousWidth = NaN; this.invalidateSizeReal(); }, invalidateSizeReal: function () { var a = this; a.marginsUpdated = !1; clearTimeout(a.validateTO); var b = setTimeout(function () { a.validateSize(); }, 5); a.timeOuts.push(b); a.validateTO = b; }, validateData: function (a) { this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = !1, this.initChart(a)); }, validateNow: function (a, b) { this.initTO && clearTimeout(this.initTO); a && (this.dataChanged = !0, this.marginsUpdated = !1); this.skipEvents = b; this.chartRendered = !1; var c = this.legend; c && c.position != this.prevLegendPosition && (this.previousWidth = this.mw = 0, c.invalidateSize && (c.invalidateSize(), this.validateSize())); this.write(this.div); }, showItem: function (a) { a.hidden = !1; this.initChart(); }, hideItem: function (a) { a.hidden = !0; this.initChart(); }, hideBalloon: function () { var a = this; clearTimeout(a.hoverInt); clearTimeout(a.balloonTO); a.hoverInt = setTimeout(function () { a.hideBalloonReal.call(a); }, a.hideBalloonTime); }, cleanChart: function () { }, hideBalloonReal: function () { var a = this.balloon; a && a.hide && a.hide(); }, showBalloon: function (a, b, c, e, d) { var f = this; clearTimeout(f.balloonTO); clearTimeout(f.hoverInt); f.balloonTO = setTimeout(function () { f.showBalloonReal.call(f, a, b, c, e, d); }, 1); }, showBalloonReal: function (a, b, c, e, d) { this.handleMouseMove(); var f = this.balloon; f.enabled && (f.followCursor(!1), f.changeColor(b), !c || f.fixedPosition ? (f.setPosition(e, d), isNaN(e) || isNaN(d) ? f.followCursor(!0) : f.followCursor(!1)) : f.followCursor(!0), a && f.showBalloon(a)); }, handleMouseOver: function () { this.outTO && clearTimeout(this.outTO); d.resetMouseOver(); this.mouseIsOver = !0; }, handleMouseOut: function () { var a = this; d.resetMouseOver(); a.outTO && clearTimeout(a.outTO); a.outTO = setTimeout(function () { a.handleMouseOutReal(); }, 10); }, handleMouseOutReal: function () { this.mouseIsOver = !1; }, handleMouseMove: function (a) { a || (a = window.event); this.mouse2Y = this.mouse2X = NaN; var b, c, e, d; if (a) {\r\n            if (a.touches) {\r\n                var f = a.touches.item(1);\r\n                f && this.panEventsEnabled && this.boundingRect && (e = f.clientX - this.boundingRect.left, d = f.clientY - this.boundingRect.top);\r\n                a = a.touches.item(0);\r\n                if (!a)\r\n                    return;\r\n            }\r\n            else\r\n                this.wasTouched = !1;\r\n            this.boundingRect && a.clientX && (b = a.clientX - this.boundingRect.left, c = a.clientY - this.boundingRect.top);\r\n            isNaN(e) ? this.mouseX = b : (this.mouseX = Math.min(b, e), this.mouse2X = Math.max(b, e));\r\n            isNaN(d) ? this.mouseY = c : (this.mouseY = Math.min(c, d), this.mouse2Y = Math.max(c, d));\r\n            this.autoTransform && (this.mouseX /= this.cssScale, this.mouseY /= this.cssScale);\r\n        } }, handleTouchStart: function (a) { this.hideBalloonReal(); a && (a.touches && this.tapToActivate && !this.tapped || !this.panRequired) || (this.handleMouseMove(a), this.handleMouseDown(a)); }, handleTouchEnd: function (a) { this.wasTouched = !0; this.handleMouseMove(a); d.resetMouseOver(); this.handleReleaseOutside(a); }, handleReleaseOutside: function () { this.handleDocTouchEnd.call(this); }, handleMouseDown: function (a) { d.resetMouseOver(); this.mouseIsOver = !0; a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault()); }, addLegend: function (a, b) { a = d.processObject(a, d.AmLegend, this.theme); a.divId = b; a.ieW = 0; var c; c = \"object\" != typeof b && b ? document.getElementById(b) : b; this.legend = a; a.chart = this; c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv; return a; }, removeLegend: function () { this.legend = void 0; this.previousWidth = 0; this.legendDiv.innerHTML = \"\"; }, handleResize: function () { (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal(); this.renderFix(); }, renderFix: function () { if (!d.VML) {\r\n            var a = this.container;\r\n            a && a.renderFix();\r\n        } }, getSVG: function () { if (d.hasSVG)\r\n            return this.container; }, animate: function (a, b, c, e, h, f, g) { a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]); c = { obj: a, frame: 0, attribute: b, from: c, to: e, time: h, effect: f, suffix: g }; a[\"an_\" + b] = c; this.animations.push(c); return c; }, setLegendData: function (a) { var b = this.legend; b && b.setData(a); }, stopAnim: function (a) { d.removeFromArray(this.animations, a); }, updateAnimations: function () { var a; this.container && this.container.update(); if (this.animations)\r\n            for (a = this.animations.length - 1; 0 <= a; a--) {\r\n                var b = this.animations[a], c = d.updateRate * b.time, e = b.frame + 1, h = b.obj, f = b.attribute;\r\n                if (e <= c) {\r\n                    b.frame++;\r\n                    var g = Number(b.from), k = Number(b.to) - g, c = d[b.effect](0, e, g, k, c);\r\n                    0 === k ? (this.animations.splice(a, 1), h.node.style[f] = Number(b.to) + b.suffix) : h.node.style[f] = c + b.suffix;\r\n                }\r\n                else\r\n                    h.node.style[f] = Number(b.to) + b.suffix, h.animationFinished = !0, this.animations.splice(a, 1);\r\n            } }, update: function () { this.updateAnimations(); var a = this.animatable; if (0 < a.length) {\r\n            for (var b = !0, c = a.length - 1; 0 <= c; c--) {\r\n                var e = a[c];\r\n                e && (e.animationFinished ? a.splice(c, 1) : b = !1);\r\n            }\r\n            b && (this.fire({ type: \"animationFinished\", chart: this }), this.animatable = []);\r\n        } }, inIframe: function () { try {\r\n            return window.self !== window.top;\r\n        }\r\n        catch (a) {\r\n            return !0;\r\n        } }, brr: function () { if (!this.hideCredits) {\r\n            var a = \"amcharts.com\", b = window.location.hostname.split(\".\"), c;\r\n            2 <= b.length && (c = b[b.length - 2] + \".\" + b[b.length - 1]);\r\n            this.amLink && (b = this.amLink.parentNode) && b.removeChild(this.amLink);\r\n            b = this.creditsPosition;\r\n            if (c != a || !0 === this.inIframe()) {\r\n                var a = \"http://www.\" + a, e = c = 0, d = this.realWidth, f = this.realHeight, g = this.type;\r\n                if (\"serial\" == g || \"xy\" == g || \"gantt\" == g)\r\n                    c = this.marginLeftReal, e = this.marginTopReal, d = c + this.plotAreaWidth, f = e + this.plotAreaHeight;\r\n                var g = a + \"/javascript-charts/\", k = \"JavaScript charts\", l = \"JS chart by amCharts\";\r\n                \"ammap\" == this.product && (g = a + \"/javascript-maps/\", k = \"Interactive JavaScript maps\", l = \"JS map by amCharts\");\r\n                a = document.createElement(\"a\");\r\n                l = document.createTextNode(l);\r\n                a.setAttribute(\"href\", g);\r\n                a.setAttribute(\"title\", k);\r\n                this.urlTarget && a.setAttribute(\"target\", this.urlTarget);\r\n                a.appendChild(l);\r\n                this.chartDiv.appendChild(a);\r\n                this.amLink = a;\r\n                g = a.style;\r\n                g.position = \"absolute\";\r\n                g.textDecoration = \"none\";\r\n                g.color = this.color;\r\n                g.fontFamily = this.fontFamily;\r\n                g.fontSize = \"11px\";\r\n                g.opacity = .7;\r\n                g.display = \"block\";\r\n                var k = a.offsetWidth, a = a.offsetHeight, l = 5 + c, m = e + 5;\r\n                \"bottom-left\" == b && (l = 5 + c, m = f - a - 3);\r\n                \"bottom-right\" == b && (l = d - k - 5, m = f - a - 3);\r\n                \"top-right\" == b && (l = d - k - 5, m = e + 5);\r\n                g.left = l + \"px\";\r\n                g.top = m + \"px\";\r\n            }\r\n        } } });\r\n    d.Slice = d.Class({ construct: function () { } });\r\n    d.SerialDataItem = d.Class({ construct: function () { } });\r\n    d.GraphDataItem = d.Class({ construct: function () { } });\r\n    d.Guide = d.Class({ construct: function (a) { this.cname = \"Guide\"; d.applyTheme(this, a, this.cname); } });\r\n    d.Title = d.Class({ construct: function (a) { this.cname = \"Title\"; d.applyTheme(this, a, this.cname); } });\r\n    d.Label = d.Class({ construct: function (a) { this.cname = \"Label\"; d.applyTheme(this, a, this.cname); } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.AmGraph = d.Class({ construct: function (a) { this.cname = \"AmGraph\"; this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\"); this.type = \"line\"; this.stackable = !0; this.columnCount = 1; this.columnIndex = 0; this.centerCustomBullets = this.showBalloon = !0; this.maxBulletSize = 50; this.minBulletSize = 4; this.balloonText = \"[[value]]\"; this.hidden = this.scrollbar = this.animationPlayed = !1; this.pointPosition = \"middle\"; this.depthCount = 1; this.includeInMinMax = !0; this.negativeBase = 0; this.visibleInLegend = !0; this.showAllValueLabels = !1; this.showBulletsAt = this.showBalloonAt = \"close\"; this.lineThickness = 1; this.dashLength = 0; this.connect = !0; this.lineAlpha = 1; this.bullet = \"none\"; this.bulletBorderThickness = 2; this.bulletBorderAlpha = 0; this.bulletAlpha = 1; this.bulletSize = 8; this.cornerRadiusTop = this.hideBulletsCount = this.bulletOffset = 0; this.cursorBulletAlpha = 1; this.gradientOrientation = \"vertical\"; this.dy = this.dx = 0; this.periodValue = \"\"; this.clustered = !0; this.periodSpan = 1; this.accessibleLabel = \"[[title]] [[category]] [[value]]\"; this.accessibleSkipText = \"Press enter to skip [[title]]\"; this.y = this.x = 0; this.switchable = !0; this.tcc = this.minDistance = 1; this.labelRotation = 0; this.labelAnchor = \"auto\"; this.labelOffset = 3; this.bcn = \"graph-\"; this.dateFormat = \"MMM DD, YYYY\"; this.noRounding = !0; d.applyTheme(this, a, this.cname); }, init: function () { this.createBalloon(); }, draw: function () { var a = this.chart; a.isRolledOverBullet = !1; var b = a.type; if (a.drawGraphs) {\r\n            isNaN(this.precision) || (this.numberFormatter ? this.numberFormatter.precision = this.precision : this.numberFormatter = { precision: this.precision, decimalSeparator: a.decimalSeparator, thousandsSeparator: a.thousandsSeparator });\r\n            var c = a.container;\r\n            this.container = c;\r\n            this.destroy();\r\n            var e = c.set();\r\n            this.set = e;\r\n            e.translate(this.x, this.y);\r\n            var h = c.set();\r\n            this.bulletSet = h;\r\n            h.translate(this.x, this.y);\r\n            this.behindColumns ? (a.graphsBehindSet.push(e), a.bulletBehindSet.push(h)) : (a.graphsSet.push(e), a.bulletSet.push(h));\r\n            var f = this.bulletAxis;\r\n            d.isString(f) && (this.bulletAxis = a.getValueAxisById(f));\r\n            c = c.set();\r\n            d.remove(this.columnsSet);\r\n            this.columnsSet = c;\r\n            d.setCN(a, e, \"graph-\" + this.type);\r\n            d.setCN(a, e, \"graph-\" + this.id);\r\n            d.setCN(a, h, \"graph-\" + this.type);\r\n            d.setCN(a, h, \"graph-\" + this.id);\r\n            this.columnsArray = [];\r\n            this.ownColumns = [];\r\n            this.allBullets = [];\r\n            this.animationArray = [];\r\n            h = this.labelPosition;\r\n            h || (f = this.valueAxis.stackType, h = \"top\", \"column\" == this.type && (a.rotate && (h = \"right\"), \"100%\" == f || \"regular\" == f) && (h = \"middle\"), this.labelPosition = h);\r\n            d.ifArray(this.data) && (a = !1, \"xy\" == b ? this.xAxis.axisCreated && this.yAxis.axisCreated && (a = !0) : this.valueAxis.axisCreated && (a = !0), !this.hidden && a && this.createGraph());\r\n            e.push(c);\r\n        } }, createGraph: function () { var a = this, b = a.chart; a.startAlpha = b.startAlpha; a.seqAn = b.sequencedAnimation; a.baseCoord = a.valueAxis.baseCoord; void 0 === a.fillAlphas && (a.fillAlphas = 0); a.bulletColorR = a.bulletColor; void 0 === a.bulletColorR && (a.bulletColorR = a.lineColorR, a.bulletColorNegative = a.negativeLineColor); void 0 === a.bulletAlpha && (a.bulletAlpha = a.lineAlpha); if (\"step\" == c || d.VML)\r\n            a.noRounding = !1; var c = b.type; \"gantt\" == c && (c = \"serial\"); clearTimeout(a.playedTO); if (!isNaN(a.valueAxis.min) && !isNaN(a.valueAxis.max)) {\r\n            switch (c) {\r\n                case \"serial\":\r\n                    a.categoryAxis && (a.createSerialGraph(), \"candlestick\" == a.type && 1 > a.valueAxis.minMaxMultiplier && a.positiveClip(a.set));\r\n                    break;\r\n                case \"radar\":\r\n                    a.createRadarGraph();\r\n                    break;\r\n                case \"xy\": a.createXYGraph();\r\n            }\r\n            a.playedTO = setTimeout(function () { a.setAnimationPlayed.call(a); }, 500 * a.chart.startDuration);\r\n        } }, setAnimationPlayed: function () { this.animationPlayed = !0; }, createXYGraph: function () { var a = [], b = [], c = this.xAxis, e = this.yAxis; this.pmh = e.height; this.pmw = c.width; this.pmy = this.pmx = 0; var d; for (d = this.start; d <= this.end; d++) {\r\n            var f = this.data[d].axes[c.id].graphs[this.id], g = f.values, k = g.x, l = g.y, g = c.getCoordinate(k, this.noRounding), m = e.getCoordinate(l, this.noRounding);\r\n            if (!isNaN(k) && !isNaN(l) && (a.push(g), b.push(m), f.x = g, f.y = m, k = this.createBullet(f, g, m, d), l = this.labelText)) {\r\n                var l = this.createLabel(f, l), p = 0;\r\n                k && (p = k.size);\r\n                this.positionLabel(f, g, m, l, p);\r\n            }\r\n        } this.drawLineGraph(a, b); this.launchAnimation(); }, createRadarGraph: function () { var a = this.valueAxis.stackType, b = [], c = [], e = [], d = [], f, g, k, l, m; for (m = this.start; m <= this.end; m++) {\r\n            var p = this.data[m].axes[this.valueAxis.id].graphs[this.id], q, n;\r\n            \"none\" == a || \"3d\" == a ? q = p.values.value : (q = p.values.close, n = p.values.open);\r\n            if (isNaN(q))\r\n                this.connect || (this.drawLineGraph(b, c, e, d), b = [], c = [], e = [], d = []);\r\n            else {\r\n                var t = this.valueAxis.getCoordinate(q, this.noRounding) - this.height, t = t * this.valueAxis.rMultiplier, r = -360 / (this.end - this.start + 1) * m;\r\n                \"middle\" == this.valueAxis.pointPosition && (r -= 180 / (this.end - this.start + 1));\r\n                q = t * Math.sin(r / 180 * Math.PI);\r\n                t *= Math.cos(r / 180 * Math.PI);\r\n                b.push(q);\r\n                c.push(t);\r\n                if (!isNaN(n)) {\r\n                    var w = this.valueAxis.getCoordinate(n, this.noRounding) - this.height, w = w * this.valueAxis.rMultiplier, z = w * Math.sin(r / 180 * Math.PI), r = w * Math.cos(r / 180 * Math.PI);\r\n                    e.push(z);\r\n                    d.push(r);\r\n                    isNaN(k) && (k = z);\r\n                    isNaN(l) && (l = r);\r\n                }\r\n                r = this.createBullet(p, q, t, m);\r\n                p.x = q;\r\n                p.y = t;\r\n                if (z = this.labelText)\r\n                    z = this.createLabel(p, z), w = 0, r && (w = r.size), this.positionLabel(p, q, t, z, w);\r\n                isNaN(f) && (f = q);\r\n                isNaN(g) && (g = t);\r\n            }\r\n        } b.push(f); c.push(g); isNaN(k) || (e.push(k), d.push(l)); this.drawLineGraph(b, c, e, d); this.launchAnimation(); }, positionLabel: function (a, b, c, e, d) {\r\n            if (e) {\r\n                var f = this.chart, g = this.valueAxis, k = \"middle\", l = !1, m = this.labelPosition, p = e.getBBox(), q = this.chart.rotate, n = a.isNegative, t = this.fontSize;\r\n                void 0 === t && (t = this.chart.fontSize);\r\n                c -= p.height / 2 - t / 2 - 1;\r\n                void 0 !== a.labelIsNegative && (n = a.labelIsNegative);\r\n                switch (m) {\r\n                    case \"right\":\r\n                        m = q ? n ? \"left\" : \"right\" : \"right\";\r\n                        break;\r\n                    case \"top\":\r\n                        m = q ? \"top\" : n ? \"bottom\" : \"top\";\r\n                        break;\r\n                    case \"bottom\":\r\n                        m = q ? \"bottom\" : n ? \"top\" : \"bottom\";\r\n                        break;\r\n                    case \"left\": m = q ? n ? \"right\" : \"left\" : \"left\";\r\n                }\r\n                var t = a.columnGraphics, r = 0, w = 0;\r\n                t && (r = t.x, w = t.y);\r\n                var z = this.labelOffset;\r\n                switch (m) {\r\n                    case \"right\":\r\n                        k = \"start\";\r\n                        b += d / 2 + z;\r\n                        break;\r\n                    case \"top\":\r\n                        c = g.reversed ? c + (d / 2 + p.height / 2 + z) : c - (d / 2 + p.height / 2 + z);\r\n                        break;\r\n                    case \"bottom\":\r\n                        c = g.reversed ? c - (d / 2 + p.height / 2 + z) : c + (d / 2 + p.height / 2 + z);\r\n                        break;\r\n                    case \"left\":\r\n                        k = \"end\";\r\n                        b -= d / 2 + z;\r\n                        break;\r\n                    case \"inside\":\r\n                        \"column\" == this.type && (l = !0, q ? n ? (k = \"end\", b = r - 3 - z) : (k = \"start\", b = r + 3 + z) : c = n ? w + 7 + z : w - 10 - z);\r\n                        break;\r\n                    case \"middle\": \"column\" == this.type && (l = !0, q ? b -= (b - r) / 2 + z - 3 : c -= (c - w) / 2 + z - 3);\r\n                }\r\n                \"auto\" != this.labelAnchor && (k = this.labelAnchor);\r\n                e.attr({ \"text-anchor\": k });\r\n                this.labelRotation && e.rotate(this.labelRotation);\r\n                e.translate(b, c);\r\n                !this.showAllValueLabels && t && l && (p = e.getBBox(), p.height > a.columnHeight || p.width > a.columnWidth) && (e.remove(), e = null);\r\n                if (e && \"radar\" != f.type)\r\n                    if (q) {\r\n                        if (0 > c || c > this.height)\r\n                            e.remove(), e = null;\r\n                        !this.showAllValueLabels && e && (0 > b || b > this.width) && (e.remove(), e = null);\r\n                    }\r\n                    else {\r\n                        if (0 > b || b > this.width)\r\n                            e.remove(),\r\n                                e = null;\r\n                        !this.showAllValueLabels && e && (0 > c || c > this.height) && (e.remove(), e = null);\r\n                    }\r\n                e && this.allBullets.push(e);\r\n                return e;\r\n            }\r\n        }, getGradRotation: function () { var a = 270; \"horizontal\" == this.gradientOrientation && (a = 0); return this.gradientRotation = a; }, createSerialGraph: function () {\r\n            this.dashLengthSwitched = this.fillColorsSwitched = this.lineColorSwitched = void 0;\r\n            var a = this.chart, b = this.id, c = this.index, e = this.data, h = this.chart.container, f = this.valueAxis, g = this.type, k = this.columnWidthReal, l = this.showBulletsAt;\r\n            isNaN(this.columnWidth) || (k = this.columnWidth);\r\n            isNaN(k) && (k = .8);\r\n            var m = this.useNegativeColorIfDown, p = this.width, q = this.height, n = this.y, t = this.rotate, r = this.columnCount, w = d.toCoordinate(this.cornerRadiusTop, k / 2), z = this.connect, x = [], u = [], A, y, B, D, C = this.chart.graphs.length, I, H = this.dx / this.tcc, Q = this.dy / this.tcc, M = f.stackType, P = this.start, ia = this.end, J = this.scrollbar, aa = \"graph-column-\";\r\n            J && (aa = \"scrollbar-graph-column-\");\r\n            var ma = this.categoryAxis, na = this.baseCoord, Pa = this.negativeBase, Z = this.columnIndex, da = this.lineThickness, X = this.lineAlpha, xa = this.lineColorR, ea = this.dashLength, fa = this.set, Ba, ga = this.getGradRotation(), V = this.chart.columnSpacing, Y = ma.cellWidth, Da = (Y * k - r) / r;\r\n            V > Da && (V = Da);\r\n            var G, v, oa, ha = q, Qa = p, ca = 0, tb = 0, ub = 0, vb = 0, gb = 0, hb = 0, wb = this.fillColorsR, Ra = this.negativeFillColors, Ja = this.negativeLineColor, Ya = this.fillAlphas, Za = this.negativeFillAlphas;\r\n            \"object\" == typeof Ya && (Ya = Ya[0]);\r\n            \"object\" == typeof Za && (Za = Za[0]);\r\n            var xb = this.noRounding;\r\n            \"step\" == g && (xb = !1);\r\n            var ib = f.getCoordinate(f.min);\r\n            f.logarithmic && (ib = f.getCoordinate(f.minReal));\r\n            this.minCoord =\r\n                ib;\r\n            this.resetBullet && (this.bullet = \"none\");\r\n            if (!(J || \"line\" != g && \"smoothedLine\" != g && \"step\" != g || (1 == e.length && \"step\" != g && \"none\" == this.bullet && (this.bullet = \"round\", this.resetBullet = !0), !Ra && void 0 == Ja || m))) {\r\n                var Ua = Pa;\r\n                Ua > f.max && (Ua = f.max);\r\n                Ua < f.min && (Ua = f.min);\r\n                f.logarithmic && (Ua = f.minReal);\r\n                var Ka = f.getCoordinate(Ua), Mb = f.getCoordinate(f.max);\r\n                t ? (ha = q, Qa = Math.abs(Mb - Ka), ub = q, vb = Math.abs(ib - Ka), hb = tb = 0, f.reversed ? (ca = 0, gb = Ka) : (ca = Ka, gb = 0)) : (Qa = p, ha = Math.abs(Mb - Ka), vb = p, ub = Math.abs(ib - Ka), gb = ca = 0, f.reversed ? (hb = n, tb = Ka) : hb = Ka);\r\n            }\r\n            var La = Math.round;\r\n            this.pmx = La(ca);\r\n            this.pmy = La(tb);\r\n            this.pmh = La(ha);\r\n            this.pmw = La(Qa);\r\n            this.nmx = La(gb);\r\n            this.nmy = La(hb);\r\n            this.nmh = La(ub);\r\n            this.nmw = La(vb);\r\n            d.isModern || (this.nmy = this.nmx = 0, this.nmh = this.height);\r\n            this.clustered || (r = 1);\r\n            k = \"column\" == g ? (Y * k - V * (r - 1)) / r : Y * k;\r\n            1 > k && (k = 1);\r\n            var Nb = this.fixedColumnWidth;\r\n            isNaN(Nb) || (k = Nb);\r\n            var L;\r\n            if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g) {\r\n                if (0 < P) {\r\n                    for (L = P - 1; -1 < L; L--)\r\n                        if (G = e[L], v = G.axes[f.id].graphs[b], oa = v.values.value, !isNaN(oa)) {\r\n                            P = L;\r\n                            break;\r\n                        }\r\n                    if (this.lineColorField)\r\n                        for (L =\r\n                            P; -1 < L; L--)\r\n                            if (G = e[L], v = G.axes[f.id].graphs[b], v.lineColor) {\r\n                                this.lineColorSwitched = v.lineColor;\r\n                                void 0 === this.bulletColor && (this.bulletColorSwitched = this.lineColorSwitched);\r\n                                break;\r\n                            }\r\n                    if (this.fillColorsField)\r\n                        for (L = P; -1 < L; L--)\r\n                            if (G = e[L], v = G.axes[f.id].graphs[b], v.fillColors) {\r\n                                this.fillColorsSwitched = v.fillColors;\r\n                                break;\r\n                            }\r\n                    if (this.dashLengthField)\r\n                        for (L = P; -1 < L; L--)\r\n                            if (G = e[L], v = G.axes[f.id].graphs[b], !isNaN(v.dashLength)) {\r\n                                this.dashLengthSwitched = v.dashLength;\r\n                                break;\r\n                            }\r\n                }\r\n                if (ia < e.length - 1)\r\n                    for (L = ia + 1; L < e.length; L++)\r\n                        if (G = e[L], v = G.axes[f.id].graphs[b], oa = v.values.value, !isNaN(oa)) {\r\n                            ia = L;\r\n                            break;\r\n                        }\r\n            }\r\n            ia < e.length - 1 && ia++;\r\n            var T = [], U = [], Ma = !1;\r\n            if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g)\r\n                if (this.stackable && \"regular\" == M || \"100%\" == M || this.fillToGraph)\r\n                    Ma = !0;\r\n            var Ob = this.noStepRisers, jb = -1E3, kb = -1E3, lb = this.minDistance, Sa = !0, $a = !1;\r\n            for (L = P; L <= ia; L++) {\r\n                G = e[L];\r\n                v = G.axes[f.id].graphs[b];\r\n                v.index = L;\r\n                var ab, Ta = NaN;\r\n                if (m && void 0 == this.openField)\r\n                    for (var yb = L + 1; yb < e.length && (!e[yb] || !(ab = e[L + 1].axes[f.id].graphs[b]) || !ab.values || (Ta = ab.values.value, isNaN(Ta))); yb++)\r\n                        ;\r\n                var S, R, K, ba, ja = NaN, E = NaN, F = NaN, O = NaN, N = NaN, qa = NaN, ra = NaN, sa = NaN, ta = NaN, ya = NaN, Ea = NaN, ka = NaN, la = NaN, W = NaN, zb = NaN, Ab = NaN, ua = NaN, va = void 0, Na = wb, Va = Ya, Ha = xa, Ca, za, Bb = this.proCandlesticks, mb = this.topRadius, Fa = q - 1, pa = p - 1, bb = this.pattern;\r\n                void 0 != v.pattern && (bb = v.pattern);\r\n                isNaN(v.alpha) || (Va = v.alpha);\r\n                isNaN(v.dashLength) || (ea = v.dashLength);\r\n                var Ia = v.values;\r\n                f.recalculateToPercents && (Ia = v.percents);\r\n                \"none\" == M && (Z = isNaN(v.columnIndex) ? this.columnIndex : v.columnIndex);\r\n                if (Ia) {\r\n                    W = this.stackable && \"none\" != M && \"3d\" != M ? Ia.close : Ia.value;\r\n                    if (\"candlestick\" == g || \"ohlc\" == g)\r\n                        W = Ia.close, Ab = Ia.low, ra = f.getCoordinate(Ab), zb = Ia.high, ta = f.getCoordinate(zb);\r\n                    ua = Ia.open;\r\n                    F = f.getCoordinate(W, xb);\r\n                    isNaN(ua) || (N = f.getCoordinate(ua, xb), m && \"regular\" != M && \"100%\" != M && (Ta = ua, ua = N = NaN));\r\n                    m && (void 0 == this.openField ? ab && (ab.isNegative = Ta < W ? !0 : !1, isNaN(Ta) && (v.isNegative = !Sa)) : v.isNegative = Ta > W ? !0 : !1);\r\n                    if (!J)\r\n                        switch (this.showBalloonAt) {\r\n                            case \"close\":\r\n                                v.y = F;\r\n                                break;\r\n                            case \"open\":\r\n                                v.y = N;\r\n                                break;\r\n                            case \"high\":\r\n                                v.y = ta;\r\n                                break;\r\n                            case \"low\": v.y = ra;\r\n                        }\r\n                    var ja = G.x[ma.id], Wa = this.periodSpan - 1;\r\n                    \"step\" != g || isNaN(G.cellWidth) || (Y = G.cellWidth);\r\n                    var wa = Math.floor(Y / 2) + Math.floor(Wa * Y / 2), Ga = wa, nb = 0;\r\n                    \"left\" == this.stepDirection && (nb = (2 * Y + Wa * Y) / 2, ja -= nb);\r\n                    \"center\" == this.stepDirection && (nb = Y / 2, ja -= nb);\r\n                    \"start\" == this.pointPosition && (ja -= Y / 2 + Math.floor(Wa * Y / 2), wa = 0, Ga = Math.floor(Y) + Math.floor(Wa * Y));\r\n                    \"end\" == this.pointPosition && (ja += Y / 2 + Math.floor(Wa * Y / 2), wa = Math.floor(Y) + Math.floor(Wa * Y), Ga = 0);\r\n                    if (Ob) {\r\n                        var Cb = this.columnWidth;\r\n                        isNaN(Cb) || (wa *= Cb, Ga *= Cb);\r\n                    }\r\n                    J || (v.x = ja);\r\n                    -1E5 > ja && (ja = -1E5);\r\n                    ja > p + 1E5 && (ja = p + 1E5);\r\n                    t ? (E = F, O = N, N = F = ja, isNaN(ua) && !this.fillToGraph && (O = na), qa = ra, sa = ta) : (O = E = ja, isNaN(ua) && !this.fillToGraph && (N = na));\r\n                    if (!Bb && W < ua || Bb && W < Ba)\r\n                        v.isNegative = !0, Ra && (Na = Ra), Za && (Va = Za), void 0 != Ja && (Ha = Ja);\r\n                    $a = !1;\r\n                    isNaN(W) || (m ? W > Ta ? (Sa && ($a = !0), Sa = !1) : (Sa || ($a = !0), Sa = !0) : v.isNegative = W < Pa ? !0 : !1, Ba = W);\r\n                    var Pb = !1;\r\n                    J && a.chartScrollbar.ignoreCustomColors && (Pb = !0);\r\n                    Pb || (void 0 != v.color && (Na = v.color), v.fillColors && (Na = v.fillColors));\r\n                    F = d.fitToBounds(F, -3E4, 3E4);\r\n                    switch (g) {\r\n                        case \"line\":\r\n                            if (isNaN(W))\r\n                                z || (this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = []);\r\n                            else {\r\n                                if (Math.abs(E - jb) >= lb || Math.abs(F - kb) >= lb)\r\n                                    x.push(E), u.push(F), jb = E, kb = F;\r\n                                ya = E;\r\n                                Ea = F;\r\n                                ka = E;\r\n                                la = F;\r\n                                !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N));\r\n                                if ($a || void 0 != v.lineColor && v.lineColor != this.lineColorSwitched || void 0 != v.fillColors && v.fillColors != this.fillColorsSwitched || !isNaN(v.dashLength))\r\n                                    this.drawLineGraph(x, u, T, U), x = [E], u = [F], T = [], U = [], !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N)), m ? (Sa ? (this.lineColorSwitched = xa, this.fillColorsSwitched = wb) : (this.lineColorSwitched = Ja, this.fillColorsSwitched = Ra), void 0 === this.bulletColor && (this.bulletColorSwitched = xa)) : (this.lineColorSwitched = v.lineColor, this.fillColorsSwitched = v.fillColors, void 0 === this.bulletColor && (this.bulletColorSwitched = this.lineColorSwitched)), this.dashLengthSwitched = v.dashLength;\r\n                                v.gap && (this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = []);\r\n                            }\r\n                            break;\r\n                        case \"smoothedLine\":\r\n                            if (isNaN(W))\r\n                                z || (this.drawSmoothedGraph(x, u, T, U), x = [], u = [], T = [], U = []);\r\n                            else {\r\n                                if (Math.abs(E - jb) >= lb || Math.abs(F - kb) >= lb)\r\n                                    x.push(E), u.push(F), jb = E, kb = F;\r\n                                ya = E;\r\n                                Ea = F;\r\n                                ka = E;\r\n                                la = F;\r\n                                !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N));\r\n                                void 0 == v.lineColor && void 0 == v.fillColors && isNaN(v.dashLength) || (this.drawSmoothedGraph(x, u, T, U), x = [E], u = [F], T = [], U = [], !Ma || isNaN(N) || isNaN(O) || (T.push(O), U.push(N)), this.lineColorSwitched = v.lineColor, this.fillColorsSwitched = v.fillColors, this.dashLengthSwitched = v.dashLength);\r\n                                v.gap && (this.drawSmoothedGraph(x, u, T, U), x = [], u = [], T = [], U = []);\r\n                            }\r\n                            break;\r\n                        case \"step\":\r\n                            if (!isNaN(W)) {\r\n                                t ? (isNaN(A) || (x.push(A), u.push(F - wa)), u.push(F - wa), x.push(E), u.push(F + Ga), x.push(E), !Ma || isNaN(N) || isNaN(O) || (isNaN(B) || (T.push(B), U.push(N - wa)), T.push(O), U.push(N - wa), T.push(O), U.push(N + Ga))) : (isNaN(y) || (u.push(y), x.push(E - wa)), x.push(E - wa), u.push(F), x.push(E + Ga), u.push(F), !Ma || isNaN(N) || isNaN(O) || (isNaN(D) || (T.push(O - wa), U.push(D)), T.push(O - wa), U.push(N), T.push(O + Ga), U.push(N)));\r\n                                A = E;\r\n                                y = F;\r\n                                B = O;\r\n                                D = N;\r\n                                ya = E;\r\n                                Ea = F;\r\n                                ka = E;\r\n                                la = F;\r\n                                if ($a || void 0 != v.lineColor || void 0 != v.fillColors || !isNaN(v.dashLength)) {\r\n                                    var Db = x[x.length - 2], dc = u[u.length - 2];\r\n                                    x.pop();\r\n                                    u.pop();\r\n                                    T.pop();\r\n                                    U.pop();\r\n                                    this.drawLineGraph(x, u, T, U);\r\n                                    x = [Db];\r\n                                    u = [dc];\r\n                                    T = [];\r\n                                    U = [];\r\n                                    Ma && (T = [Db, Db + wa + Ga], U = [D, D]);\r\n                                    t ? (u.push(F + Ga), x.push(E)) : (x.push(E + Ga), u.push(F));\r\n                                    this.lineColorSwitched = v.lineColor;\r\n                                    this.fillColorsSwitched = v.fillColors;\r\n                                    this.dashLengthSwitched = v.dashLength;\r\n                                    m && (Sa ? (this.lineColorSwitched = xa, this.fillColorsSwitched = wb) : (this.lineColorSwitched = Ja, this.fillColorsSwitched = Ra));\r\n                                }\r\n                                if (Ob || v.gap)\r\n                                    A = y = NaN, this.drawLineGraph(x, u, T, U), x = [], u = [], T = [], U = [];\r\n                            }\r\n                            else if (!z) {\r\n                                if (1 >= this.periodSpan || 1 < this.periodSpan && E - A > wa + Ga)\r\n                                    A = y = NaN;\r\n                                this.drawLineGraph(x, u, T, U);\r\n                                x = [];\r\n                                u = [];\r\n                                T = [];\r\n                                U = [];\r\n                            }\r\n                            break;\r\n                        case \"column\":\r\n                            Ca = Ha;\r\n                            void 0 != v.lineColor && (Ca = v.lineColor);\r\n                            if (!isNaN(W)) {\r\n                                m || (v.isNegative = W < Pa ? !0 : !1);\r\n                                v.isNegative && (Ra && (Na = Ra), void 0 != Ja && (Ca = Ja));\r\n                                var Qb = f.min, Rb = f.max, ob = ua;\r\n                                isNaN(ob) && (ob = Pa);\r\n                                if (!(W < Qb && ob < Qb || W > Rb && ob > Rb)) {\r\n                                    var Aa;\r\n                                    if (t) {\r\n                                        \"3d\" == M ? (R = F - (r / 2 - this.depthCount + 1) * (k + V) + V / 2 + Q * Z, S = O + H * Z, Aa = Z) : (R = Math.floor(F - (r / 2 - Z) * (k + V) + V / 2), S = O, Aa = 0);\r\n                                        K = k;\r\n                                        ya = E;\r\n                                        Ea = R + k / 2;\r\n                                        ka = E;\r\n                                        la = R + k / 2;\r\n                                        R + K > q + Aa * Q && (K = q - R + Aa * Q);\r\n                                        R < Aa * Q && (K += R, R = Aa * Q);\r\n                                        ba = E - O;\r\n                                        var ec = S;\r\n                                        S = d.fitToBounds(S, 0, p);\r\n                                        ba += ec - S;\r\n                                        ba = d.fitToBounds(ba, -S, p - S + H * Z);\r\n                                        v.labelIsNegative = 0 > ba ? !0 : !1;\r\n                                        0 === ba && 1 / W === 1 / -0 && (v.labelIsNegative = !0);\r\n                                        isNaN(G.percentWidthValue) || (K = this.height * G.percentWidthValue / 100, R = ja - K / 2, Ea = R + K / 2);\r\n                                        K = d.roundTo(K, 2);\r\n                                        ba = d.roundTo(ba, 2);\r\n                                        R < q && 0 < K && (va = new d.Cuboid(h, ba, K, H - a.d3x, Q - a.d3y, Na, Va, da, Ca, X, ga, w, t, ea, bb, mb, aa), v.columnWidth = Math.abs(ba), v.columnHeight = Math.abs(K));\r\n                                    }\r\n                                    else {\r\n                                        \"3d\" == M ? (S = E - (r / 2 - this.depthCount + 1) * (k + V) + V / 2 + H * Z, R = N + Q * Z, Aa = Z) : (S = E - (r / 2 - Z) * (k + V) + V / 2, R = N, Aa = 0);\r\n                                        K = k;\r\n                                        ya = S + k / 2;\r\n                                        Ea = F;\r\n                                        ka = S + k / 2;\r\n                                        la = F;\r\n                                        S + K > p + Aa * H && (K = p - S + Aa * H);\r\n                                        S < Aa * H && (K += S - Aa * H, S = Aa * H);\r\n                                        ba = F - N;\r\n                                        v.labelIsNegative = 0 < ba ? !0 : !1;\r\n                                        0 === ba && 1 / W !== 1 / Math.abs(W) && (v.labelIsNegative = !0);\r\n                                        var fc = R;\r\n                                        R = d.fitToBounds(R, this.dy, q);\r\n                                        ba += fc - R;\r\n                                        ba = d.fitToBounds(ba, -R + Q * Aa, q - R);\r\n                                        isNaN(G.percentWidthValue) || (K = this.width * G.percentWidthValue / 100, S = ja - K / 2, ya = S + K / 2);\r\n                                        K = d.roundTo(K, 2);\r\n                                        ba = d.roundTo(ba, 2);\r\n                                        S < p + Z * H && 0 < K && (this.showOnAxis && (R -= Q / 2), va = new d.Cuboid(h, K, ba, H - a.d3x, Q - a.d3y, Na, Va, da, Ca, this.lineAlpha, ga, w, t, ea, bb, mb, aa), v.columnHeight = Math.abs(ba), v.columnWidth = Math.abs(K));\r\n                                    }\r\n                                }\r\n                                if (va) {\r\n                                    za = va.set;\r\n                                    d.setCN(a, va.set, \"graph-\" + this.type);\r\n                                    d.setCN(a, va.set, \"graph-\" + this.id);\r\n                                    v.className && d.setCN(a, va.set, v.className, !0);\r\n                                    v.columnGraphics = za;\r\n                                    S = d.roundTo(S, 2);\r\n                                    R = d.roundTo(R, 2);\r\n                                    za.translate(S, R);\r\n                                    (v.url || this.showHandOnHover) && za.setAttr(\"cursor\", \"pointer\");\r\n                                    if (!J) {\r\n                                        \"none\" == M && (I = t ? (this.end + 1 - L) * C - c : C * L + c);\r\n                                        \"3d\" == M && (t ? (I = (this.end + 1 - L) * C - c - 1E3 * this.depthCount, ya += H * Z, ka += H * Z, v.y += H * Z) : (I = (C - c) * (L + 1) + 1E3 * this.depthCount, Ea += Q * Z, la += Q * Z, v.y += Q * Z));\r\n                                        if (\"regular\" == M || \"100%\" == M)\r\n                                            I = t ? 0 < Ia.value ? (this.end + 1 - L) * C + c : (this.end + 1 - L) * C - c : 0 < Ia.value ? C * L + c : C * L - c;\r\n                                        this.columnsArray.push({ column: va, depth: I });\r\n                                        v.x = t ? R + K / 2 : S + K / 2;\r\n                                        this.ownColumns.push(va);\r\n                                        this.animateColumns(va, L, E, O, F, N);\r\n                                        this.addListeners(za, v);\r\n                                        void 0 !== this.tabIndex && za.setAttr(\"tabindex\", this.tabIndex);\r\n                                    }\r\n                                    this.columnsSet.push(za);\r\n                                }\r\n                            }\r\n                            break;\r\n                        case \"candlestick\":\r\n                            if (!isNaN(ua) && !isNaN(W)) {\r\n                                var Xa, cb;\r\n                                Ca = Ha;\r\n                                void 0 != v.lineColor && (Ca = v.lineColor);\r\n                                ya = E;\r\n                                la = Ea = F;\r\n                                ka = E;\r\n                                if (t) {\r\n                                    \"open\" == l && (ka = O);\r\n                                    \"high\" == l && (ka = sa);\r\n                                    \"low\" == l && (ka = qa);\r\n                                    E = d.fitToBounds(E, 0, pa);\r\n                                    O = d.fitToBounds(O, 0, pa);\r\n                                    qa = d.fitToBounds(qa, 0, pa);\r\n                                    sa = d.fitToBounds(sa, 0, pa);\r\n                                    if (0 === E && 0 === O && 0 === qa && 0 === sa)\r\n                                        continue;\r\n                                    if (E == pa && O == pa && qa == pa && sa == pa)\r\n                                        continue;\r\n                                    R = F - k / 2;\r\n                                    S = O;\r\n                                    K = k;\r\n                                    R + K > q && (K = q - R);\r\n                                    0 > R && (K += R, R = 0);\r\n                                    if (R < q && 0 < K) {\r\n                                        var Eb, Fb;\r\n                                        W > ua ? (Eb = [E, sa], Fb = [O, qa]) : (Eb = [O, sa], Fb = [E, qa]);\r\n                                        !isNaN(sa) && !isNaN(qa) && F < q && 0 < F && (Xa = d.line(h, Eb, [F, F], Ca, X, da), cb = d.line(h, Fb, [F, F], Ca, X, da));\r\n                                        ba = E - O;\r\n                                        va = new d.Cuboid(h, ba, K, H, Q, Na, Ya, da, Ca, X, ga, w, t, ea, bb, mb, aa);\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    \"open\" == l && (la = N);\r\n                                    \"high\" == l && (la = ta);\r\n                                    \"low\" == l && (la = ra);\r\n                                    F = d.fitToBounds(F, 0, Fa);\r\n                                    N = d.fitToBounds(N, 0, Fa);\r\n                                    ra = d.fitToBounds(ra, 0, Fa);\r\n                                    ta = d.fitToBounds(ta, 0, Fa);\r\n                                    if (0 === F && 0 === N && 0 === ra && 0 === ta)\r\n                                        continue;\r\n                                    if (F == Fa && N == Fa && ra == Fa && ta == Fa)\r\n                                        continue;\r\n                                    S = E - k / 2;\r\n                                    R = N + da / 2;\r\n                                    K = k;\r\n                                    S + K > p && (K = p - S);\r\n                                    0 > S && (K += S, S = 0);\r\n                                    ba = F - N;\r\n                                    if (S < p && 0 < K) {\r\n                                        Bb && W >= ua && (Va = 0);\r\n                                        var va = new d.Cuboid(h, K, ba, H, Q, Na, Va, da, Ca, X, ga, w, t, ea, bb, mb, aa), Gb, Hb;\r\n                                        W > ua ? (Gb = [F, ta], Hb = [N, ra]) : (Gb = [N, ta], Hb = [F, ra]);\r\n                                        !isNaN(ta) && !isNaN(ra) && E < p && 0 < E && (Xa = d.line(h, [E, E], Gb, Ca, X, da), cb = d.line(h, [E, E], Hb, Ca, X, da), d.setCN(a, Xa, this.bcn + \"line-high\"), v.className && d.setCN(a, Xa, v.className, !0), d.setCN(a, cb, this.bcn + \"line-low\"), v.className && d.setCN(a, cb, v.className, !0));\r\n                                    }\r\n                                }\r\n                                va && (za = va.set, v.columnGraphics = za, fa.push(za), za.translate(S, R - da / 2), (v.url || this.showHandOnHover) && za.setAttr(\"cursor\", \"pointer\"), Xa && (fa.push(Xa), fa.push(cb)), J || (v.x = t ? R + K / 2 : S + K / 2, this.animateColumns(va, L, E, O, F, N), this.addListeners(za, v), void 0 !== this.tabIndex && za.setAttr(\"tabindex\", this.tabIndex)));\r\n                            }\r\n                            break;\r\n                        case \"ohlc\": if (!(isNaN(ua) || isNaN(zb) || isNaN(Ab) || isNaN(W))) {\r\n                            var Sb = h.set();\r\n                            fa.push(Sb);\r\n                            W < ua && (v.isNegative = !0, void 0 != Ja && (Ha = Ja));\r\n                            void 0 != v.lineColor && (Ha = v.lineColor);\r\n                            var pb, qb, rb;\r\n                            if (t) {\r\n                                la = F;\r\n                                ka = E;\r\n                                \"open\" == l && (ka = O);\r\n                                \"high\" == l && (ka = sa);\r\n                                \"low\" == l && (ka = qa);\r\n                                qa = d.fitToBounds(qa, 0, pa);\r\n                                sa = d.fitToBounds(sa, 0, pa);\r\n                                if (0 === E && 0 === O && 0 === qa && 0 === sa)\r\n                                    continue;\r\n                                if (E == pa && O == pa && qa == pa && sa == pa)\r\n                                    continue;\r\n                                var Ib = F - k / 2, Ib = d.fitToBounds(Ib, 0, q), Tb = d.fitToBounds(F, 0, q), Jb = F + k / 2, Jb = d.fitToBounds(Jb, 0, q);\r\n                                0 <= O && O <= pa && (qb = d.line(h, [O, O], [Ib, Tb], Ha, X, da, ea));\r\n                                0 < F && F < q && (pb = d.line(h, [qa, sa], [F, F], Ha, X, da, ea));\r\n                                0 <= E && E <= pa && (rb = d.line(h, [E, E], [Tb, Jb], Ha, X, da, ea));\r\n                            }\r\n                            else {\r\n                                la = F;\r\n                                \"open\" == l && (la = N);\r\n                                \"high\" == l && (la = ta);\r\n                                \"low\" == l && (la = ra);\r\n                                var ka = E, ra = d.fitToBounds(ra, 0, Fa), ta = d.fitToBounds(ta, 0, Fa), Kb = E - k / 2, Kb = d.fitToBounds(Kb, 0, p), Ub = d.fitToBounds(E, 0, p), Lb = E + k / 2, Lb = d.fitToBounds(Lb, 0, p);\r\n                                0 <= N && N <= Fa && (qb = d.line(h, [Kb, Ub], [N, N], Ha, X, da, ea));\r\n                                0 < E && E < p && (pb = d.line(h, [E, E], [ra, ta], Ha, X, da, ea));\r\n                                0 <= F && F <= Fa && (rb = d.line(h, [Ub, Lb], [F, F], Ha, X, da, ea));\r\n                            }\r\n                            fa.push(qb);\r\n                            fa.push(pb);\r\n                            fa.push(rb);\r\n                            d.setCN(a, qb, this.bcn + \"stroke-open\");\r\n                            d.setCN(a, rb, this.bcn + \"stroke-close\");\r\n                            d.setCN(a, pb, this.bcn + \"stroke\");\r\n                            v.className && d.setCN(a, Sb, v.className, !0);\r\n                            ya = E;\r\n                            Ea = F;\r\n                        }\r\n                    }\r\n                    if (!J && !isNaN(W)) {\r\n                        var Vb = this.hideBulletsCount;\r\n                        if (this.end - this.start <= Vb || 0 === Vb) {\r\n                            var Wb = this.createBullet(v, ka, la, L), Xb = this.labelText;\r\n                            if (Xb && !isNaN(ya) && !isNaN(ya)) {\r\n                                var gc = this.createLabel(v, Xb), Yb = 0;\r\n                                Wb && (Yb = Wb.size);\r\n                                this.positionLabel(v, ya, Ea, gc, Yb);\r\n                            }\r\n                            if (\"regular\" == M || \"100%\" == M) {\r\n                                var Zb = f.totalText;\r\n                                if (Zb) {\r\n                                    var Oa = this.createLabel(v, Zb, f.totalTextColor);\r\n                                    d.setCN(a, Oa, this.bcn + \"label-total\");\r\n                                    this.allBullets.push(Oa);\r\n                                    if (Oa) {\r\n                                        var $b = Oa.getBBox(), ac = $b.width, bc = $b.height, db, eb, sb = f.totalTextOffset, cc = f.totals[L];\r\n                                        cc && cc.remove();\r\n                                        var fb = 0;\r\n                                        \"column\" != g && (fb = this.bulletSize);\r\n                                        t ? (eb = Ea, db = 0 > W ? E - ac / 2 - 2 - fb - sb : E + ac / 2 + 3 + fb + sb) : (db = ya, eb = 0 > W ? F + bc / 2 + fb + sb : F - bc / 2 - 3 - fb - sb);\r\n                                        Oa.translate(db, eb);\r\n                                        f.totals[L] = Oa;\r\n                                        t ? (0 > eb || eb > q) && Oa.remove() : (0 > db || db > p) && Oa.remove();\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.lastDataItem = v;\r\n            if (\"line\" == g || \"step\" == g || \"smoothedLine\" == g)\r\n                \"smoothedLine\" == g ? this.drawSmoothedGraph(x, u, T, U) : this.drawLineGraph(x, u, T, U), J || this.launchAnimation();\r\n            this.bulletsHidden && this.hideBullets();\r\n            this.customBulletsHidden && this.hideCustomBullets();\r\n        }, animateColumns: function (a, b) { var c = this, e = c.chart.startDuration; 0 < e && !c.animationPlayed && (c.seqAn ? (a.set.hide(), c.animationArray.push(a), e = setTimeout(function () { c.animate.call(c); }, e / (c.end - c.start + 1) * (b - c.start) * 1E3), c.timeOuts.push(e)) : c.animate(a), c.chart.animatable.push(a)); }, createLabel: function (a, b, c) { var e = this.chart, h = a.labelColor; h || (h = this.color); h || (h = e.color); c && (h = c); c = this.fontSize; void 0 === c && (this.fontSize = c = e.fontSize); var f = this.labelFunction; b = e.formatString(b, a); b = d.cleanFromEmpty(b); f && (b = f(a, b)); if (void 0 !== b && \"\" !== b)\r\n            return a = d.text(this.container, b, h, e.fontFamily, c), a.node.style.pointerEvents = \"none\", d.setCN(e, a, this.bcn + \"label\"), this.bulletSet.push(a), a; }, positiveClip: function (a) { a.clipRect(this.pmx, this.pmy, this.pmw, this.pmh); }, negativeClip: function (a) { a.clipRect(this.nmx, this.nmy, this.nmw, this.nmh); }, drawLineGraph: function (a, b, c, e) { var h = this; if (1 < a.length) {\r\n            var f = h.noRounding, g = h.set, k = h.chart, l = h.container, m = l.set(), p = l.set();\r\n            g.push(p);\r\n            g.push(m);\r\n            var q = h.lineAlpha, n = h.lineThickness, g = h.fillAlphas, t = h.lineColorR, r = h.negativeLineAlpha;\r\n            isNaN(r) && (r = q);\r\n            var w = h.lineColorSwitched;\r\n            w && (t = w);\r\n            var w = h.fillColorsR, z = h.fillColorsSwitched;\r\n            z && (w = z);\r\n            var x = h.dashLength;\r\n            (z = h.dashLengthSwitched) && (x = z);\r\n            var z = h.negativeLineColor, u = h.negativeFillColors, A = h.negativeFillAlphas, y = h.baseCoord;\r\n            0 !== h.negativeBase && (y = h.valueAxis.getCoordinate(h.negativeBase, f), y > h.height && (y = h.height), 0 > y && (y = 0));\r\n            q = d.line(l, a, b, t, q, n, x, !1, !0, f);\r\n            q.node.setAttribute(\"stroke-linejoin\", \"round\");\r\n            d.setCN(k, q, h.bcn + \"stroke\");\r\n            m.push(q);\r\n            m.click(function (a) { h.handleGraphEvent(a, \"clickGraph\"); }).mouseover(function (a) { h.handleGraphEvent(a, \"rollOverGraph\"); }).mouseout(function (a) { h.handleGraphEvent(a, \"rollOutGraph\"); }).touchmove(function (a) { h.chart.handleMouseMove(a); }).touchend(function (a) { h.chart.handleTouchEnd(a); });\r\n            void 0 === z || h.useNegativeColorIfDown || (n = d.line(l, a, b, z, r, n, x, !1, !0, f), n.node.setAttribute(\"stroke-linejoin\", \"round\"), d.setCN(k, n, h.bcn + \"stroke\"), d.setCN(k, n, h.bcn + \"stroke-negative\"), p.push(n));\r\n            if (0 < g || 0 < A)\r\n                if (n = a.join(\";\").split(\";\"), r = b.join(\";\").split(\";\"), q = k.type, \"serial\" == q || \"radar\" == q ? 0 < c.length ? (c.reverse(), e.reverse(), n = a.concat(c), r = b.concat(e)) : \"radar\" == q ? (r.push(0), n.push(0)) : h.rotate ? (r.push(r[r.length - 1]), n.push(y), r.push(r[0]), n.push(y), r.push(r[0]), n.push(n[0])) : (n.push(n[n.length - 1]), r.push(y), n.push(n[0]), r.push(y), n.push(a[0]), r.push(r[0])) : \"xy\" == q && (b = h.fillToAxis) && (d.isString(b) && (b = k.getValueAxisById(b)), \"H\" == b.orientation ? (y = \"top\" == b.position ? 0 : b.height, n.push(n[n.length - 1]), r.push(y), n.push(n[0]), r.push(y), n.push(a[0]), r.push(r[0])) : (y = \"left\" == b.position ? 0 : b.width, r.push(r[r.length - 1]), n.push(y), r.push(r[0]), n.push(y), r.push(r[0]), n.push(n[0]))), a = h.gradientRotation, 0 < g && (b = d.polygon(l, n, r, w, g, 1, \"#000\", 0, a, f), b.pattern(h.pattern, NaN, k.path), d.setCN(k, b, h.bcn + \"fill\"), m.push(b)), u || void 0 !== z)\r\n                    isNaN(A) && (A = g), u || (u = z), f = d.polygon(l, n, r, u, A, 1, \"#000\", 0, a, f), d.setCN(k, f, h.bcn + \"fill\"), d.setCN(k, f, h.bcn + \"fill-negative\"), f.pattern(h.pattern, NaN, k.path), p.push(f), p.click(function (a) { h.handleGraphEvent(a, \"clickGraph\"); }).mouseover(function (a) { h.handleGraphEvent(a, \"rollOverGraph\"); }).mouseout(function (a) { h.handleGraphEvent(a, \"rollOutGraph\"); }).touchmove(function (a) { h.chart.handleMouseMove(a); }).touchend(function (a) { h.chart.handleTouchEnd(a); });\r\n            h.applyMask(p, m);\r\n        } }, applyMask: function (a, b) { var c = a.length(); \"serial\" != this.chart.type || this.scrollbar || (this.positiveClip(b), 0 < c && this.negativeClip(a)); }, drawSmoothedGraph: function (a, b, c, e) {\r\n            if (1 < a.length) {\r\n                var h = this.set, f = this.chart, g = this.container, k = g.set(), l = g.set();\r\n                h.push(l);\r\n                h.push(k);\r\n                var m = this.lineAlpha, p = this.lineThickness, h = this.dashLength, q = this.fillAlphas, n = this.lineColorR, t = this.fillColorsR, r = this.negativeLineColor, w = this.negativeFillColors, z = this.negativeFillAlphas, x = this.baseCoord, u = this.lineColorSwitched;\r\n                u && (n = u);\r\n                (u = this.fillColorsSwitched) && (t = u);\r\n                var A = this.negativeLineAlpha;\r\n                isNaN(A) && (A = m);\r\n                u = this.getGradRotation();\r\n                m = new d.Bezier(g, a, b, n, m, p, t, 0, h, void 0, u);\r\n                d.setCN(f, m, this.bcn + \"stroke\");\r\n                k.push(m.path);\r\n                void 0 !== r && (p = new d.Bezier(g, a, b, r, A, p, t, 0, h, void 0, u), d.setCN(f, p, this.bcn + \"stroke\"), d.setCN(f, p, this.bcn + \"stroke-negative\"), l.push(p.path));\r\n                0 < q && (p = a.join(\";\").split(\";\"), m = b.join(\";\").split(\";\"), n = \"\", 0 < c.length ? (c.push(\"M\"), e.push(\"M\"), c.reverse(), e.reverse(), p = a.concat(c), m = b.concat(e)) : (this.rotate ? (n += \" L\" + x + \",\" + b[b.length - 1], n += \" L\" + x + \",\" + b[0]) : (n += \" L\" + a[a.length - 1] + \",\" +\r\n                    x, n += \" L\" + a[0] + \",\" + x), n += \" L\" + a[0] + \",\" + b[0]), a = new d.Bezier(g, p, m, NaN, 0, 0, t, q, h, n, u), d.setCN(f, a, this.bcn + \"fill\"), a.path.pattern(this.pattern, NaN, f.path), k.push(a.path), w || void 0 !== r) && (z || (z = q), w || (w = r), g = new d.Bezier(g, p, m, NaN, 0, 0, w, z, h, n, u), g.path.pattern(this.pattern, NaN, f.path), d.setCN(f, g, this.bcn + \"fill\"), d.setCN(f, g, this.bcn + \"fill-negative\"), l.push(g.path));\r\n                this.applyMask(l, k);\r\n            }\r\n        }, launchAnimation: function () { var a = this, b = a.chart.startDuration; if (0 < b && !a.animationPlayed) {\r\n            var c = a.set, e = a.bulletSet;\r\n            d.VML || (c.attr({ opacity: a.startAlpha }), e.attr({ opacity: a.startAlpha }));\r\n            c.hide();\r\n            e.hide();\r\n            a.seqAn ? (b = setTimeout(function () { a.animateGraphs.call(a); }, a.index * b * 1E3), a.timeOuts.push(b)) : a.animateGraphs();\r\n        } }, animateGraphs: function () { var a = this.chart, b = this.set, c = this.bulletSet, e = this.x, d = this.y; b.show(); c.show(); var f = a.startDuration, g = a.startEffect; b && (this.rotate ? (b.translate(-1E3, d), c.translate(-1E3, d)) : (b.translate(e, -1E3), c.translate(e, -1E3)), b.animate({ opacity: 1, translate: e + \",\" + d }, f, g), c.animate({ opacity: 1, translate: e + \",\" + d }, f, g), a.animatable.push(b)); }, animate: function (a) { var b = this.chart, c = this.animationArray; !a && 0 < c.length && (a = c[0], c.shift()); c = d[d.getEffect(b.startEffect)]; b = b.startDuration; a && (this.rotate ? a.animateWidth(b, c) : a.animateHeight(b, c), a.set.show()); }, legendKeyColor: function () { var a = this.legendColor, b = this.lineAlpha; void 0 === a && (a = this.lineColorR, 0 === b && (b = this.fillColorsR) && (a = \"object\" == typeof b ? b[0] : b)); return a; }, legendKeyAlpha: function () { var a = this.legendAlpha; void 0 === a && (a = this.lineAlpha, this.fillAlphas > a && (a = this.fillAlphas), 0 === a && (a = this.bulletAlpha), 0 === a && (a = 1)); return a; }, createBullet: function (a, b, c) {\r\n            if (!isNaN(b) && !isNaN(c) && (\"none\" != this.bullet || this.customBullet || a.bullet || a.customBullet)) {\r\n                var e = this.chart, h = this.container, f = this.bulletOffset, g = this.bulletSize;\r\n                isNaN(a.bulletSize) || (g = a.bulletSize);\r\n                var k = a.values.value, l = this.maxValue, m = this.minValue, p = this.maxBulletSize, q = this.minBulletSize;\r\n                isNaN(l) || (isNaN(k) || (g = (k - m) / (l - m) * (p - q) + q), m == l && (g = p));\r\n                l = g;\r\n                this.bulletAxis && (g = a.values.error,\r\n                    isNaN(g) || (k = g), g = this.bulletAxis.stepWidth * k);\r\n                g < this.minBulletSize && (g = this.minBulletSize);\r\n                this.rotate ? b = a.isNegative ? b - f : b + f : c = a.isNegative ? c + f : c - f;\r\n                q = this.bulletColorR;\r\n                a.lineColor && void 0 === this.bulletColor && (this.bulletColorSwitched = a.lineColor);\r\n                this.bulletColorSwitched && (q = this.bulletColorSwitched);\r\n                a.isNegative && void 0 !== this.bulletColorNegative && (q = this.bulletColorNegative);\r\n                void 0 !== a.color && (q = a.color);\r\n                var n;\r\n                \"xy\" == e.type && this.valueField && (n = this.pattern, a.pattern && (n = a.pattern));\r\n                f = this.bullet;\r\n                a.bullet && (f = a.bullet);\r\n                var k = this.bulletBorderThickness, m = this.bulletBorderColorR, p = this.bulletBorderAlpha, t = this.bulletAlpha;\r\n                m || (m = q);\r\n                this.useLineColorForBulletBorder && (m = this.lineColorR, a.isNegative && this.negativeLineColor && (m = this.negativeLineColor), this.lineColorSwitched && (m = this.lineColorSwitched));\r\n                var r = a.alpha;\r\n                isNaN(r) || (t = r);\r\n                n = d.bullet(h, f, g, q, t, k, m, p, l, 0, n, e.path);\r\n                l = this.customBullet;\r\n                a.customBullet && (l = a.customBullet);\r\n                l && (n && n.remove(), \"function\" == typeof l ? (l = new l, l.chart = e, a.bulletConfig && (l.availableSpace = c, l.graph = this, l.graphDataItem = a, l.bulletY = c, a.bulletConfig.minCoord = this.minCoord - c, l.bulletConfig = a.bulletConfig), l.write(h), n && l.showBullet && l.set.push(n), a.customBulletGraphics = l.cset, n = l.set) : (n = h.set(), l = h.image(l, 0, 0, g, g), n.push(l), this.centerCustomBullets && l.translate(-g / 2, -g / 2)));\r\n                if (n) {\r\n                    (a.url || this.showHandOnHover) && n.setAttr(\"cursor\", \"pointer\");\r\n                    if (\"serial\" == e.type || \"gantt\" == e.type)\r\n                        if (-.5 > b || b > this.width || c < -g / 2 || c > this.height)\r\n                            n.remove(), n = null;\r\n                    n && (this.bulletSet.push(n), n.translate(b, c), this.addListeners(n, a), this.allBullets.push(n));\r\n                    a.bx = b;\r\n                    a.by = c;\r\n                    d.setCN(e, n, this.bcn + \"bullet\");\r\n                    a.className && d.setCN(e, n, a.className, !0);\r\n                }\r\n                if (n) {\r\n                    n.size = g || 0;\r\n                    if (e = this.bulletHitAreaSize)\r\n                        h = d.circle(h, e, \"#FFFFFF\", .001, 0), h.translate(b, c), a.hitBullet = h, this.bulletSet.push(h), this.addListeners(h, a);\r\n                    a.bulletGraphics = n;\r\n                    void 0 !== this.tabIndex && n.setAttr(\"tabindex\", this.tabIndex);\r\n                }\r\n                else\r\n                    n = { size: 0 };\r\n                n.graphDataItem = a;\r\n                return n;\r\n            }\r\n        }, showBullets: function () { var a = this.allBullets, b; this.bulletsHidden = !1; for (b = 0; b < a.length; b++)\r\n            a[b].show(); }, hideBullets: function () { var a = this.allBullets, b; this.bulletsHidden = !0; for (b = 0; b < a.length; b++)\r\n            a[b].hide(); }, showCustomBullets: function () { var a = this.allBullets, b; this.customBulletsHidden = !1; for (b = 0; b < a.length; b++) {\r\n            var c = a[b].graphDataItem;\r\n            c && c.customBulletGraphics && c.customBulletGraphics.show();\r\n        } }, hideCustomBullets: function () { var a = this.allBullets, b; this.customBulletsHidden = !0; for (b = 0; b < a.length; b++) {\r\n            var c = a[b].graphDataItem;\r\n            c && c.customBulletGraphics && c.customBulletGraphics.hide();\r\n        } }, addListeners: function (a, b) { var c = this; a.mouseover(function (a) { c.handleRollOver(b, a); }).mouseout(function (a) { c.handleRollOut(b, a); }).touchend(function (a) { c.handleRollOver(b, a); c.chart.panEventsEnabled && c.handleClick(b, a); }).touchstart(function (a) { c.handleRollOver(b, a); }).click(function (a) { c.handleClick(b, a); }).dblclick(function (a) { c.handleDoubleClick(b, a); }).contextmenu(function (a) { c.handleRightClick(b, a); }); var e = c.chart; if (e.accessible && c.accessibleLabel) {\r\n            var d = e.formatString(c.accessibleLabel, b);\r\n            e.makeAccessible(a, d);\r\n        } }, handleRollOver: function (a, b) { this.handleGraphEvent(b, \"rollOverGraph\"); if (a) {\r\n            var c = this.chart;\r\n            a.bulletConfig && (c.isRolledOverBullet = !0);\r\n            var e = { type: \"rollOverGraphItem\", item: a, index: a.index, graph: this, target: this, chart: this.chart, event: b };\r\n            this.fire(e);\r\n            c.fire(e);\r\n            clearTimeout(c.hoverInt);\r\n            (c = c.chartCursor) && c.valueBalloonsEnabled || this.showGraphBalloon(a, \"V\", !0);\r\n        } }, handleRollOut: function (a, b) { var c = this.chart; if (a) {\r\n            var e = { type: \"rollOutGraphItem\", item: a, index: a.index, graph: this, target: this, chart: this.chart, event: b };\r\n            this.fire(e);\r\n            c.fire(e);\r\n            c.isRolledOverBullet = !1;\r\n        } this.handleGraphEvent(b, \"rollOutGraph\"); (c = c.chartCursor) && c.valueBalloonsEnabled || this.hideBalloon(); }, handleClick: function (a, b) { if (!this.chart.checkTouchMoved() && this.chart.checkTouchDuration(b)) {\r\n            if (a) {\r\n                var c = { type: \"clickGraphItem\", item: a, index: a.index, graph: this, target: this, chart: this.chart, event: b };\r\n                this.fire(c);\r\n                this.chart.fire(c);\r\n                d.getURL(a.url, this.urlTarget);\r\n            }\r\n            this.handleGraphEvent(b, \"clickGraph\");\r\n        } }, handleGraphEvent: function (a, b) { var c = { type: b, graph: this, target: this, chart: this.chart, event: a }; this.fire(c); this.chart.fire(c); }, handleRightClick: function (a, b) { if (a) {\r\n            var c = { type: \"rightClickGraphItem\", item: a, index: a.index, graph: this, target: this, chart: this.chart, event: b };\r\n            this.fire(c);\r\n            this.chart.fire(c);\r\n        } }, handleDoubleClick: function (a, b) { if (a) {\r\n            var c = { type: \"doubleClickGraphItem\", item: a, index: a.index, graph: this, target: this, chart: this.chart, event: b };\r\n            this.fire(c);\r\n            this.chart.fire(c);\r\n        } }, zoom: function (a, b) { this.start = a; this.end = b; this.draw(); }, changeOpacity: function (a) { var b = this.set; b && b.setAttr(\"opacity\", a); if (b = this.ownColumns) {\r\n            var c;\r\n            for (c = 0; c < b.length; c++) {\r\n                var e = b[c].set;\r\n                e && e.setAttr(\"opacity\", a);\r\n            }\r\n        } (b = this.bulletSet) && b.setAttr(\"opacity\", a); }, destroy: function () { d.remove(this.set); d.remove(this.bulletSet); var a = this.timeOuts; if (a) {\r\n            var b;\r\n            for (b = 0; b < a.length; b++)\r\n                clearTimeout(a[b]);\r\n        } this.timeOuts = []; }, createBalloon: function () { var a = this.chart; this.balloon ? this.balloon.destroy && this.balloon.destroy() : this.balloon = {}; var b = this.balloon; d.extend(b, a.balloon, !0); b.chart = a; b.mainSet = a.plotBalloonsSet; b.className = this.id; }, hideBalloon: function () { var a = this, b = a.chart; b.chartCursor ? b.chartCursor.valueBalloonsEnabled || b.hideBalloon() : b.hideBalloon(); clearTimeout(a.hoverInt); a.hoverInt = setTimeout(function () { a.hideBalloonReal.call(a); }, b.hideBalloonTime); }, hideBalloonReal: function () { this.balloon && this.balloon.hide(); this.fixBulletSize(); }, fixBulletSize: function () { if (d.isModern) {\r\n            var a = this.resizedDItem;\r\n            if (a) {\r\n                var b = a.bulletGraphics;\r\n                if (b && !b.doNotScale) {\r\n                    b.translate(a.bx, a.by, 1);\r\n                    var c = this.bulletAlpha;\r\n                    isNaN(a.alpha) || (c = a.alpha);\r\n                    b.setAttr(\"fill-opacity\", c);\r\n                    b.setAttr(\"stroke-opacity\", this.bulletBorderAlpha);\r\n                }\r\n            }\r\n            this.resizedDItem = null;\r\n        } }, showGraphBalloon: function (a, b, c, e, h) { if (a) {\r\n            var f = this.chart, g = this.balloon, k = 0, l = 0, m = f.chartCursor, p = !0;\r\n            m ? m.valueBalloonsEnabled || (g = f.balloon, k = this.x, l = this.y, p = !1) : (g = f.balloon, k = this.x, l = this.y, p = !1);\r\n            clearTimeout(this.hoverInt);\r\n            if (f.chartCursor && (this.currentDataItem = a, \"serial\" == f.type && f.isRolledOverBullet && f.chartCursor.valueBalloonsEnabled)) {\r\n                this.hideBalloonReal();\r\n                return;\r\n            }\r\n            this.resizeBullet(a, e, h);\r\n            if (g && g.enabled && this.showBalloon && !this.hidden) {\r\n                var m = f.formatString(this.balloonText, a, !0), q = this.balloonFunction;\r\n                q && (m = q(a, a.graph));\r\n                m && (m = d.cleanFromEmpty(m));\r\n                m && \"\" !== m ? (e = f.getBalloonColor(this, a), g.drop || (g.pointerOrientation = b), b = a.x, h = a.y, f.rotate && (b = a.y, h = a.x), b += k, h += l, isNaN(b) || isNaN(h) ? this.hideBalloonReal() : (a = this.width, q = this.height, p && g.setBounds(k, l, a + k, q + l), g.changeColor(e), g.setPosition(b, h), g.fixPrevious(), g.fixedPosition && (c = !1), !c && \"radar\" != f.type && (b < k - .5 || b > a + k || h < l - .5 || h > q + l) ? (g.showBalloon(m), g.hide(0)) : (g.followCursor(c), g.showBalloon(m)))) : (this.hideBalloonReal(), g.hide(), this.resizeBullet(a, e, h));\r\n            }\r\n            else\r\n                this.hideBalloonReal();\r\n        } }, resizeBullet: function (a, b, c) { this.fixBulletSize(); if (a && d.isModern && (1 != b || !isNaN(c))) {\r\n            var e = a.bulletGraphics;\r\n            e && !e.doNotScale && (e.translate(a.bx, a.by, b), isNaN(c) || (e.setAttr(\"fill-opacity\", c), e.setAttr(\"stroke-opacity\", c)), this.resizedDItem = a);\r\n        } } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.ChartCursor = d.Class({ construct: function (a) { this.cname = \"ChartCursor\"; this.createEvents(\"changed\", \"zoomed\", \"onHideCursor\", \"onShowCursor\", \"draw\", \"selected\", \"moved\", \"panning\", \"zoomStarted\"); this.enabled = !0; this.cursorAlpha = 1; this.selectionAlpha = .2; this.cursorColor = \"#CC0000\"; this.categoryBalloonAlpha = 1; this.color = \"#FFFFFF\"; this.type = \"cursor\"; this.zoomed = !1; this.zoomable = !0; this.pan = !1; this.categoryBalloonDateFormat = \"MMM DD, YYYY\"; this.categoryBalloonText = \"[[category]]\"; this.categoryBalloonEnabled = this.valueBalloonsEnabled = !0; this.rolledOver = !1; this.cursorPosition = \"middle\"; this.bulletsEnabled = this.skipZoomDispatch = !1; this.bulletSize = 8; this.selectWithoutZooming = this.oneBalloonOnly = !1; this.graphBulletSize = 1.7; this.animationDuration = .3; this.zooming = !1; this.adjustment = 0; this.avoidBalloonOverlapping = !0; this.leaveCursor = !1; this.leaveAfterTouch = !0; this.valueZoomable = !1; this.balloonPointerOrientation = \"horizontal\"; this.hLineEnabled = this.vLineEnabled = !0; this.vZoomEnabled = this.hZoomEnabled = !1; d.applyTheme(this, a, this.cname); }, draw: function () { this.destroy(); var a = this.chart; a.panRequired = !0; var b = a.container; this.rotate = a.rotate; this.container = b; this.prevLineHeight = this.prevLineWidth = NaN; b = b.set(); b.translate(this.x, this.y); this.set = b; a.cursorSet.push(b); this.createElements(); d.isString(this.limitToGraph) && (this.limitToGraph = d.getObjById(a.graphs, this.limitToGraph), this.fullWidth = !1, this.cursorPosition = \"middle\"); this.pointer = this.balloonPointerOrientation.substr(0, 1).toUpperCase(); this.isHidden = !1; this.hideLines(); this.valueLineAxis || (this.valueLineAxis = a.valueAxes[0]); }, createElements: function () { var a = this, b = a.chart, c = b.dx, e = b.dy, h = a.width, f = a.height, g, k, l = a.cursorAlpha, m = a.valueLineAlpha; a.rotate ? (g = m, k = l) : (k = m, g = l); \"xy\" == b.type && (k = l, void 0 !== m && (k = m), g = l); a.vvLine = d.line(a.container, [c, 0, 0], [e, 0, f], a.cursorColor, g, 1); d.setCN(b, a.vvLine, \"cursor-line\"); d.setCN(b, a.vvLine, \"cursor-line-vertical\"); a.hhLine = d.line(a.container, [0, h, h + c], [0, 0, e], a.cursorColor, k, 1); d.setCN(b, a.hhLine, \"cursor-line\"); d.setCN(b, a.hhLine, \"cursor-line-horizontal\"); a.vLine = a.rotate ? a.vvLine : a.hhLine; a.set.push(a.vvLine); a.set.push(a.hhLine); a.set.node.style.pointerEvents = \"none\"; a.fullLines = a.container.set(); b = b.cursorLineSet; b.push(a.fullLines); b.translate(a.x, a.y); b.clipRect(-1, -1, h + 2, f + 2); void 0 !== a.tabIndex && (b.setAttr(\"tabindex\", a.tabIndex), b.keyup(function (b) { a.handleKeys(b); }).focus(function (b) { a.showCursor(); }).blur(function (b) { a.hideCursor(); })); a.set.clipRect(0, 0, h, f); }, handleKeys: function (a) { var b = this.prevIndex, c = this.chart; if (c) {\r\n            var e = c.chartData;\r\n            e && (isNaN(b) && (b = e.length - 1), 37 != a.keyCode && 40 != a.keyCode || b--, 39 != a.keyCode && 38 != a.keyCode || b++, b = d.fitToBounds(b, c.startIndex, c.endIndex), (a = this.chart.chartData[b]) && this.setPosition(a.x.categoryAxis), this.prevIndex = b);\r\n        } }, update: function () { var a = this.chart; if (a) {\r\n            var b = a.mouseX - this.x, c = a.mouseY - this.y;\r\n            this.mouseX = b;\r\n            this.mouseY = c;\r\n            this.mouse2X = a.mouse2X - this.x;\r\n            this.mouse2Y = a.mouse2Y - this.y;\r\n            var e;\r\n            if (a.chartData && 0 < a.chartData.length) {\r\n                this.mouseIsOver() ? (this.hideGraphBalloons = !1, this.rolledOver = e = !0, this.updateDrawing(), this.vvLine && isNaN(this.fx) && (a.rotate || !this.limitToGraph) && this.vvLine.translate(b, 0), !this.hhLine || !isNaN(this.fy) || a.rotate && this.limitToGraph || this.hhLine.translate(0, c), isNaN(this.mouse2X) ? this.dispatchMovedEvent(b, c) : e = !1) : this.forceShow || this.hideCursor();\r\n                if (this.zooming) {\r\n                    if (!isNaN(this.mouse2X)) {\r\n                        isNaN(this.mouse2X0) || this.dispatchPanEvent();\r\n                        return;\r\n                    }\r\n                    if (this.pan) {\r\n                        this.dispatchPanEvent();\r\n                        return;\r\n                    }\r\n                    (this.hZoomEnabled || this.vZoomEnabled) && this.zooming && this.updateSelection();\r\n                }\r\n                e && this.showCursor();\r\n            }\r\n        } }, updateDrawing: function () { this.drawing && this.chart.setMouseCursor(\"crosshair\"); if (this.drawingNow && (d.remove(this.drawingLine), 1 < Math.abs(this.drawStartX - this.mouseX) || 1 < Math.abs(this.drawStartY - this.mouseY))) {\r\n            var a = this.chart, b = a.marginTop, a = a.marginLeft;\r\n            this.drawingLine = d.line(this.container, [this.drawStartX + a, this.mouseX + a], [this.drawStartY + b, this.mouseY + b], this.cursorColor, 1, 1);\r\n        } }, fixWidth: function (a) { if (this.fullWidth && this.prevLineWidth != a) {\r\n            var b = this.vvLine, c = 0;\r\n            b && (b.remove(), c = b.x);\r\n            b = this.container.set();\r\n            b.translate(c, 0);\r\n            c = d.rect(this.container, a, this.height, this.cursorColor, this.cursorAlpha, this.cursorAlpha, this.cursorColor);\r\n            d.setCN(this.chart, c, \"cursor-fill\");\r\n            c.translate(-a / 2 - 1, 0);\r\n            b.push(c);\r\n            this.vvLine = b;\r\n            this.fullLines.push(b);\r\n            this.prevLineWidth = a;\r\n        } }, fixHeight: function (a) { if (this.fullWidth && this.prevLineHeight != a) {\r\n            var b = this.hhLine, c = 0;\r\n            b && (b.remove(), c = b.y);\r\n            b = this.container.set();\r\n            b.translate(0, c);\r\n            c = d.rect(this.container, this.width, a, this.cursorColor, this.cursorAlpha);\r\n            c.translate(0, -a / 2);\r\n            b.push(c);\r\n            this.fullLines.push(b);\r\n            this.hhLine = b;\r\n            this.prevLineHeight = a;\r\n        } }, fixVLine: function (a, b) { if (!isNaN(a)) {\r\n            if (isNaN(this.prevLineX)) {\r\n                var c = 0, e = this.mouseX;\r\n                if (this.limitToGraph) {\r\n                    var d = this.chart.categoryAxis;\r\n                    d && (this.chart.rotate || (c = \"bottom\" == d.position ? this.height : -this.height), e = a);\r\n                }\r\n                this.vvLine.translate(e, c);\r\n            }\r\n            else\r\n                this.prevLineX != a && this.vvLine.translate(this.prevLineX, this.prevLineY);\r\n            this.fx = a;\r\n            this.prevLineX != a && (c = this.animationDuration, this.zooming && (c = 0), this.vvLine.stop(), this.vvLine.animate({ translate: a + \",\" + b }, c, \"easeOutSine\"), this.prevLineX = a, this.prevLineY = b);\r\n        } }, fixHLine: function (a, b) { if (!isNaN(a)) {\r\n            if (isNaN(this.prevLineY)) {\r\n                var c = 0, e = this.mouseY;\r\n                if (this.limitToGraph) {\r\n                    var d = this.chart.categoryAxis;\r\n                    d && (this.chart.rotate && (c = \"right\" == d.position ? this.width : -this.width), e = a);\r\n                }\r\n                this.hhLine.translate(c, e);\r\n            }\r\n            else\r\n                this.prevLineY != a && this.hhLine.translate(this.prevLineX, this.prevLineY);\r\n            this.fy = a;\r\n            this.prevLineY != a && (c = this.animationDuration, this.zooming && (c = 0), this.hhLine.stop(), this.hhLine.animate({ translate: b + \",\" + a }, c, \"easeOutSine\"), this.prevLineY = a, this.prevLineX = b);\r\n        } }, hideCursor: function (a) { this.forceShow = !1; this.chart.wasTouched && this.leaveAfterTouch || this.isHidden || this.leaveCursor || (this.hideCursorReal(), a ? this.chart.handleCursorHide() : this.fire({ target: this, chart: this.chart, type: \"onHideCursor\" }), this.chart.setMouseCursor(\"auto\")); }, hideCursorReal: function () { this.hideLines(); this.isHidden = !0; this.index = this.prevLineY = this.prevLineX = this.mouseY0 = this.mouseX0 = this.fy = this.fx = NaN; }, hideLines: function () { this.vvLine && this.vvLine.hide(); this.hhLine && this.hhLine.hide(); this.fullLines && this.fullLines.hide(); this.isHidden = !0; this.chart.handleCursorHide(); }, showCursor: function (a) { !this.drawing && this.enabled && (this.vLineEnabled && this.vvLine && this.vvLine.show(), this.hLineEnabled && this.hhLine && this.hhLine.show(), this.isHidden = !1, this.updateFullLine(), a || this.fire({ target: this, chart: this.chart, type: \"onShowCursor\" }), this.pan && this.chart.setMouseCursor(\"move\")); }, updateFullLine: function () { this.zooming && this.fullWidth && this.selection && (this.rotate ? 0 < this.selection.height && this.hhLine.hide() : 0 < this.selection.width && this.vvLine.hide()); }, updateSelection: function () { if (!this.pan && this.enabled) {\r\n            var a = this.mouseX, b = this.mouseY;\r\n            isNaN(this.fx) || (a = this.fx);\r\n            isNaN(this.fy) || (b = this.fy);\r\n            this.clearSelection();\r\n            var c = this.mouseX0, e = this.mouseY0, h = this.width, f = this.height, a = d.fitToBounds(a, 0, h), b = d.fitToBounds(b, 0, f), g;\r\n            a < c && (g = a, a = c, c = g);\r\n            b < e && (g = b, b = e, e = g);\r\n            this.hZoomEnabled ? h = a - c : c = 0;\r\n            this.vZoomEnabled ? f = b - e : e = 0;\r\n            isNaN(this.mouse2X) && 0 < Math.abs(h) && 0 < Math.abs(f) && (a = this.chart, b = d.rect(this.container, h, f, this.cursorColor, this.selectionAlpha), d.setCN(a, b, \"cursor-selection\"), b.width = h, b.height = f, b.translate(c, e), this.set.push(b), this.selection = b);\r\n            this.updateFullLine();\r\n        } }, mouseIsOver: function () { var a = this.mouseX, b = this.mouseY; if (this.justReleased)\r\n            return this.justReleased = !1, !0; if (this.mouseIsDown)\r\n            return !0; if (!this.chart.mouseIsOver)\r\n            return this.handleMouseOut(), !1; if (0 < a && a < this.width && 0 < b && b < this.height)\r\n            return !0; this.handleMouseOut(); }, fixPosition: function () { this.prevY = this.prevX = NaN; }, handleMouseDown: function () { this.update(); if (this.mouseIsOver())\r\n            if (this.mouseIsDown = !0, this.mouseX0 = this.mouseX, this.mouseY0 = this.mouseY, this.mouse2X0 = this.mouse2X, this.mouse2Y0 = this.mouse2Y, this.drawing)\r\n                this.drawStartY = this.mouseY, this.drawStartX = this.mouseX, this.drawingNow = !0;\r\n            else if (this.dispatchMovedEvent(this.mouseX, this.mouseY), !this.pan && isNaN(this.mouse2X0) && (isNaN(this.fx) || (this.mouseX0 = this.fx), isNaN(this.fy) || (this.mouseY0 = this.fy)), this.hZoomEnabled || this.vZoomEnabled) {\r\n                this.zooming = !0;\r\n                var a = { chart: this.chart, target: this, type: \"zoomStarted\" };\r\n                a.x = this.mouseX / this.width;\r\n                a.y = this.mouseY / this.height;\r\n                this.index0 = a.index = this.index;\r\n                this.timestamp0 = this.timestamp;\r\n                this.fire(a);\r\n            } }, registerInitialMouse: function () { }, handleReleaseOutside: function () { this.mouseIsDown = !1; if (this.drawingNow) {\r\n            this.drawingNow = !1;\r\n            d.remove(this.drawingLine);\r\n            var a = this.drawStartX, b = this.drawStartY, c = this.mouseX, e = this.mouseY, h = this.chart;\r\n            (2 < Math.abs(a - c) || 2 < Math.abs(b - e)) && this.fire({ type: \"draw\", target: this, chart: h, initialX: a, initialY: b, finalX: c, finalY: e });\r\n        } this.zooming && (this.zooming = !1, this.selectWithoutZooming ? this.dispatchZoomEvent(\"selected\") : (this.hZoomEnabled || this.vZoomEnabled) && this.dispatchZoomEvent(\"zoomed\"), this.rolledOver && this.dispatchMovedEvent(this.mouseX, this.mouseY)); this.mouse2Y0 = this.mouse2X0 = this.mouseY0 = this.mouseX0 = NaN; }, dispatchZoomEvent: function (a) {\r\n            if (!this.pan) {\r\n                var b = this.selection;\r\n                if (b && 3 < Math.abs(b.width) && 3 < Math.abs(b.height)) {\r\n                    var c = Math.min(this.index, this.index0), e = Math.max(this.index, this.index0), d = c, f = e, g = this.chart, k = g.chartData, l = g.categoryAxis;\r\n                    l && l.parseDates && !l.equalSpacing && (d = k[c] ? k[c].time : Math.min(this.timestamp0, this.timestamp), f = k[e] ? g.getEndTime(k[e].time) : Math.max(this.timestamp0, this.timestamp));\r\n                    var b = { type: a, chart: this.chart, target: this, end: f, start: d, startIndex: c, endIndex: e, selectionHeight: b.height, selectionWidth: b.width, selectionY: b.y, selectionX: b.x }, m;\r\n                    this.hZoomEnabled && 4 < Math.abs(this.mouseX0 -\r\n                        this.mouseX) && (b.startX = this.mouseX0 / this.width, b.endX = this.mouseX / this.width, m = !0);\r\n                    this.vZoomEnabled && 4 < Math.abs(this.mouseY0 - this.mouseY) && (b.startY = 1 - this.mouseY0 / this.height, b.endY = 1 - this.mouseY / this.height, m = !0);\r\n                    m && (this.prevY = this.prevX = NaN, this.fire(b), \"selected\" != a && this.clearSelection());\r\n                    this.hideCursor();\r\n                }\r\n            }\r\n        }, dispatchMovedEvent: function (a, b, c, e) { a = Math.round(a); b = Math.round(b); if (!this.isHidden && (a != this.prevX || b != this.prevY || \"changed\" == c)) {\r\n            c || (c = \"moved\");\r\n            var d = this.fx, f = this.fy;\r\n            isNaN(d) && (d = a);\r\n            isNaN(f) && (f = b);\r\n            var g = !1;\r\n            this.zooming && this.pan && (g = !0);\r\n            g = { hidden: this.isHidden, type: c, chart: this.chart, target: this, x: a, y: b, finalX: d, finalY: f, zooming: this.zooming, panning: g, mostCloseGraph: this.mostCloseGraph, index: this.index, skip: e, hideBalloons: this.hideGraphBalloons };\r\n            this.prevIndex = this.index;\r\n            this.rotate ? (g.position = b, g.finalPosition = f) : (g.position = a, g.finalPosition = d);\r\n            this.prevX = a;\r\n            this.prevY = b;\r\n            e ? this.chart.handleCursorMove(g) : (this.fire(g), \"changed\" == c && this.chart.fire(g));\r\n        } }, dispatchPanEvent: function () {\r\n            if (this.mouseIsDown) {\r\n                var a = d.roundTo((this.mouseX - this.mouseX0) / this.width, 3), b = d.roundTo((this.mouseY - this.mouseY0) / this.height, 3), c = d.roundTo((this.mouse2X - this.mouse2X0) / this.width, 3), e = d.roundTo((this.mouse2Y - this.mouse2Y0) / this.height, 2), h = !1;\r\n                0 !== Math.abs(a) && 0 !== Math.abs(b) && (h = !0);\r\n                if (this.prevDeltaX == a || this.prevDeltaY == b)\r\n                    h = !1;\r\n                isNaN(c) || isNaN(e) || (0 !== Math.abs(c) && 0 !== Math.abs(e) && (h = !0), this.prevDelta2X != c && this.prevDelta2Y != e) || (h = !1);\r\n                h && (this.hideLines(), this.fire({ type: \"panning\", chart: this.chart, target: this, deltaX: a,\r\n                    deltaY: b, delta2X: c, delta2Y: e, index: this.index }), this.prevDeltaX = a, this.prevDeltaY = b, this.prevDelta2X = c, this.prevDelta2Y = e);\r\n            }\r\n        }, clearSelection: function () { var a = this.selection; a && (a.width = 0, a.height = 0, a.remove()); }, destroy: function () { this.clear(); d.remove(this.selection); this.selection = null; clearTimeout(this.syncTO); d.remove(this.set); }, clear: function () { }, setTimestamp: function (a) { this.timestamp = a; }, setIndex: function (a, b) { a != this.index && (this.index = a, b || this.isHidden || this.dispatchMovedEvent(this.mouseX, this.mouseY, \"changed\")); }, handleMouseOut: function () { this.enabled && this.rolledOver && (this.leaveCursor || this.setIndex(void 0), this.forceShow = !1, this.hideCursor(), this.rolledOver = !1); }, showCursorAt: function (a) { var b = this.chart.categoryAxis; b && this.setPosition(b.categoryToCoordinate(a), a); }, setPosition: function (a, b) { var c = this.chart, e = c.categoryAxis; if (e) {\r\n            var d, f;\r\n            void 0 === b && (b = e.coordinateToValue(a));\r\n            e.showBalloonAt(b, a);\r\n            this.forceShow = !0;\r\n            e.stickBalloonToCategory ? c.rotate ? this.fixHLine(a, 0) : this.fixVLine(a, 0) : (this.showCursor(), c.rotate ? this.hhLine.translate(0, a) : this.vvLine.translate(a, 0));\r\n            c.rotate ? d = a : f = a;\r\n            c.rotate ? (this.vvLine && this.vvLine.hide(), this.hhLine && this.hhLine.show()) : (this.hhLine && this.hhLine.hide(), this.vvLine && this.vvLine.show());\r\n            this.updateFullLine();\r\n            this.isHidden = !1;\r\n            this.dispatchMovedEvent(f, d, \"moved\", !0);\r\n        } }, enableDrawing: function (a) { this.enabled = !a; this.hideCursor(); this.drawing = a; }, syncWithCursor: function (a, b) { clearTimeout(this.syncTO); a && (a.isHidden ? this.hideCursor(!0) : this.syncWithCursorReal(a, b)); }, isZooming: function (a) { this.zooming = a; }, syncWithCursorReal: function (a, b) { var c = a.vvLine, e = a.hhLine; this.index = a.index; this.forceShow = !0; this.zooming && this.pan || this.showCursor(!0); this.hideGraphBalloons = b; this.justReleased = a.justReleased; this.zooming = a.zooming; this.index0 = a.index0; this.mouseX0 = a.mouseX0; this.mouseY0 = a.mouseY0; this.mouse2X0 = a.mouse2X0; this.mouse2Y0 = a.mouse2Y0; this.timestamp0 = a.timestamp0; this.prevDeltaX = a.prevDeltaX; this.prevDeltaY = a.prevDeltaY; this.prevDelta2X = a.prevDelta2X; this.prevDelta2Y = a.prevDelta2Y; this.fx = a.fx; this.fy = a.fy; a.zooming && this.updateSelection(); var d = a.mouseX, f = a.mouseY; this.rotate ? (d = NaN, this.vvLine && this.vvLine.hide(), this.hhLine && e && (isNaN(a.fy) ? this.hhLine.translate(0, a.mouseY) : this.fixHLine(a.fy, 0))) : (f = NaN, this.hhLine && this.hhLine.hide(), this.vvLine && c && (isNaN(a.fx) ? this.vvLine.translate(a.mouseX, 0) : this.fixVLine(a.fx, 0))); this.dispatchMovedEvent(d, f, \"moved\", !0); } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.SimpleChartScrollbar = d.Class({ construct: function (a) { this.createEvents(\"zoomed\", \"zoomStarted\", \"zoomEnded\"); this.backgroundColor = \"#D4D4D4\"; this.backgroundAlpha = 1; this.selectedBackgroundColor = \"#EFEFEF\"; this.scrollDuration = this.selectedBackgroundAlpha = 1; this.resizeEnabled = !0; this.hideResizeGrips = !1; this.scrollbarHeight = 20; this.updateOnReleaseOnly = !1; 9 > document.documentMode && (this.updateOnReleaseOnly = !0); this.dragIconHeight = this.dragIconWidth = 35; this.dragIcon = \"dragIconRoundBig\"; this.dragCursorHover = \"cursor: move; cursor: grab; cursor: -moz-grab; cursor: -webkit-grab;\"; this.dragCursorDown = \"cursor: move; cursor: grab; cursor: -moz-grabbing; cursor: -webkit-grabbing;\"; this.vResizeCursor = \"ns-resize\"; this.hResizeCursor = \"ew-resize\"; this.enabled = !0; this.percentStart = this.offset = 0; this.percentEnd = 1; d.applyTheme(this, a, \"SimpleChartScrollbar\"); }, getPercents: function () {\r\n            var a = this.getDBox(), b = a.x, c = a.y, e = a.width, a = a.height;\r\n            this.rotate ? (b = 1 - c / this.height, c = 1 - (c + a) / this.height) : (c = b / this.width,\r\n                b = (b + e) / this.width);\r\n            this.percentStart = c;\r\n            this.percentEnd = b;\r\n        }, draw: function () {\r\n            var a = this;\r\n            a.destroy();\r\n            if (a.enabled) {\r\n                var b = a.chart.container, c = a.rotate, e = a.chart;\r\n                e.panRequired = !0;\r\n                var h = b.set();\r\n                a.set = h;\r\n                c ? d.setCN(e, h, \"scrollbar-vertical\") : d.setCN(e, h, \"scrollbar-horizontal\");\r\n                e.scrollbarsSet.push(h);\r\n                var f, g;\r\n                c ? (f = a.scrollbarHeight, g = e.plotAreaHeight) : (g = a.scrollbarHeight, f = e.plotAreaWidth);\r\n                a.width = f;\r\n                if ((a.height = g) && f) {\r\n                    var k = d.rect(b, f, g, a.backgroundColor, a.backgroundAlpha, 1, a.backgroundColor, a.backgroundAlpha);\r\n                    d.setCN(e, k, \"scrollbar-bg\");\r\n                    a.bg = k;\r\n                    h.push(k);\r\n                    k = d.rect(b, f, g, \"#000\", .005);\r\n                    h.push(k);\r\n                    a.invisibleBg = k;\r\n                    k.click(function () { a.handleBgClick(); }).mouseover(function () { a.handleMouseOver(); }).mouseout(function () { a.handleMouseOut(); }).touchend(function () { a.handleBgClick(); });\r\n                    k = d.rect(b, f, g, a.selectedBackgroundColor, a.selectedBackgroundAlpha);\r\n                    d.setCN(e, k, \"scrollbar-bg-selected\");\r\n                    a.selectedBG = k;\r\n                    h.push(k);\r\n                    f = d.rect(b, f, g, \"#000\", .005);\r\n                    a.dragger = f;\r\n                    h.push(f);\r\n                    f.mousedown(function (b) { a.handleDragStart(b); }).mouseup(function () { a.handleDragStop(); }).mouseover(function () { a.handleDraggerOver(); }).mouseout(function () { a.handleMouseOut(); }).touchstart(function (b) { a.handleDragStart(b); }).touchend(function () { a.handleDragStop(); });\r\n                    g = e.pathToImages;\r\n                    var l, k = a.dragIcon.replace(/\\.[a-z]*$/i, \"\");\r\n                    d.isAbsolute(k) && (g = \"\");\r\n                    c ? (l = g + k + \"H\" + e.extension, g = a.dragIconWidth, c = a.dragIconHeight) : (l = g + k + e.extension, c = a.dragIconWidth, g = a.dragIconHeight);\r\n                    k = b.image(l, 0, 0, c, g);\r\n                    d.setCN(e, k, \"scrollbar-grip-left\");\r\n                    l = b.image(l, 0, 0, c, g);\r\n                    d.setCN(e, l, \"scrollbar-grip-right\");\r\n                    var m = 10, p = 20;\r\n                    e.panEventsEnabled && (m = 25, p = a.scrollbarHeight);\r\n                    var q = d.rect(b, m, p, \"#000\", .005), n = d.rect(b, m, p, \"#000\", .005);\r\n                    n.translate(-(m - c) / 2, -(p - g) / 2);\r\n                    q.translate(-(m - c) / 2, -(p - g) / 2);\r\n                    c = b.set([k, n]);\r\n                    b = b.set([l, q]);\r\n                    a.iconLeft = c;\r\n                    h.push(a.iconLeft);\r\n                    a.iconRight = b;\r\n                    h.push(b);\r\n                    a.updateGripCursor(!1);\r\n                    e.makeAccessible(c, a.accessibleLabel);\r\n                    e.makeAccessible(b, a.accessibleLabel);\r\n                    e.makeAccessible(f, a.accessibleLabel);\r\n                    c.setAttr(\"role\", \"menuitem\");\r\n                    b.setAttr(\"role\", \"menuitem\");\r\n                    f.setAttr(\"role\", \"menuitem\");\r\n                    void 0 !== a.tabIndex && (c.setAttr(\"tabindex\", a.tabIndex), c.keyup(function (b) { a.handleKeys(b, 1, 0); }));\r\n                    void 0 !== a.tabIndex && (f.setAttr(\"tabindex\", a.tabIndex), f.keyup(function (b) { a.handleKeys(b, 1, 1); }));\r\n                    void 0 !== a.tabIndex && (b.setAttr(\"tabindex\", a.tabIndex), b.keyup(function (b) { a.handleKeys(b, 0, 1); }));\r\n                    c.mousedown(function () { a.leftDragStart(); }).mouseup(function () { a.leftDragStop(); }).mouseover(function () { a.iconRollOver(); }).mouseout(function () { a.iconRollOut(); }).touchstart(function () { a.leftDragStart(); }).touchend(function () { a.leftDragStop(); });\r\n                    b.mousedown(function () { a.rightDragStart(); }).mouseup(function () { a.rightDragStop(); }).mouseover(function () { a.iconRollOver(); }).mouseout(function () { a.iconRollOut(); }).touchstart(function () { a.rightDragStart(); }).touchend(function () { a.rightDragStop(); });\r\n                    d.ifArray(e.chartData) ? h.show() : h.hide();\r\n                    a.hideDragIcons();\r\n                    a.clipDragger(!1);\r\n                }\r\n                h.translate(a.x, a.y);\r\n                h.node.style.msTouchAction = \"none\";\r\n                h.node.style.touchAction = \"none\";\r\n            }\r\n        }, handleKeys: function (a, b, c) { this.getPercents(); var e = this.percentStart, d = this.percentEnd; if (this.rotate)\r\n            var f = d, d = e, e = f; if (37 == a.keyCode || 40 == a.keyCode)\r\n            e -= .02 * b, d -= .02 * c; if (39 == a.keyCode || 38 == a.keyCode)\r\n            e += .02 * b, d += .02 * c; this.rotate && (a = d, d = e, e = a); isNaN(d) || isNaN(e) || this.percentZoom(e, d, !0); }, updateScrollbarSize: function (a, b) { if (!isNaN(a) && !isNaN(b)) {\r\n            a = Math.round(a);\r\n            b = Math.round(b);\r\n            var c = this.dragger, e, d, f, g, k;\r\n            this.rotate ? (e = 0, d = a, f = this.width + 1, g = b - a, c.setAttr(\"height\", b - a), c.setAttr(\"y\", d)) : (e = a, d = 0, f = b - a, g = this.height + 1, k = b - a, c.setAttr(\"x\", e), c.setAttr(\"width\", k));\r\n            this.clipAndUpdate(e, d, f, g);\r\n        } }, update: function () { var a, b = !1, c, e, d = this.x, f = this.y, g = this.dragger, k = this.getDBox(); if (k) {\r\n            c = k.x + d;\r\n            e = k.y + f;\r\n            var l = k.width, k = k.height, m = this.rotate, p = this.chart, q = this.width, n = this.height, t = p.mouseX, p = p.mouseY;\r\n            a = this.initialMouse;\r\n            this.forceClip && this.clipDragger(!0);\r\n            if (this.dragging) {\r\n                var r = this.initialCoord;\r\n                m ? (a = r + (p - a), 0 > a && (a = 0), r = n - k, a > r && (a = r), g.setAttr(\"y\", a)) : (a = r + (t - a), 0 > a && (a = 0), r = q - l, a > r && (a = r), g.setAttr(\"x\", a));\r\n                this.clipDragger(!0);\r\n            }\r\n            if (this.resizingRight) {\r\n                if (m)\r\n                    if (a = p - e, !isNaN(this.maxHeight) && a > this.maxHeight && (a = this.maxHeight), a + e > n + f && (a = n - e + f), 0 > a)\r\n                        this.resizingRight = !1, b = this.resizingLeft = !0;\r\n                    else {\r\n                        if (0 === a || isNaN(a))\r\n                            a = .1;\r\n                        g.setAttr(\"height\", a);\r\n                    }\r\n                else if (a = t - c, !isNaN(this.maxWidth) && a > this.maxWidth && (a = this.maxWidth), a + c > q + d && (a = q - c + d), 0 > a)\r\n                    this.resizingRight = !1, b = this.resizingLeft = !0;\r\n                else {\r\n                    if (0 === a || isNaN(a))\r\n                        a = .1;\r\n                    g.setAttr(\"width\", a);\r\n                }\r\n                this.clipDragger(!0);\r\n            }\r\n            if (this.resizingLeft) {\r\n                if (m)\r\n                    if (c = e, e = p, e < f && (e = f), isNaN(e) && (e = f), e > n + f && (e = n + f), a = !0 === b ? c - e : k + c - e, !isNaN(this.maxHeight) && a > this.maxHeight && (a = this.maxHeight, e = c), 0 > a)\r\n                        this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"y\", c + k - f);\r\n                    else {\r\n                        if (0 === a || isNaN(a))\r\n                            a = .1;\r\n                        g.setAttr(\"y\", e - f);\r\n                        g.setAttr(\"height\", a);\r\n                    }\r\n                else if (e = t, e < d && (e = d), isNaN(e) && (e = d), e > q + d && (e = q + d), a = !0 === b ? c - e : l + c - e, !isNaN(this.maxWidth) && a > this.maxWidth && (a = this.maxWidth, e = c), 0 > a)\r\n                    this.resizingRight = !0, this.resizingLeft = !1, g.setAttr(\"x\", c + l - d);\r\n                else {\r\n                    if (0 === a || isNaN(a))\r\n                        a = .1;\r\n                    g.setAttr(\"x\", e - d);\r\n                    g.setAttr(\"width\", a);\r\n                }\r\n                this.clipDragger(!0);\r\n            }\r\n        } }, stopForceClip: function () { this.animating = this.forceClip = !1; }, clipDragger: function (a) { var b = this.getDBox(); if (b) {\r\n            var c = b.x, e = b.y, d = b.width, b = b.height, f = !1;\r\n            if (this.rotate) {\r\n                if (c = 0, d = this.width + 1, this.clipY != e || this.clipH != b)\r\n                    f = !0;\r\n            }\r\n            else if (e = 0, b = this.height + 1, this.clipX != c || this.clipW != d)\r\n                f = !0;\r\n            f && (this.clipAndUpdate(c, e, d, b), a && (this.updateOnReleaseOnly || this.dispatchScrollbarEvent()));\r\n        } }, maskGraphs: function () { }, clipAndUpdate: function (a, b, c, d) { this.clipX = a; this.clipY = b; this.clipW = c; this.clipH = d; this.selectedBG.setAttr(\"width\", c); this.selectedBG.setAttr(\"height\", d); this.selectedBG.translate(a, b); this.updateDragIconPositions(); this.maskGraphs(a, b, c, d); }, dispatchScrollbarEvent: function () { if (this.skipEvent)\r\n            this.skipEvent = !1;\r\n        else {\r\n            var a = this.chart;\r\n            a.hideBalloon();\r\n            var b = this.getDBox(), c = b.x, d = b.y, h = b.width, b = b.height;\r\n            this.getPercents();\r\n            this.rotate ? (c = d, h = this.height / b) : h = this.width / h;\r\n            this.fire({ type: \"zoomed\", position: c, chart: a, target: this, multiplier: h, relativeStart: this.percentStart, relativeEnd: this.percentEnd });\r\n        } }, updateDragIconPositions: function () {\r\n            var a = this.getDBox(), b = a.x, c = a.y, d = this.iconLeft, h = this.iconRight, f, g, k = this.scrollbarHeight;\r\n            this.rotate ? (f = this.dragIconWidth, g = this.dragIconHeight, d.translate((k - g) / 2, c - f / 2), h.translate((k - g) / 2, c + a.height - f / 2)) : (f = this.dragIconHeight,\r\n                g = this.dragIconWidth, d.translate(b - g / 2, (k - f) / 2), h.translate(b - g / 2 + a.width, (k - f) / 2));\r\n        }, showDragIcons: function () { this.resizeEnabled && (this.iconLeft.show(), this.iconRight.show()); }, hideDragIcons: function () { if (!this.resizingLeft && !this.resizingRight && !this.dragging) {\r\n            if (this.hideResizeGrips || !this.resizeEnabled)\r\n                this.iconLeft.hide(), this.iconRight.hide();\r\n            this.removeCursors();\r\n        } }, removeCursors: function () { this.chart.setMouseCursor(\"auto\"); }, fireZoomEvent: function (a) { this.fire({ type: a, chart: this.chart, target: this }); },\r\n        percentZoom: function (a, b, c) { a = d.fitToBounds(a, 0, b); b = d.fitToBounds(b, a, 1); if (this.dragger && this.enabled) {\r\n            this.dragger.stop();\r\n            isNaN(a) && (a = 0);\r\n            isNaN(b) && (b = 1);\r\n            var e, h;\r\n            this.rotate ? (e = this.height, b = e - e * b, h = e - e * a) : (e = this.width, h = e * b, b = e * a);\r\n            this.updateScrollbarSize(b, h);\r\n            this.clipDragger(!1);\r\n            this.getPercents();\r\n            c && this.dispatchScrollbarEvent();\r\n        } }, destroy: function () { this.clear(); d.remove(this.set); d.remove(this.iconRight); d.remove(this.iconLeft); }, clear: function () { }, handleDragStart: function () { if (this.enabled) {\r\n            this.fireZoomEvent(\"zoomStarted\");\r\n            var a = this.chart;\r\n            this.dragger.stop();\r\n            this.removeCursors();\r\n            d.isModern && (this.dragger.node.style.cssText = this.dragCursorDown);\r\n            this.dragging = !0;\r\n            var b = this.getDBox();\r\n            this.rotate ? (this.initialCoord = b.y, this.initialMouse = a.mouseY) : (this.initialCoord = b.x, this.initialMouse = a.mouseX);\r\n        } }, handleDragStop: function () { this.updateOnReleaseOnly && (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent()); this.dragging = !1; this.mouseIsOver && this.removeCursors(); d.isModern && (this.dragger.node.style.cssText = this.dragCursorHover); this.update(); this.fireZoomEvent(\"zoomEnded\"); }, handleDraggerOver: function () { this.handleMouseOver(); d.isModern && (this.dragger.node.style.cssText = this.dragCursorHover); }, leftDragStart: function () { this.fireZoomEvent(\"zoomStarted\"); this.dragger.stop(); this.resizingLeft = !0; this.updateGripCursor(!0); }, updateGripCursor: function (a) { d.isModern && (a = this.rotate ? a ? this.vResizeCursorDown : this.vResizeCursorHover : a ? this.hResizeCursorDown : this.hResizeCursorHover) && (this.iconRight && (this.iconRight.node.style.cssText = a), this.iconLeft && (this.iconLeft.node.style.cssText = a)); }, leftDragStop: function () { this.resizingLeft && (this.resizingLeft = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease(), this.fireZoomEvent(\"zoomEnded\")); this.updateGripCursor(!1); }, rightDragStart: function () { this.fireZoomEvent(\"zoomStarted\"); this.dragger.stop(); this.resizingRight = !0; this.updateGripCursor(!0); }, rightDragStop: function () { this.resizingRight && (this.resizingRight = !1, this.mouseIsOver || this.removeCursors(), this.updateOnRelease(), this.fireZoomEvent(\"zoomEnded\")); this.updateGripCursor(!1); }, iconRollOut: function () { this.removeCursors(); }, iconRollOver: function () { this.rotate ? this.vResizeCursor && this.chart.setMouseCursor(this.vResizeCursor) : this.hResizeCursor && this.chart.setMouseCursor(this.hResizeCursor); this.handleMouseOver(); }, getDBox: function () { if (this.dragger)\r\n            return this.dragger.getBBox(); }, handleBgClick: function () { var a = this; if (!a.resizingRight && !a.resizingLeft) {\r\n            a.zooming = !0;\r\n            var b, c, e = a.scrollDuration, h = a.dragger;\r\n            b = a.getDBox();\r\n            var f = b.height, g = b.width;\r\n            c = a.chart;\r\n            var k = a.y, l = a.x, m = a.rotate;\r\n            m ? (b = \"y\", c = c.mouseY - f / 2 - k, c = d.fitToBounds(c, 0, a.height - f)) : (b = \"x\", c = c.mouseX - g / 2 - l, c = d.fitToBounds(c, 0, a.width - g));\r\n            a.updateOnReleaseOnly ? (a.skipEvent = !1, h.setAttr(b, c), a.dispatchScrollbarEvent(), a.clipDragger()) : (a.animating = !0, c = Math.round(c), m ? h.animate({ y: c }, e, \">\") : h.animate({ x: c }, e, \">\"), a.forceClip = !0, clearTimeout(a.forceTO), a.forceTO = setTimeout(function () { a.stopForceClip.call(a); }, 5E3 * e));\r\n        } }, updateOnRelease: function () { this.updateOnReleaseOnly && (this.update(), this.skipEvent = !1, this.dispatchScrollbarEvent()); }, handleReleaseOutside: function () { if (this.set) {\r\n            if (this.resizingLeft || this.resizingRight || this.dragging)\r\n                this.dragging = this.resizingRight = this.resizingLeft = !1, this.updateOnRelease(), this.removeCursors();\r\n            this.animating = this.mouseIsOver = !1;\r\n            this.hideDragIcons();\r\n            this.update();\r\n        } }, handleMouseOver: function () { this.mouseIsOver = !0; this.showDragIcons(); }, handleMouseOut: function () { this.mouseIsOver = !1; this.hideDragIcons(); this.removeCursors(); } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.ChartScrollbar = d.Class({ inherits: d.SimpleChartScrollbar, construct: function (a) { this.cname = \"ChartScrollbar\"; d.ChartScrollbar.base.construct.call(this, a); this.graphLineColor = \"#BBBBBB\"; this.graphLineAlpha = 0; this.graphFillColor = \"#BBBBBB\"; this.graphFillAlpha = 1; this.selectedGraphLineColor = \"#888888\"; this.selectedGraphLineAlpha = 0; this.selectedGraphFillColor = \"#888888\"; this.selectedGraphFillAlpha = 1; this.gridCount = 0; this.gridColor = \"#FFFFFF\"; this.gridAlpha = .7; this.skipEvent = this.autoGridCount = !1; this.color = \"#FFFFFF\"; this.scrollbarCreated = !1; this.oppositeAxis = !0; this.accessibleLabel = \"Zoom chart using cursor arrows\"; d.applyTheme(this, a, this.cname); }, init: function () { var a = this.categoryAxis, b = this.chart, c = this.gridAxis; a || (\"CategoryAxis\" == this.gridAxis.cname ? (this.catScrollbar = !0, a = new d.CategoryAxis, a.id = \"scrollbar\") : (a = new d.ValueAxis, a.data = b.chartData, a.id = c.id, a.type = c.type, a.maximumDate = c.maximumDate, a.minimumDate = c.minimumDate, a.minPeriod = c.minPeriod, a.minMaxField = c.minMaxField), this.categoryAxis = a); a.chart = b; var e = b.categoryAxis; e && (a.firstDayOfWeek = e.firstDayOfWeek); a.dateFormats = c.dateFormats; a.markPeriodChange = c.markPeriodChange; a.boldPeriodBeginning = c.boldPeriodBeginning; a.labelFunction = c.labelFunction; a.axisItemRenderer = d.RecItem; a.axisRenderer = d.RecAxis; a.guideFillRenderer = d.RecFill; a.inside = !0; a.fontSize = this.fontSize; a.tickLength = 0; a.axisAlpha = 0; d.isString(this.graph) && (this.graph = d.getObjById(b.graphs, this.graph)); (a = this.graph) && this.catScrollbar && (c = this.valueAxis, c || (this.valueAxis = c = new d.ValueAxis, c.visible = !1, c.scrollbar = !0, c.axisItemRenderer = d.RecItem, c.axisRenderer = d.RecAxis, c.guideFillRenderer = d.RecFill, c.labelsEnabled = !1, c.chart = b), b = this.unselectedGraph, b || (b = new d.AmGraph, b.scrollbar = !0, this.unselectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers), b = this.selectedGraph, b || (b = new d.AmGraph, b.scrollbar = !0, this.selectedGraph = b, b.negativeBase = a.negativeBase, b.noStepRisers = a.noStepRisers)); this.scrollbarCreated = !0; }, draw: function () { var a = this; d.ChartScrollbar.base.draw.call(a); if (a.enabled) {\r\n            a.scrollbarCreated || a.init();\r\n            var b = a.chart, c = b.chartData, e = a.categoryAxis, h = a.rotate, f = a.x, g = a.y, k = a.width, l = a.height, m = a.gridAxis, p = a.set;\r\n            e.setOrientation(!h);\r\n            e.parseDates = m.parseDates;\r\n            \"ValueAxis\" == a.categoryAxis.cname && (e.rotate = !h);\r\n            e.equalSpacing = m.equalSpacing;\r\n            e.minPeriod = m.minPeriod;\r\n            e.startOnAxis = m.startOnAxis;\r\n            e.width = k - 1;\r\n            e.height = l;\r\n            e.gridCount = a.gridCount;\r\n            e.gridColor = a.gridColor;\r\n            e.gridAlpha = a.gridAlpha;\r\n            e.color = a.color;\r\n            e.tickLength = 0;\r\n            e.axisAlpha = 0;\r\n            e.autoGridCount = a.autoGridCount;\r\n            e.parseDates && !e.equalSpacing && e.timeZoom(b.firstTime, b.lastTime);\r\n            e.minimum = a.gridAxis.fullMin;\r\n            e.maximum = a.gridAxis.fullMax;\r\n            e.strictMinMax = !0;\r\n            e.zoom(0, c.length - 1);\r\n            if ((m = a.graph) && a.catScrollbar) {\r\n                var q = a.valueAxis, n = m.valueAxis;\r\n                q.id = n.id;\r\n                q.rotate = h;\r\n                q.setOrientation(h);\r\n                q.width = k;\r\n                q.height = l;\r\n                q.dataProvider = c;\r\n                q.reversed = n.reversed;\r\n                q.logarithmic = n.logarithmic;\r\n                q.gridAlpha = 0;\r\n                q.axisAlpha = 0;\r\n                p.push(q.set);\r\n                h ? (q.y = g, q.x = 0) : (q.x = f, q.y = 0);\r\n                var f = Infinity, g = -Infinity, t;\r\n                for (t = 0; t < c.length; t++) {\r\n                    var r = c[t].axes[n.id].graphs[m.id].values, w;\r\n                    for (w in r)\r\n                        if (r.hasOwnProperty(w) && \"percents\" != w && \"total\" != w) {\r\n                            var z = r[w];\r\n                            z < f && (f = z);\r\n                            z > g && (g = z);\r\n                        }\r\n                }\r\n                Infinity != f && (q.minimum = f);\r\n                -Infinity != g && (q.maximum = g + .1 * (g - f));\r\n                f == g && (--q.minimum, q.maximum += 1);\r\n                void 0 !== a.minimum && (q.minimum = a.minimum);\r\n                void 0 !== a.maximum && (q.maximum = a.maximum);\r\n                q.zoom(0, c.length - 1);\r\n                w = a.unselectedGraph;\r\n                w.id = m.id;\r\n                w.bcn = \"scrollbar-graph-\";\r\n                w.rotate = h;\r\n                w.chart = b;\r\n                w.data = c;\r\n                w.valueAxis = q;\r\n                w.chart = m.chart;\r\n                w.categoryAxis = a.categoryAxis;\r\n                w.periodSpan = m.periodSpan;\r\n                w.valueField = m.valueField;\r\n                w.openField = m.openField;\r\n                w.closeField = m.closeField;\r\n                w.highField = m.highField;\r\n                w.lowField = m.lowField;\r\n                w.lineAlpha = a.graphLineAlpha;\r\n                w.lineColorR = a.graphLineColor;\r\n                w.fillAlphas = a.graphFillAlpha;\r\n                w.fillColorsR = a.graphFillColor;\r\n                w.connect = m.connect;\r\n                w.hidden = m.hidden;\r\n                w.width = k;\r\n                w.height = l;\r\n                w.pointPosition = m.pointPosition;\r\n                w.stepDirection = m.stepDirection;\r\n                w.periodSpan = m.periodSpan;\r\n                n = a.selectedGraph;\r\n                n.id = m.id;\r\n                n.bcn = w.bcn + \"selected-\";\r\n                n.rotate = h;\r\n                n.chart = b;\r\n                n.data = c;\r\n                n.valueAxis = q;\r\n                n.chart = m.chart;\r\n                n.categoryAxis = e;\r\n                n.periodSpan = m.periodSpan;\r\n                n.valueField = m.valueField;\r\n                n.openField = m.openField;\r\n                n.closeField = m.closeField;\r\n                n.highField = m.highField;\r\n                n.lowField = m.lowField;\r\n                n.lineAlpha = a.selectedGraphLineAlpha;\r\n                n.lineColorR = a.selectedGraphLineColor;\r\n                n.fillAlphas = a.selectedGraphFillAlpha;\r\n                n.fillColorsR = a.selectedGraphFillColor;\r\n                n.connect = m.connect;\r\n                n.hidden = m.hidden;\r\n                n.width = k;\r\n                n.height = l;\r\n                n.pointPosition = m.pointPosition;\r\n                n.stepDirection = m.stepDirection;\r\n                n.periodSpan = m.periodSpan;\r\n                b = a.graphType;\r\n                b || (b = m.type);\r\n                w.type = b;\r\n                n.type = b;\r\n                c = c.length - 1;\r\n                w.zoom(0, c);\r\n                n.zoom(0, c);\r\n                n.set.click(function () { a.handleBackgroundClick(); }).mouseover(function () { a.handleMouseOver(); }).mouseout(function () { a.handleMouseOut(); });\r\n                w.set.click(function () { a.handleBackgroundClick(); }).mouseover(function () { a.handleMouseOver(); }).mouseout(function () { a.handleMouseOut(); });\r\n                p.push(w.set);\r\n                p.push(n.set);\r\n            }\r\n            p.push(e.set);\r\n            p.push(e.labelsSet);\r\n            a.bg.toBack();\r\n            a.invisibleBg.toFront();\r\n            a.dragger.toFront();\r\n            a.iconLeft.toFront();\r\n            a.iconRight.toFront();\r\n        } }, timeZoom: function (a, b, c) { this.startTime = a; this.endTime = b; this.timeDifference = b - a; this.skipEvent = !d.toBoolean(c); this.zoomScrollbar(); this.dispatchScrollbarEvent(); }, zoom: function (a, b) { this.start = a; this.end = b; this.skipEvent = !0; this.zoomScrollbar(); }, dispatchScrollbarEvent: function () {\r\n            if (this.categoryAxis && \"ValueAxis\" == this.categoryAxis.cname)\r\n                d.ChartScrollbar.base.dispatchScrollbarEvent.call(this);\r\n            else if (this.skipEvent)\r\n                this.skipEvent = !1;\r\n            else {\r\n                var a = this.chart.chartData, b, c, e = this.dragger.getBBox();\r\n                b = e.x;\r\n                var h = e.y, f = e.width, e = e.height, g = this.chart;\r\n                this.rotate ? (b = h, c = e) : c = f;\r\n                f = { type: \"zoomed\", target: this };\r\n                f.chart = g;\r\n                var k = this.categoryAxis, l = this.stepWidth, h = g.minSelectedTime, e = g.maxSelectedTime, m = !1;\r\n                if (k.parseDates && !k.equalSpacing) {\r\n                    if (a = g.lastTime, g = g.firstTime, k = Math.round(b / l) + g, b = this.dragging ? k + this.timeDifference : Math.round((b + c) / l) + g, k > b && (k = b), 0 < h && b - k < h && (b = Math.round(k + (b - k) / 2), m = Math.round(h / 2), k = b - m, b += m, m = !0), 0 < e && b - k > e && (b = Math.round(k + (b - k) / 2), m = Math.round(e / 2), k = b - m, b += m, m = !0), b > a && (b =\r\n                        a), b - h < k && (k = b - h), k < g && (k = g), k + h > b && (b = k + h), k != this.startTime || b != this.endTime)\r\n                        this.startTime = k, this.endTime = b, f.start = k, f.end = b, f.startDate = new Date(k), f.endDate = new Date(b), this.fire(f);\r\n                }\r\n                else {\r\n                    k.startOnAxis || (b += l / 2);\r\n                    c -= this.stepWidth / 2;\r\n                    h = k.xToIndex(b);\r\n                    b = k.xToIndex(b + c);\r\n                    if (h != this.start || this.end != b)\r\n                        k.startOnAxis && (this.resizingRight && h == b && b++, this.resizingLeft && h == b && (0 < h ? h-- : b = 1)), this.start = h, this.end = this.dragging ? this.start + this.difference : b, f.start = this.start, f.end = this.end, k.parseDates && (a[this.start] && (f.startDate = new Date(a[this.start].time)), a[this.end] && (f.endDate = new Date(a[this.end].time))), this.fire(f);\r\n                    this.percentStart = h;\r\n                    this.percentEnd = b;\r\n                }\r\n                m && this.zoomScrollbar(!0);\r\n            }\r\n        }, zoomScrollbar: function (a) { if ((!(this.dragging || this.resizingLeft || this.resizingRight || this.animating) || a) && this.dragger && this.enabled) {\r\n            var b, c, d = this.chart;\r\n            a = d.chartData;\r\n            var h = this.categoryAxis;\r\n            h.parseDates && !h.equalSpacing ? (a = h.stepWidth, c = d.firstTime, b = a * (this.startTime - c), c = a * (this.endTime - c)) : (a[this.start] && (b = a[this.start].x[h.id]), a[this.end] && (c = a[this.end].x[h.id]), a = h.stepWidth, h.startOnAxis || (d = a / 2, b -= d, c += d));\r\n            this.stepWidth = a;\r\n            isNaN(b) || isNaN(c) || this.updateScrollbarSize(b, c);\r\n        } }, maskGraphs: function (a, b, c, d) { var h = this.selectedGraph; h && h.set.clipRect(a, b, c, d); }, handleDragStart: function () { d.ChartScrollbar.base.handleDragStart.call(this); this.difference = this.end - this.start; this.timeDifference = this.endTime - this.startTime; 0 > this.timeDifference && (this.timeDifference = 0); }, handleBackgroundClick: function () { d.ChartScrollbar.base.handleBackgroundClick.call(this); this.dragging || (this.difference = this.end - this.start, this.timeDifference = this.endTime - this.startTime, 0 > this.timeDifference && (this.timeDifference = 0)); } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.AmBalloon = d.Class({ construct: function (a) { this.cname = \"AmBalloon\"; this.enabled = !0; this.fillColor = \"#FFFFFF\"; this.fillAlpha = .8; this.borderThickness = 2; this.borderColor = \"#FFFFFF\"; this.borderAlpha = 1; this.cornerRadius = 0; this.maxWidth = 220; this.horizontalPadding = 8; this.verticalPadding = 4; this.pointerWidth = 6; this.pointerOrientation = \"V\"; this.color = \"#000000\"; this.adjustBorderColor = !0; this.show = this.follow = this.showBullet = !1; this.bulletSize = 3; this.shadowAlpha = .4; this.shadowColor = \"#000000\"; this.fadeOutDuration = this.animationDuration = .3; this.fixedPosition = !0; this.offsetY = 6; this.offsetX = 1; this.textAlign = \"center\"; this.disableMouseEvents = !0; this.deltaSignX = this.deltaSignY = 1; d.isModern || (this.offsetY *= 1.5); this.sdy = this.sdx = 0; d.applyTheme(this, a, this.cname); }, draw: function () {\r\n            var a = this.pointToX, b = this.pointToY;\r\n            d.isModern || (this.drop = !1);\r\n            var c = this.chart;\r\n            d.VML && (this.fadeOutDuration = 0);\r\n            this.xAnim && c.stopAnim(this.xAnim);\r\n            this.yAnim && c.stopAnim(this.yAnim);\r\n            this.sdy = this.sdx = 0;\r\n            if (!isNaN(a)) {\r\n                var e = this.follow, h = c.container, f = this.set;\r\n                d.remove(f);\r\n                this.removeDiv();\r\n                f = h.set();\r\n                f.node.style.pointerEvents = \"none\";\r\n                this.set = f;\r\n                this.mainSet ? (this.mainSet.push(this.set), this.sdx = this.mainSet.x, this.sdy = this.mainSet.y) : c.balloonsSet.push(f);\r\n                if (this.show) {\r\n                    var g = this.l, k = this.t, l = this.r, m = this.b, p = this.balloonColor, q = this.fillColor, n = this.borderColor, t = q;\r\n                    void 0 != p && (this.adjustBorderColor ? t = n = p : q = p);\r\n                    var r = this.horizontalPadding, w = this.verticalPadding, z = this.pointerWidth, x = this.pointerOrientation, u = this.cornerRadius, A = c.fontFamily, y = this.fontSize;\r\n                    void 0 == y && (y = c.fontSize);\r\n                    var p = document.createElement(\"div\"), B = c.classNamePrefix;\r\n                    p.className = B + \"-balloon-div\";\r\n                    this.className && (p.className = p.className + \" \" + B + \"-balloon-div-\" + this.className);\r\n                    B = p.style;\r\n                    this.disableMouseEvents && (B.pointerEvents = \"none\");\r\n                    B.position = \"absolute\";\r\n                    var D = this.minWidth, C = document.createElement(\"div\");\r\n                    p.appendChild(C);\r\n                    var I = C.style;\r\n                    isNaN(D) || (I.minWidth = D - 2 * r + \"px\");\r\n                    I.textAlign = this.textAlign;\r\n                    I.maxWidth = this.maxWidth + \"px\";\r\n                    I.fontSize = y + \"px\";\r\n                    I.color = this.color;\r\n                    I.fontFamily = A;\r\n                    C.innerHTML = this.text;\r\n                    c.chartDiv.appendChild(p);\r\n                    this.textDiv = p;\r\n                    var I = p.offsetWidth, H = p.offsetHeight;\r\n                    p.clientHeight && (I = p.clientWidth, H = p.clientHeight);\r\n                    A = H + 2 * w;\r\n                    C = I + 2 * r;\r\n                    !isNaN(D) && C < D && (C = D);\r\n                    window.opera && (A += 2);\r\n                    var Q = !1, y = this.offsetY;\r\n                    c.handDrawn && (y += c.handDrawScatter + 2);\r\n                    \"H\" != x ? (D = a - C / 2, b < k + A + 10 && \"down\" != x ? (Q = !0, e && (b += y), y = b + z, this.deltaSignY = -1) : (e && (b -= y), y = b - A - z, this.deltaSignY = 1)) : (2 * z > A && (z = A / 2), y = b - A / 2, a < g + (l - g) / 2 ? (D = a + z, this.deltaSignX = -1) : (D = a - C - z, this.deltaSignX =\r\n                        1));\r\n                    y + A >= m && (y = m - A);\r\n                    y < k && (y = k);\r\n                    D < g && (D = g);\r\n                    D + C > l && (D = l - C);\r\n                    var k = y + w, m = D + r, M = this.shadowAlpha, P = this.shadowColor, r = this.borderThickness, ia = this.bulletSize, J, w = this.fillAlpha, aa = this.borderAlpha;\r\n                    this.showBullet && (J = d.circle(h, ia, t, w), f.push(J));\r\n                    this.drop ? (g = C / 1.6, l = 0, \"V\" == x && (x = \"down\"), \"H\" == x && (x = \"left\"), \"down\" == x && (D = a + 1, y = b - g - g / 3), \"up\" == x && (l = 180, D = a + 1, y = b + g + g / 3), \"left\" == x && (l = 270, D = a + g + g / 3 + 2, y = b), \"right\" == x && (l = 90, D = a - g - g / 3 + 2, y = b), k = y - H / 2 + 1, m = D - I / 2 - 1, q = d.drop(h, g, l, q, w, r, n, aa)) : 0 < u || 0 === z ? (0 < M && (a = d.rect(h, C, A, q, 0, r + 1, P, M, u), d.isModern ? a.translate(1, 1) : a.translate(4, 4), f.push(a)), q = d.rect(h, C, A, q, w, r, n, aa, u)) : (t = [], u = [], \"H\" != x ? (g = a - D, g > C - z && (g = C - z), g < z && (g = z), t = [0, g - z, a - D, g + z, C, C, 0, 0], u = Q ? [0, 0, b - y, 0, 0, A, A, 0] : [A, A, b - y, A, A, 0, 0, A]) : (x = b - y, x > A - z && (x = A - z), x < z && (x = z), u = [0, x - z, b - y, x + z, A, A, 0, 0], t = a < g + (l - g) / 2 ? [0, 0, D < a ? 0 : a - D, 0, 0, C, C, 0] : [C, C, D + C > a ? C : a - D, C, C, 0, 0, C]), 0 < M && (a = d.polygon(h, t, u, q, 0, r, P, M), a.translate(1, 1), f.push(a)), q = d.polygon(h, t, u, q, w, r, n, aa));\r\n                    this.bg = q;\r\n                    f.push(q);\r\n                    q.toFront();\r\n                    d.setCN(c, q, \"balloon-bg\");\r\n                    this.className && d.setCN(c, q, \"balloon-bg-\" + this.className);\r\n                    h = 1 * this.deltaSignX;\r\n                    m += this.sdx;\r\n                    k += this.sdy;\r\n                    B.left = m + \"px\";\r\n                    B.top = k + \"px\";\r\n                    f.translate(D - h, y, 1, !0);\r\n                    q = q.getBBox();\r\n                    this.bottom = y + A + 1;\r\n                    this.yPos = q.y + y;\r\n                    J && J.translate(this.pointToX - D + h, b - y);\r\n                    b = this.animationDuration;\r\n                    0 < this.animationDuration && !e && !isNaN(this.prevX) && (f.translate(this.prevX, this.prevY, NaN, !0), f.animate({ translate: D - h + \",\" + y }, b, \"easeOutSine\"), p && (B.left = this.prevTX + \"px\", B.top = this.prevTY + \"px\", this.xAnim = c.animate({ node: p }, \"left\", this.prevTX, m, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({ node: p }, \"top\", this.prevTY, k, b, \"easeOutSine\", \"px\")));\r\n                    this.prevX = D - h;\r\n                    this.prevY = y;\r\n                    this.prevTX = m;\r\n                    this.prevTY = k;\r\n                }\r\n            }\r\n        }, fixPrevious: function () { this.rPrevX = this.prevX; this.rPrevY = this.prevY; this.rPrevTX = this.prevTX; this.rPrevTY = this.prevTY; }, restorePrevious: function () { this.prevX = this.rPrevX; this.prevY = this.rPrevY; this.prevTX = this.rPrevTX; this.prevTY = this.rPrevTY; }, followMouse: function () { if (this.follow && this.show) {\r\n            var a = this.chart.mouseX - this.offsetX * this.deltaSignX - this.sdx, b = this.chart.mouseY - this.sdy;\r\n            this.pointToX = a;\r\n            this.pointToY = b;\r\n            if (a != this.previousX || b != this.previousY)\r\n                if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius)\r\n                    this.draw();\r\n                else {\r\n                    var c = this.set;\r\n                    if (c) {\r\n                        var d = c.getBBox(), a = a - d.width / 2, h = b - d.height - 10;\r\n                        a < this.l && (a = this.l);\r\n                        a > this.r - d.width && (a = this.r - d.width);\r\n                        h < this.t && (h = b + 10);\r\n                        c.translate(a, h);\r\n                        b = this.textDiv.style;\r\n                        b.left = a + this.horizontalPadding + \"px\";\r\n                        b.top = h + this.verticalPadding + \"px\";\r\n                    }\r\n                }\r\n        } }, changeColor: function (a) { this.balloonColor = a; }, setBounds: function (a, b, c, d) { this.l = a; this.t = b; this.r = c; this.b = d; this.destroyTO && clearTimeout(this.destroyTO); }, showBalloon: function (a) { if (this.text != a || this.positionChanged)\r\n            this.text = a, this.isHiding = !1, this.show = !0, this.destroyTO && clearTimeout(this.destroyTO), a = this.chart, this.fadeAnim1 && a.stopAnim(this.fadeAnim1), this.fadeAnim2 && a.stopAnim(this.fadeAnim2), this.draw(), this.positionChanged = !1; }, hide: function (a) { var b = this; b.text = void 0; isNaN(a) && (a = b.fadeOutDuration); var c = b.chart; if (0 < a && !b.isHiding) {\r\n            b.isHiding = !0;\r\n            b.destroyTO && clearTimeout(b.destroyTO);\r\n            b.destroyTO = setTimeout(function () { b.destroy.call(b); }, 1E3 * a);\r\n            b.follow = !1;\r\n            b.show = !1;\r\n            var d = b.set;\r\n            d && (d.setAttr(\"opacity\", b.fillAlpha), b.fadeAnim1 = d.animate({ opacity: 0 }, a, \"easeInSine\"));\r\n            b.textDiv && (b.fadeAnim2 = c.animate({ node: b.textDiv }, \"opacity\", 1, 0, a, \"easeInSine\", \"\"));\r\n        }\r\n        else\r\n            b.show = !1, b.follow = !1, b.destroy(); }, setPosition: function (a, b) { if (a != this.pointToX || b != this.pointToY)\r\n            this.previousX = this.pointToX, this.previousY = this.pointToY, this.pointToX = a, this.pointToY = b, this.positionChanged = !0; }, followCursor: function (a) { var b = this; b.follow = a; clearInterval(b.interval); var c = b.chart.mouseX - b.sdx, d = b.chart.mouseY - b.sdy; !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = d, b.followMouse(), b.interval = setInterval(function () { b.followMouse.call(b); }, 40)); }, removeDiv: function () { if (this.textDiv) {\r\n            var a = this.textDiv.parentNode;\r\n            a && a.removeChild(this.textDiv);\r\n        } }, destroy: function () { clearInterval(this.interval); d.remove(this.set); this.removeDiv(); this.set = null; } });\r\n})();\r\n(function () { var d = window.AmCharts; d.AmCoordinateChart = d.Class({ inherits: d.AmChart, construct: function (a) { d.AmCoordinateChart.base.construct.call(this, a); this.theme = a; this.createEvents(\"rollOverGraphItem\", \"rollOutGraphItem\", \"clickGraphItem\", \"doubleClickGraphItem\", \"rightClickGraphItem\", \"clickGraph\", \"rollOverGraph\", \"rollOutGraph\"); this.startAlpha = 1; this.startDuration = 0; this.startEffect = \"elastic\"; this.sequencedAnimation = !0; this.colors = \"#FF6600 #FCD202 #B0DE09 #0D8ECF #2A0CD0 #CD0D74 #CC0000 #00CC00 #0000CC #DDDDDD #999999 #333333 #990000\".split(\" \"); this.balloonDateFormat = \"MMM DD, YYYY\"; this.valueAxes = []; this.graphs = []; this.guides = []; this.gridAboveGraphs = !1; d.applyTheme(this, a, \"AmCoordinateChart\"); }, initChart: function () { d.AmCoordinateChart.base.initChart.call(this); this.drawGraphs = !0; var a = this.categoryAxis; a && (this.categoryAxis = d.processObject(a, d.CategoryAxis, this.theme)); this.processValueAxes(); this.createValueAxes(); this.processGraphs(); this.processGuides(); d.VML && (this.startAlpha = 1); this.setLegendData(this.graphs); this.gridAboveGraphs && (this.gridSet.toFront(), this.bulletSet.toFront(), this.balloonsSet.toFront()); }, createValueAxes: function () { if (0 === this.valueAxes.length) {\r\n        var a = new d.ValueAxis;\r\n        this.addValueAxis(a);\r\n    } }, parseData: function () { this.processValueAxes(); this.processGraphs(); }, parseSerialData: function (a) { this.chartData = []; if (a)\r\n        if (0 < this.processTimeout) {\r\n            1 > this.processCount && (this.processCount = 1);\r\n            var b = a.length / this.processCount;\r\n            this.parseCount = Math.ceil(b) - 1;\r\n            for (var c = 0; c < b; c++)\r\n                this.delayParseSerialData(a, c);\r\n        }\r\n        else\r\n            this.parseCount = 0, this.parsePartSerialData(a, 0, a.length, 0);\r\n    else\r\n        this.onDataUpdated(); }, delayParseSerialData: function (a, b) { var c = this, d = c.processCount; setTimeout(function () { c.parsePartSerialData.call(c, a, b * d, (b + 1) * d, b); }, c.processTimeout); }, parsePartSerialData: function (a, b, c, e) { c > a.length && (c = a.length); var h = this.graphs, f = {}, g = this.seriesIdField; g || (g = this.categoryField); var k = !1, l, m = this.categoryAxis, p, q, n; m && (k = m.parseDates, p = m.forceShowField, n = m.classNameField, q = m.labelColorField, l = m.categoryFunction); var t, r, w = {}, z; k && (t = d.extractPeriod(m.minPeriod), r = t.period, t = t.count, z = d.getPeriodDuration(r, t)); var x = {}; this.lookupTable = x; var u, A = this.dataDateFormat, y = {}; for (u = b; u < c; u++) {\r\n        var B = {}, D = a[u];\r\n        b = D[this.categoryField];\r\n        B.dataContext = D;\r\n        B.category = l ? l(b, D, m) : String(b);\r\n        p && (B.forceShow = D[p]);\r\n        n && (B.className = D[n]);\r\n        q && (B.labelColor = D[q]);\r\n        x[D[g]] = B;\r\n        if (k && (m.categoryFunction ? b = m.categoryFunction(b, D, m) : (!A || b instanceof Date || (b = b.toString() + \" |\"), b = d.getDate(b, A, m.minPeriod)), b = d.resetDateToMin(b, r, t, m.firstDayOfWeek), B.category = b, B.time = b.getTime(), isNaN(B.time)))\r\n            continue;\r\n        var C = this.valueAxes;\r\n        B.axes = {};\r\n        B.x = {};\r\n        var I;\r\n        for (I = 0; I < C.length; I++) {\r\n            var H = C[I].id;\r\n            B.axes[H] = {};\r\n            B.axes[H].graphs = {};\r\n            var Q;\r\n            for (Q = 0; Q < h.length; Q++) {\r\n                b = h[Q];\r\n                var M = b.id, P = 1.1;\r\n                isNaN(b.gapPeriod) || (P = b.gapPeriod);\r\n                var ia = b.periodValue;\r\n                if (b.valueAxis.id == H) {\r\n                    B.axes[H].graphs[M] = {};\r\n                    var J = {};\r\n                    J.index = u;\r\n                    var aa = D;\r\n                    b.dataProvider && (aa = f);\r\n                    J.values = this.processValues(aa, b, ia);\r\n                    if (!b.connect || b.forceGap && !isNaN(b.gapPeriod))\r\n                        if (y && y[M] && 0 < P && B.time - w[M] >= z * P && (y[M].gap = !0), b.forceGap) {\r\n                            var P = 0, ma;\r\n                            for (ma in J.values)\r\n                                P++;\r\n                            0 < P && (w[M] = B.time, y[M] = J);\r\n                        }\r\n                        else\r\n                            w[M] = B.time, y[M] = J;\r\n                    this.processFields(b, J, aa);\r\n                    J.category = B.category;\r\n                    J.serialDataItem = B;\r\n                    J.graph = b;\r\n                    B.axes[H].graphs[M] = J;\r\n                }\r\n            }\r\n        }\r\n        this.chartData[u] = B;\r\n    } if (this.parseCount == e) {\r\n        for (a = 0; a < h.length; a++)\r\n            b = h[a], b.dataProvider && this.parseGraphData(b);\r\n        this.dataChanged = !1;\r\n        this.dispatchDataUpdated = !0;\r\n        this.onDataUpdated();\r\n    } }, processValues: function (a, b, c) { var e = {}, h, f = !1; \"candlestick\" != b.type && \"ohlc\" != b.type || \"\" === c || (f = !0); for (var g = \"value error open close low high\".split(\" \"), k = 0; k < g.length; k++) {\r\n        var l = g[k];\r\n        \"value\" != l && \"error\" != l && f && (c = l.charAt(0).toUpperCase() + l.slice(1));\r\n        var m = a[b[l + \"Field\"] + c];\r\n        null !== m && (h = Number(m), isNaN(h) || (e[l] = h), \"date\" == b.valueAxis.type && void 0 !== m && (h = d.getDate(m, b.chart.dataDateFormat), e[l] = h.getTime()));\r\n    } return e; }, parseGraphData: function (a) { var b = a.dataProvider, c = a.seriesIdField; c || (c = this.seriesIdField); c || (c = this.categoryField); var d; for (d = 0; d < b.length; d++) {\r\n        var h = b[d], f = this.lookupTable[String(h[c])], g = a.valueAxis.id;\r\n        f && (g = f.axes[g].graphs[a.id], g.serialDataItem = f, g.values = this.processValues(h, a, a.periodValue), this.processFields(a, g, h));\r\n    } }, addValueAxis: function (a) { a.chart = this; this.valueAxes.push(a); this.validateData(); }, removeValueAxesAndGraphs: function () { var a = this.valueAxes, b; for (b = a.length - 1; -1 < b; b--)\r\n        this.removeValueAxis(a[b]); }, removeValueAxis: function (a) { var b = this.graphs, c; for (c = b.length - 1; 0 <= c; c--) {\r\n        var d = b[c];\r\n        d && d.valueAxis == a && this.removeGraph(d);\r\n    } b = this.valueAxes; for (c = b.length - 1; 0 <= c; c--)\r\n        b[c] == a && b.splice(c, 1); this.validateData(); }, addGraph: function (a) { this.graphs.push(a); this.chooseGraphColor(a, this.graphs.length - 1); this.validateData(); }, removeGraph: function (a) { var b = this.graphs, c; for (c = b.length - 1; 0 <= c; c--)\r\n        b[c] == a && (b.splice(c, 1), a.destroy()); this.validateData(); }, handleValueAxisZoom: function () { }, processValueAxes: function () { var a = this.valueAxes, b; for (b = 0; b < a.length; b++) {\r\n        var c = a[b], c = d.processObject(c, d.ValueAxis, this.theme);\r\n        a[b] = c;\r\n        c.chart = this;\r\n        c.init();\r\n        this.listenTo(c, \"axisIntZoomed\", this.handleValueAxisZoom);\r\n        c.id || (c.id = \"valueAxisAuto\" + b + \"_\" + (new Date).getTime());\r\n        void 0 === c.usePrefixes && (c.usePrefixes = this.usePrefixes);\r\n    } }, processGuides: function () { var a = this.guides, b = this.categoryAxis; if (a)\r\n        for (var c = 0; c < a.length; c++) {\r\n            var e = a[c];\r\n            (void 0 !== e.category || void 0 !== e.date) && b && b.addGuide(e);\r\n            e.id || (e.id = \"guideAuto\" + c + \"_\" + (new Date).getTime());\r\n            var h = e.valueAxis;\r\n            h ? (d.isString(h) && (h = this.getValueAxisById(h)), h ? h.addGuide(e) : this.valueAxes[0].addGuide(e)) : isNaN(e.value) || this.valueAxes[0].addGuide(e);\r\n        } }, processGraphs: function () { var a = this.graphs, b; this.graphsById = {}; for (b = 0; b < a.length; b++) {\r\n        var c = a[b], c = d.processObject(c, d.AmGraph, this.theme);\r\n        a[b] = c;\r\n        this.chooseGraphColor(c, b);\r\n        c.chart = this;\r\n        c.init();\r\n        d.isString(c.valueAxis) && (c.valueAxis = this.getValueAxisById(c.valueAxis));\r\n        c.valueAxis || (c.valueAxis = this.valueAxes[0]);\r\n        c.id || (c.id = \"graphAuto\" + b + \"_\" + (new Date).getTime());\r\n        this.graphsById[c.id] = c;\r\n    } }, formatString: function (a, b, c) { var e = b.graph, h = e.valueAxis; h.duration && b.values.value && (h = d.formatDuration(b.values.value, h.duration, \"\", h.durationUnits, h.maxInterval, h.numberFormatter), a = a.split(\"[[value]]\").join(h)); a = d.massReplace(a, { \"[[title]]\": e.title, \"[[description]]\": b.description }); a = c ? d.fixNewLines(a) : d.fixBrakes(a); return a = d.cleanFromEmpty(a); }, getBalloonColor: function (a, b, c) { var e = a.lineColor, h = a.balloonColor; c && (h = e); c = a.fillColorsR; \"object\" == typeof c ? e = c[0] : void 0 !== c && (e = c); b.isNegative && (c = a.negativeLineColor, a = a.negativeFillColors, \"object\" == typeof a ? c = a[0] : void 0 !== a && (c = a), void 0 !== c && (e = c)); void 0 !== b.color && (e = b.color); void 0 !== b.lineColor && (e = b.lineColor); b = b.fillColors; void 0 !== b && (e = b, d.ifArray(b) && (e = b[0])); void 0 === h && (h = e); return h; }, getGraphById: function (a) { return d.getObjById(this.graphs, a); }, getValueAxisById: function (a) { return d.getObjById(this.valueAxes, a); }, processFields: function (a, b, c) { if (a.itemColors) {\r\n        var e = a.itemColors, h = b.index;\r\n        b.color = h < e.length ? e[h] : d.randomColor();\r\n    } e = \"lineColor color alpha fillColors description bullet customBullet bulletSize bulletConfig url labelColor dashLength pattern gap className columnIndex\".split(\" \"); for (h = 0; h < e.length; h++) {\r\n        var f = e[h], g = a[f + \"Field\"];\r\n        g && (g = c[g], d.isDefined(g) && (b[f] = g));\r\n    } b.dataContext = c; }, chooseGraphColor: function (a, b) { if (a.lineColor)\r\n        a.lineColorR = a.lineColor;\r\n    else {\r\n        var c;\r\n        c = this.colors.length > b ? this.colors[b] : a.lineColorR ? a.lineColorR : d.randomColor();\r\n        a.lineColorR = c;\r\n    } a.fillColorsR = a.fillColors ? a.fillColors : a.lineColorR; a.bulletBorderColorR = a.bulletBorderColor ? a.bulletBorderColor : a.useLineColorForBulletBorder ? a.lineColorR : a.bulletColor; a.bulletColorR = a.bulletColor ? a.bulletColor : a.lineColorR; if (c = this.patterns)\r\n        a.pattern = c[b]; }, handleLegendEvent: function (a) { var b = a.type; if (a = a.dataItem) {\r\n        var c = a.hidden, d = a.showBalloon;\r\n        switch (b) {\r\n            case \"clickMarker\":\r\n                this.textClickEnabled && (d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a));\r\n                break;\r\n            case \"clickLabel\":\r\n                d ? this.hideGraphsBalloon(a) : this.showGraphsBalloon(a);\r\n                break;\r\n            case \"rollOverItem\":\r\n                c || this.highlightGraph(a);\r\n                break;\r\n            case \"rollOutItem\":\r\n                c || this.unhighlightGraph();\r\n                break;\r\n            case \"hideItem\":\r\n                this.hideGraph(a);\r\n                break;\r\n            case \"showItem\": this.showGraph(a);\r\n        }\r\n    } }, highlightGraph: function (a) { var b = this.graphs; if (b) {\r\n        var c, d = .2;\r\n        this.legend && (d = this.legend.rollOverGraphAlpha);\r\n        if (1 != d)\r\n            for (c = 0; c < b.length; c++) {\r\n                var h = b[c];\r\n                h != a && h.changeOpacity(d);\r\n            }\r\n    } }, unhighlightGraph: function () { var a; this.legend && (a = this.legend.rollOverGraphAlpha); if (1 != a) {\r\n        a = this.graphs;\r\n        var b;\r\n        for (b = 0; b < a.length; b++)\r\n            a[b].changeOpacity(1);\r\n    } }, showGraph: function (a) { a.switchable && (a.hidden = !1, this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), this.chartCreated && this.initChart()); }, hideGraph: function (a) { a.switchable && (this.dataChanged = !0, \"xy\" != this.type && (this.marginsUpdated = !1), a.hidden = !0, this.chartCreated && this.initChart()); }, hideGraphsBalloon: function (a) { a.showBalloon = !1; this.updateLegend(); }, showGraphsBalloon: function (a) { a.showBalloon = !0; this.updateLegend(); }, updateLegend: function () { this.legend && this.legend.invalidateSize(); }, resetAnimation: function () { var a = this.graphs; if (a) {\r\n        var b;\r\n        for (b = 0; b < a.length; b++)\r\n            a[b].animationPlayed = !1;\r\n    } }, animateAgain: function () { this.resetAnimation(); this.validateNow(); } }); })();\r\n(function () { var d = window.AmCharts; d.TrendLine = d.Class({ construct: function (a) { this.cname = \"TrendLine\"; this.createEvents(\"click\", \"rollOver\", \"rollOut\"); this.isProtected = !1; this.dashLength = 0; this.lineColor = \"#00CC00\"; this.lineThickness = this.lineAlpha = 1; d.applyTheme(this, a, this.cname); }, draw: function () { var a = this; a.destroy(); var b = a.chart, c = b.container, e, h, f, g, k = a.categoryAxis, l = a.initialDate, m = a.initialCategory, p = a.finalDate, q = a.finalCategory, n = a.valueAxis, t = a.valueAxisX, r = a.initialXValue, w = a.finalXValue, z = a.initialValue, x = a.finalValue, u = n.recalculateToPercents, A = b.dataDateFormat; k && (l && (l = d.getDate(l, A, \"fff\"), a.initialDate = l, e = k.dateToCoordinate(l)), m && (e = k.categoryToCoordinate(m)), p && (p = d.getDate(p, A, \"fff\"), a.finalDate = p, h = k.dateToCoordinate(p)), q && (h = k.categoryToCoordinate(q))); t && !u && (isNaN(r) || (e = t.getCoordinate(r)), isNaN(w) || (h = t.getCoordinate(w))); n && !u && (isNaN(z) || (f = n.getCoordinate(z)), isNaN(x) || (g = n.getCoordinate(x))); if (!(isNaN(e) || isNaN(h) || isNaN(f) || isNaN(f))) {\r\n        b.rotate ? (k = [f, g], g = [e, h]) : (k = [e, h], g = [f, g]);\r\n        l = a.lineColor;\r\n        f = d.line(c, k, g, l, a.lineAlpha, a.lineThickness, a.dashLength);\r\n        e = k;\r\n        h = g;\r\n        q = k[1] - k[0];\r\n        n = g[1] - g[0];\r\n        0 === q && (q = .01);\r\n        0 === n && (n = .01);\r\n        m = q / Math.abs(q);\r\n        p = n / Math.abs(n);\r\n        n = 90 * Math.PI / 180 - Math.asin(q / (q * n / Math.abs(q * n) * Math.sqrt(Math.pow(q, 2) + Math.pow(n, 2))));\r\n        q = Math.abs(5 * Math.cos(n));\r\n        n = Math.abs(5 * Math.sin(n));\r\n        e.push(k[1] - m * n, k[0] - m * n);\r\n        h.push(g[1] + p * q, g[0] + p * q);\r\n        g = d.polygon(c, e, h, l, .005, 0);\r\n        c = c.set([g, f]);\r\n        c.translate(b.marginLeftReal, b.marginTopReal);\r\n        b.trendLinesSet.push(c);\r\n        d.setCN(b, f, \"trend-line\");\r\n        d.setCN(b, f, \"trend-line-\" + a.id);\r\n        a.line = f;\r\n        a.set = c;\r\n        if (f = a.initialImage)\r\n            f = d.processObject(f, d.Image, a.theme), f.chart = b, f.draw(), f.translate(e[0] + f.offsetX, h[0] + f.offsetY), c.push(f.set);\r\n        if (f = a.finalImage)\r\n            f = d.processObject(f, d.Image, a.theme), f.chart = b, f.draw(), f.translate(e[1] + f.offsetX, h[1] + f.offsetY), c.push(f.set);\r\n        g.mouseup(function () { a.handleLineClick(); }).mouseover(function () { a.handleLineOver(); }).mouseout(function () { a.handleLineOut(); });\r\n        g.touchend && g.touchend(function () { a.handleLineClick(); });\r\n        c.clipRect(0, 0, b.plotAreaWidth, b.plotAreaHeight);\r\n    } }, handleLineClick: function () { this.fire({ type: \"click\", trendLine: this, chart: this.chart }); }, handleLineOver: function () { var a = this.rollOverColor; void 0 !== a && this.line.attr({ stroke: a }); this.balloonText && (clearTimeout(this.chart.hoverInt), a = this.line.getBBox(), this.chart.showBalloon(this.balloonText, this.lineColor, !0, this.x + a.x + a.width / 2, this.y + a.y + a.height / 2)); this.fire({ type: \"rollOver\", trendLine: this, chart: this.chart }); }, handleLineOut: function () { this.line.attr({ stroke: this.lineColor }); this.balloonText && this.chart.hideBalloon(); this.fire({ type: \"rollOut\", trendLine: this, chart: this.chart }); }, destroy: function () { d.remove(this.set); } }); })();\r\n(function () { var d = window.AmCharts; d.Image = d.Class({ construct: function (a) { this.cname = \"Image\"; this.height = this.width = 20; this.rotation = this.offsetY = this.offsetX = 0; this.balloonColor = this.color = \"#000000\"; this.opacity = 1; d.applyTheme(this, a, this.cname); }, draw: function () { var a = this; a.set && a.set.remove(); var b = a.chart.container; a.set = b.set(); var c, d; a.url ? (c = b.image(a.url, 0, 0, a.width, a.height), d = 1) : a.svgPath && (c = b.path(a.svgPath), c.setAttr(\"fill\", a.color), c.setAttr(\"stroke\", a.outlineColor), b = c.getBBox(), d = Math.min(a.width / b.width, a.height / b.height)); c && (c.setAttr(\"opacity\", a.opacity), a.set.rotate(a.rotation), c.translate(-a.width / 2, -a.height / 2, d), a.balloonText && c.mouseover(function () { a.chart.showBalloon(a.balloonText, a.balloonColor, !0); }).mouseout(function () { a.chart.hideBalloon(); }).touchend(function () { a.chart.hideBalloon(); }).touchstart(function () { a.chart.showBalloon(a.balloonText, a.balloonColor, !0); }), a.set.push(c)); }, translate: function (a, b) { this.set && this.set.translate(a, b); } }); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.circle = function (a, b, c, e, h, f, g, k, l) { 0 >= b && (b = .001); if (void 0 == h || 0 === h)\r\n        h = .01; void 0 === f && (f = \"#000000\"); void 0 === g && (g = 0); e = { fill: c, stroke: f, \"fill-opacity\": e, \"stroke-width\": h, \"stroke-opacity\": g }; a = isNaN(l) ? a.circle(0, 0, b).attr(e) : a.ellipse(0, 0, b, l).attr(e); k && a.gradient(\"radialGradient\", [c, d.adjustLuminosity(c, -.6)]); return a; };\r\n    d.text = function (a, b, c, e, h, f, g, k) { f || (f = \"middle\"); \"right\" == f && (f = \"end\"); \"left\" == f && (f = \"start\"); isNaN(k) && (k = 1); void 0 !== b && (b = String(b), d.isIE && !d.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\"))); c = { fill: c, \"font-family\": e, \"font-size\": h + \"px\", opacity: k }; !0 === g && (c[\"font-weight\"] = \"bold\"); c[\"text-anchor\"] = f; return a.text(b, c); };\r\n    d.polygon = function (a, b, c, e, h, f, g, k, l, m, p) { isNaN(f) && (f = .01); isNaN(k) && (k = h); var q = e, n = !1; \"object\" == typeof q && 1 < q.length && (n = !0, q = q[0]); void 0 === g && (g = q); h = { fill: q, stroke: g, \"fill-opacity\": h, \"stroke-width\": f, \"stroke-opacity\": k }; void 0 !== p && 0 < p && (h[\"stroke-dasharray\"] = p); p = d.dx; f = d.dy; a.handDrawn && (c = d.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]); g = Math.round; m && (b[t] = d.roundTo(b[t], 5), c[t] = d.roundTo(c[t], 5), g = Number); k = \"M\" + (g(b[0]) + p) + \",\" + (g(c[0]) + f); for (var t = 1; t < b.length; t++)\r\n        m && (b[t] = d.roundTo(b[t], 5), c[t] = d.roundTo(c[t], 5)), k += \" L\" + (g(b[t]) + p) + \",\" + (g(c[t]) + f); a = a.path(k + \" Z\").attr(h); n && a.gradient(\"linearGradient\", e, l); return a; };\r\n    d.rect = function (a, b, c, e, h, f, g, k, l, m, p) { if (isNaN(b) || isNaN(c))\r\n        return a.set(); isNaN(f) && (f = 0); void 0 === l && (l = 0); void 0 === m && (m = 270); isNaN(h) && (h = 0); var q = e, n = !1; \"object\" == typeof q && (q = q[0], n = !0); void 0 === g && (g = q); void 0 === k && (k = h); b = Math.round(b); c = Math.round(c); var t = 0, r = 0; 0 > b && (b = Math.abs(b), t = -b); 0 > c && (c = Math.abs(c), r = -c); t += d.dx; r += d.dy; h = { fill: q, stroke: g, \"fill-opacity\": h, \"stroke-opacity\": k }; void 0 !== p && 0 < p && (h[\"stroke-dasharray\"] = p); a = a.rect(t, r, b, c, l, f).attr(h); n && a.gradient(\"linearGradient\", e, m); return a; };\r\n    d.bullet = function (a, b, c, e, h, f, g, k, l, m, p, q, n) {\r\n        var t;\r\n        \"circle\" == b && (b = \"round\");\r\n        switch (b) {\r\n            case \"round\":\r\n                t = d.circle(a, c / 2, e, h, f, g, k);\r\n                break;\r\n            case \"square\":\r\n                t = d.polygon(a, [-c /\r\n                        2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180, void 0, n);\r\n                break;\r\n            case \"rectangle\":\r\n                t = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], e, h, f, g, k, m - 180, void 0, n);\r\n                break;\r\n            case \"diamond\":\r\n                t = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], e, h, f, g, k);\r\n                break;\r\n            case \"triangleUp\":\r\n                t = d.triangle(a, c, 0, e, h, f, g, k);\r\n                break;\r\n            case \"triangleDown\":\r\n                t = d.triangle(a, c, 180, e, h, f, g, k);\r\n                break;\r\n            case \"triangleLeft\":\r\n                t = d.triangle(a, c, 270, e, h, f, g, k);\r\n                break;\r\n            case \"triangleRight\":\r\n                t = d.triangle(a, c, 90, e, h, f, g, k);\r\n                break;\r\n            case \"bubble\":\r\n                t = d.circle(a, c / 2, e, h, f, g, k, !0);\r\n                break;\r\n            case \"line\":\r\n                t = d.line(a, [-c / 2, c / 2], [0, 0], e, h, f, g, k);\r\n                break;\r\n            case \"yError\":\r\n                t = a.set();\r\n                t.push(d.line(a, [0, 0], [-c / 2, c / 2], e, h, f));\r\n                t.push(d.line(a, [-l, l], [-c / 2, -c / 2], e, h, f));\r\n                t.push(d.line(a, [-l, l], [c / 2, c / 2], e, h, f));\r\n                break;\r\n            case \"xError\": t = a.set(), t.push(d.line(a, [-c / 2, c / 2], [0, 0], e, h, f)), t.push(d.line(a, [-c / 2, -c / 2], [-l, l], e, h, f)), t.push(d.line(a, [c / 2, c / 2], [-l, l], e, h, f));\r\n        }\r\n        t && t.pattern(p, NaN, q);\r\n        return t;\r\n    };\r\n    d.triangle = function (a, b, c, d, h, f, g, k) { if (void 0 === f || 0 === f)\r\n        f = 1; void 0 === g && (g = \"#000\"); void 0 === k && (k = 0); d = { fill: d, stroke: g, \"fill-opacity\": h, \"stroke-width\": f, \"stroke-opacity\": k }; b /= 2; var l; 0 === c && (l = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\"); 180 == c && (l = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\"); 90 == c && (l = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\"); 270 == c && (l = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\"); return a.path(l).attr(d); };\r\n    d.line = function (a, b, c, e, h, f, g, k, l, m, p) { if (a.handDrawn && !p)\r\n        return d.handDrawnLine(a, b, c, e, h, f, g, k, l, m, p); f = { fill: \"none\", \"stroke-width\": f }; void 0 !== g && 0 < g && (f[\"stroke-dasharray\"] = g); isNaN(h) || (f[\"stroke-opacity\"] = h); e && (f.stroke = e); e = Math.round; m && (e = Number, b[0] = d.roundTo(b[0], 5), c[0] = d.roundTo(c[0], 5)); m = d.dx; h = d.dy; g = \"M\" + (e(b[0]) + m) + \",\" + (e(c[0]) + h); for (k = 1; k < b.length; k++)\r\n        b[k] = d.roundTo(b[k], 5), c[k] = d.roundTo(c[k], 5), g += \" L\" + (e(b[k]) + m) + \",\" + (e(c[k]) + h); if (d.VML)\r\n        return a.path(g, void 0, !0).attr(f); l && (g += \" M0,0 L0,0\"); return a.path(g).attr(f); };\r\n    d.makeHD = function (a, b, c) { for (var d = [], h = [], f = 1; f < a.length; f++)\r\n        for (var g = Number(a[f - 1]), k = Number(b[f - 1]), l = Number(a[f]), m = Number(b[f]), p = Math.round(Math.sqrt(Math.pow(l - g, 2) + Math.pow(m - k, 2)) / 50) + 1, l = (l - g) / p, m = (m - k) / p, q = 0; q <= p; q++) {\r\n            var n = k + q * m + Math.random() * c;\r\n            d.push(g + q * l + Math.random() * c);\r\n            h.push(n);\r\n        } return [d, h]; };\r\n    d.handDrawnLine = function (a, b, c, e, h, f, g, k, l, m) { var p, q = a.set(); for (p = 1; p < b.length; p++)\r\n        for (var n = [b[p - 1], b[p]], t = [c[p - 1], c[p]], t = d.makeHD(n, t, a.handDrawScatter), n = t[0], t = t[1], r = 1; r < n.length; r++)\r\n            q.push(d.line(a, [n[r - 1], n[r]], [t[r - 1], t[r]], e, h, f + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, g, k, l, m, !0)); return q; };\r\n    d.doNothing =\r\n        function (a) { return a; };\r\n    d.drop = function (a, b, c, d, h, f, g, k) { var l = 1 / 180 * Math.PI, m = c - 20, p = Math.sin(m * l) * b, q = Math.cos(m * l) * b, n = Math.sin((m + 40) * l) * b, t = Math.cos((m + 40) * l) * b, r = .8 * b, w = -b / 3, z = b / 3; 0 === c && (w = -w, z = 0); 180 == c && (z = 0); 90 == c && (w = 0); 270 == c && (w = 0, z = -z); c = { fill: d, stroke: g, \"stroke-width\": f, \"stroke-opacity\": k, \"fill-opacity\": h }; b = \"M\" + p + \",\" + q + \" A\" + b + \",\" + b + \",0,1,1,\" + n + \",\" + t + (\" A\" + r + \",\" + r + \",0,0,0,\" + (Math.sin((m + 20) * l) * b + z) + \",\" + (Math.cos((m + 20) * l) * b + w)); b += \" A\" + r + \",\" + r + \",0,0,0,\" + p + \",\" + q; return a.path(b, void 0, void 0, \"1000,1000\").attr(c); };\r\n    d.wedge = function (a, b, c, e, h, f, g, k, l, m, p, q, n, t) {\r\n        var r = Math.round;\r\n        f = r(f);\r\n        g = r(g);\r\n        k = r(k);\r\n        var w = r(g / f * k), z = d.VML, x = 359.5 + f / 100;\r\n        359.94 < x && (x = 359.94);\r\n        h >= x && (h = x);\r\n        var u = 1 / 180 * Math.PI, x = b + Math.sin(e * u) * k, A = c - Math.cos(e * u) * w, y = b + Math.sin(e * u) * f, B = c - Math.cos(e * u) * g, D = b + Math.sin((e + h) * u) * f, C = c - Math.cos((e + h) * u) * g, I = b + Math.sin((e + h) * u) * k, u = c - Math.cos((e + h) * u) * w, H = { fill: d.adjustLuminosity(m.fill, -.2), \"stroke-opacity\": 0, \"fill-opacity\": m[\"fill-opacity\"] }, Q = 0;\r\n        180 < Math.abs(h) && (Q = 1);\r\n        e = a.set();\r\n        var M;\r\n        z && (x = r(10 * x), y = r(10 * y), D = r(10 * D), I = r(10 * I), A = r(10 * A), B = r(10 * B), C = r(10 * C), u = r(10 * u), b = r(10 * b), l = r(10 * l), c = r(10 * c), f *= 10, g *= 10, k *= 10, w *= 10, 1 > Math.abs(h) && 1 >= Math.abs(D - y) && 1 >= Math.abs(C - B) && (M = !0));\r\n        h = \"\";\r\n        var P;\r\n        q && (H[\"fill-opacity\"] = 0, H[\"stroke-opacity\"] = m[\"stroke-opacity\"] / 2, H.stroke = m.stroke);\r\n        if (0 < l) {\r\n            P = \" M\" + x + \",\" + (A + l) + \" L\" + y + \",\" + (B + l);\r\n            z ? (M || (P += \" A\" + (b - f) + \",\" + (l + c - g) + \",\" + (b + f) + \",\" + (l + c + g) + \",\" + y + \",\" + (B + l) + \",\" + D + \",\" + (C + l)), P += \" L\" + I + \",\" + (u + l), 0 < k && (M || (P += \" B\" + (b - k) + \",\" + (l + c - w) + \",\" + (b + k) + \",\" +\r\n                (l + c + w) + \",\" + I + \",\" + (l + u) + \",\" + x + \",\" + (l + A)))) : (P += \" A\" + f + \",\" + g + \",0,\" + Q + \",1,\" + D + \",\" + (C + l) + \" L\" + I + \",\" + (u + l), 0 < k && (P += \" A\" + k + \",\" + w + \",0,\" + Q + \",0,\" + x + \",\" + (A + l)));\r\n            P += \" Z\";\r\n            var ia = l;\r\n            z && (ia /= 10);\r\n            for (var J = 0; J < ia; J += 10) {\r\n                var aa = a.path(P, void 0, void 0, \"1000,1000\").attr(H);\r\n                e.push(aa);\r\n                aa.translate(0, -J);\r\n            }\r\n            P = a.path(\" M\" + x + \",\" + A + \" L\" + x + \",\" + (A + l) + \" L\" + y + \",\" + (B + l) + \" L\" + y + \",\" + B + \" L\" + x + \",\" + A + \" Z\", void 0, void 0, \"1000,1000\").attr(H);\r\n            l = a.path(\" M\" + D + \",\" + C + \" L\" + D + \",\" + (C + l) + \" L\" + I + \",\" + (u + l) + \" L\" + I + \",\" + u + \" L\" + D + \",\" + C + \" Z\", void 0, void 0, \"1000,1000\").attr(H);\r\n            e.push(P);\r\n            e.push(l);\r\n        }\r\n        z ? (M || (h = \" A\" + r(b - f) + \",\" + r(c - g) + \",\" + r(b + f) + \",\" + r(c + g) + \",\" + r(y) + \",\" + r(B) + \",\" + r(D) + \",\" + r(C)), g = \" M\" + r(x) + \",\" + r(A) + \" L\" + r(y) + \",\" + r(B) + h + \" L\" + r(I) + \",\" + r(u)) : g = \" M\" + x + \",\" + A + \" L\" + y + \",\" + B + (\" A\" + f + \",\" + g + \",0,\" + Q + \",1,\" + D + \",\" + C) + \" L\" + I + \",\" + u;\r\n        0 < k && (z ? M || (g += \" B\" + (b - k) + \",\" + (c - w) + \",\" + (b + k) + \",\" + (c + w) + \",\" + I + \",\" + u + \",\" + x + \",\" + A) : g += \" A\" + k + \",\" + w + \",0,\" + Q + \",0,\" + x + \",\" + A);\r\n        a.handDrawn && (k = d.line(a, [x, y], [A, B], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m[\"stroke-opacity\"]), e.push(k));\r\n        a = a.path(g + \" Z\", void 0, void 0, \"1000,1000\").attr(m);\r\n        if (p) {\r\n            k = [];\r\n            for (w = 0; w < p.length; w++)\r\n                k.push(d.adjustLuminosity(m.fill, p[w]));\r\n            \"radial\" != t || d.isModern || (k = []);\r\n            0 < k.length && a.gradient(t + \"Gradient\", k);\r\n        }\r\n        d.isModern && \"radial\" == t && a.grad && (a.grad.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), a.grad.setAttribute(\"r\", f), a.grad.setAttribute(\"cx\", b), a.grad.setAttribute(\"cy\", c));\r\n        a.pattern(q, NaN, n);\r\n        e.wedge = a;\r\n        e.push(a);\r\n        return e;\r\n    };\r\n    d.rgb2hex = function (a) { return (a = a.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)) && 4 === a.length ? \"#\" + (\"0\" + parseInt(a[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[3], 10).toString(16)).slice(-2) : \"\"; };\r\n    d.adjustLuminosity = function (a, b) {\r\n        a && -1 != a.indexOf(\"rgb\") && (a = d.rgb2hex(a));\r\n        a = String(a).replace(/[^0-9a-f]/gi, \"\");\r\n        6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\r\n        b = b || 0;\r\n        var c = \"#\", e, h;\r\n        for (h = 0; 3 > h; h++)\r\n            e = parseInt(a.substr(2 * h, 2), 16), e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += (\"00\" +\r\n                e).substr(e.length);\r\n        return c;\r\n    };\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.Bezier = d.Class({ construct: function (a, b, c, e, h, f, g, k, l, m, p) { var q = a.chart, n = d.bezierX, t = d.bezierY; isNaN(q.bezierX) || (n = q.bezierX); isNaN(q.bezierY) || (t = q.bezierY); isNaN(n) && (q.rotate ? (n = 20, t = 4) : (t = 20, n = 4)); var r, w; \"object\" == typeof g && 1 < g.length && (w = !0, r = g, g = g[0]); \"object\" == typeof k && (k = k[0]); 0 === k && (g = \"none\"); f = { fill: g, \"fill-opacity\": k, \"stroke-width\": f }; void 0 !== l && 0 < l && (f[\"stroke-dasharray\"] = l); isNaN(h) || (f[\"stroke-opacity\"] = h); e && (f.stroke = e); e = \"M\" + Math.round(b[0]) + \",\" + Math.round(c[0]) + \" \"; h = []; for (l = 0; l < b.length; l++)\r\n            isNaN(b[l]) || isNaN(c[l]) ? (e += this.drawSegment(h, n, t), l < b.length - 1 && (e += \"L\" + b[l + 1] + \",\" + c[l + 1] + \" \"), h = []) : h.push({ x: Number(b[l]), y: Number(c[l]) }); e += this.drawSegment(h, n, t); m ? e += m : d.VML || (e += \"M0,0 L0,0\"); this.path = a.path(e).attr(f); this.node = this.path.node; w && this.path.gradient(\"linearGradient\", r, p); }, drawSegment: function (a, b, c) {\r\n            var d = \"\";\r\n            if (2 < a.length)\r\n                for (var h = 0; h < a.length - 1; h++) {\r\n                    var f = [], g = a[h - 1], k = a[h], l = a[h + 1], m = a[h + 2];\r\n                    0 === h ? (f.push({ x: k.x, y: k.y }), f.push({ x: k.x, y: k.y }), f.push({ x: l.x, y: l.y }), f.push({ x: m.x, y: m.y })) : h >= a.length - 2 ? (f.push({ x: g.x, y: g.y }), f.push({ x: k.x, y: k.y }), f.push({ x: l.x, y: l.y }), f.push({ x: l.x, y: l.y })) : (f.push({ x: g.x, y: g.y }), f.push({ x: k.x, y: k.y }), f.push({ x: l.x, y: l.y }), f.push({ x: m.x, y: m.y }));\r\n                    g = [];\r\n                    k = Math.round;\r\n                    g.push({ x: k(f[1].x), y: k(f[1].y) });\r\n                    g.push({ x: k((-f[0].x + b * f[1].x + f[2].x) / b), y: k((-f[0].y + c * f[1].y + f[2].y) / c) });\r\n                    g.push({ x: k((f[1].x + b * f[2].x - f[3].x) / b), y: k((f[1].y + c * f[2].y - f[3].y) / c) });\r\n                    g.push({ x: k(f[2].x), y: k(f[2].y) });\r\n                    d += \"C\" +\r\n                        g[1].x + \",\" + g[1].y + \",\" + g[2].x + \",\" + g[2].y + \",\" + g[3].x + \",\" + g[3].y + \" \";\r\n                }\r\n            else\r\n                1 < a.length && (d += \"L\" + a[1].x + \",\" + a[1].y);\r\n            return d;\r\n        } });\r\n})();\r\n(function () { var d = window.AmCharts; d.AmDraw = d.Class({ construct: function (a, b, c, e) { d.SVG_NS = \"http://www.w3.org/2000/svg\"; d.SVG_XLINK = \"http://www.w3.org/1999/xlink\"; d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, \"svg\").createSVGRect; 1 > b && (b = 10); 1 > c && (c = 10); this.div = a; this.width = b; this.height = c; this.rBin = document.createElement(\"div\"); d.hasSVG ? (d.SVG = !0, b = this.createSvgElement(\"svg\"), a.appendChild(b), this.container = b, this.addDefs(e), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer && (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new d.VMLRenderer(this, e), this.R.disableSelection(a)); }, createSvgElement: function (a) { return document.createElementNS(d.SVG_NS, a); }, circle: function (a, b, c, e) { var h = new d.AmDObject(\"circle\", this); h.attr({ r: c, cx: a, cy: b }); this.addToContainer(h.node, e); return h; }, ellipse: function (a, b, c, e, h) { var f = new d.AmDObject(\"ellipse\", this); f.attr({ rx: c, ry: e, cx: a, cy: b }); this.addToContainer(f.node, h); return f; }, setSize: function (a, b) { 0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\"); }, rect: function (a, b, c, e, h, f, g) { var k = new d.AmDObject(\"rect\", this); d.VML && (h = Math.round(100 * h / Math.min(c, e)), c += 2 * f, e += 2 * f, k.bw = f, k.node.style.marginLeft = -f, k.node.style.marginTop = -f); 1 > c && (c = 1); 1 > e && (e = 1); k.attr({ x: a, y: b, width: c, height: e, rx: h, ry: h, \"stroke-width\": f }); this.addToContainer(k.node, g); return k; }, image: function (a, b, c, e, h, f) { var g = new d.AmDObject(\"image\", this); g.attr({ x: b, y: c, width: e, height: h }); this.R.path(g, a); this.addToContainer(g.node, f); return g; }, addToContainer: function (a, b) { b || (b = this.container); b.appendChild(a); }, text: function (a, b, c) { return this.R.text(a, b, c); }, path: function (a, b, c, e) { var h = new d.AmDObject(\"path\", this); e || (e = \"100,100\"); h.attr({ cs: e }); c ? h.attr({ dd: a }) : h.attr({ d: a }); this.addToContainer(h.node, b); return h; }, set: function (a) { return this.R.set(a); }, remove: function (a) { if (a) {\r\n        var b = this.rBin;\r\n        b.appendChild(a);\r\n        b.innerHTML = \"\";\r\n    } }, renderFix: function () { var a = this.container, b = a.style; b.top = \"0px\"; b.left = \"0px\"; try {\r\n        var c = a.getBoundingClientRect(), d = c.left - Math.round(c.left), h = c.top - Math.round(c.top);\r\n        d && (b.left = d + \"px\");\r\n        h && (b.top = h + \"px\");\r\n    }\r\n    catch (f) { } }, update: function () { this.R.update(); }, addDefs: function (a) { if (d.hasSVG) {\r\n        var b = this.createSvgElement(\"desc\"), c = this.container;\r\n        c.setAttribute(\"version\", \"1.1\");\r\n        c.style.position = \"absolute\";\r\n        this.setSize(this.width, this.height);\r\n        if (a.accessibleTitle) {\r\n            var e = this.createSvgElement(\"text\");\r\n            c.appendChild(e);\r\n            e.innerHTML = a.accessibleTitle;\r\n            e.style.opacity = 0;\r\n        }\r\n        d.rtl && (c.setAttribute(\"direction\", \"rtl\"), c.style.left = \"auto\", c.style.right = \"0px\");\r\n        a && (a.addCodeCredits && b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + a.version)), c.appendChild(b), a.defs && (b = this.createSvgElement(\"defs\"), c.appendChild(b), d.parseDefs(a.defs, b), this.defs = b));\r\n    } } }); })();\r\n(function () { var d = window.AmCharts; d.AmDObject = d.Class({ construct: function (a, b) { this.D = b; this.R = b.R; this.node = this.R.create(this, a); this.y = this.x = 0; this.scale = 1; }, attr: function (a) { this.R.attr(this, a); return this; }, getAttr: function (a) { return this.node.getAttribute(a); }, setAttr: function (a, b) { this.R.setAttr(this, a, b); return this; }, clipRect: function (a, b, c, d) { this.R.clipRect(this, a, b, c, d); }, translate: function (a, b, c, d) { d || (a = Math.round(a), b = Math.round(b)); this.R.move(this, a, b, c); this.x = a; this.y = b; this.scale = c; this.angle && this.rotate(this.angle); }, rotate: function (a, b) { this.R.rotate(this, a, b); this.angle = a; }, animate: function (a, b, c) { for (var e in a)\r\n        if (a.hasOwnProperty(e)) {\r\n            var h = e, f = a[e];\r\n            c = d.getEffect(c);\r\n            this.R.animate(this, h, f, b, c);\r\n        } }, push: function (a) { if (a) {\r\n        var b = this.node;\r\n        b.appendChild(a.node);\r\n        var c = a.clipPath;\r\n        c && b.appendChild(c);\r\n        (a = a.grad) && b.appendChild(a);\r\n    } }, text: function (a) { this.R.setText(this, a); }, remove: function () { this.stop(); this.R.remove(this); }, clear: function () { var a = this.node; if (a.hasChildNodes())\r\n        for (; 1 <= a.childNodes.length;)\r\n            a.removeChild(a.firstChild); }, hide: function () { this.setAttr(\"visibility\", \"hidden\"); }, show: function () { this.setAttr(\"visibility\", \"visible\"); }, getBBox: function () { return this.R.getBBox(this); }, toFront: function () { var a = this.node; if (a) {\r\n        this.prevNextNode = a.nextSibling;\r\n        var b = a.parentNode;\r\n        b && b.appendChild(a);\r\n    } }, toPrevious: function () { var a = this.node; a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null); }, toBack: function () { var a = this.node; if (a) {\r\n        this.prevNextNode = a.nextSibling;\r\n        var b = a.parentNode;\r\n        if (b) {\r\n            var c = b.firstChild;\r\n            c && b.insertBefore(a, c);\r\n        }\r\n    } }, mouseover: function (a) { this.R.addListener(this, \"mouseover\", a); return this; }, mouseout: function (a) { this.R.addListener(this, \"mouseout\", a); return this; }, click: function (a) { this.R.addListener(this, \"click\", a); return this; }, dblclick: function (a) { this.R.addListener(this, \"dblclick\", a); return this; }, mousedown: function (a) { this.R.addListener(this, \"mousedown\", a); return this; }, mouseup: function (a) { this.R.addListener(this, \"mouseup\", a); return this; }, touchmove: function (a) { this.R.addListener(this, \"touchmove\", a); return this; }, touchstart: function (a) { this.R.addListener(this, \"touchstart\", a); return this; }, touchend: function (a) { this.R.addListener(this, \"touchend\", a); return this; }, keyup: function (a) { this.R.addListener(this, \"keyup\", a); return this; }, focus: function (a) { this.R.addListener(this, \"focus\", a); return this; }, blur: function (a) { this.R.addListener(this, \"blur\", a); return this; }, contextmenu: function (a) { this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a); return this; }, stop: function () { d.removeFromArray(this.R.animations, this.an_translate); d.removeFromArray(this.R.animations, this.an_y); d.removeFromArray(this.R.animations, this.an_x); }, length: function () { return this.node.childNodes.length; }, gradient: function (a, b, c) { this.R.gradient(this, a, b, c); }, pattern: function (a, b, c) { a && this.R.pattern(this, a, b, c); } }); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.VMLRenderer = d.Class({ construct: function (a, b) { this.chart = b; this.D = a; this.cNames = { circle: \"oval\", ellipse: \"oval\", rect: \"roundrect\", path: \"shape\" }; this.styleMap = { x: \"left\", y: \"top\", width: \"width\", height: \"height\", \"font-family\": \"fontFamily\", \"font-size\": \"fontSize\", visibility: \"visibility\" }; }, create: function (a, b) { var c; if (\"group\" == b)\r\n            c = document.createElement(\"div\"), a.type = \"div\";\r\n        else if (\"text\" == b)\r\n            c = document.createElement(\"div\"), a.type = \"text\";\r\n        else if (\"image\" == b)\r\n            c = document.createElement(\"img\"), a.type = \"image\";\r\n        else {\r\n            a.type = \"shape\";\r\n            a.shapeType = this.cNames[b];\r\n            c = document.createElement(\"amvml:\" + this.cNames[b]);\r\n            var d = document.createElement(\"amvml:stroke\");\r\n            c.appendChild(d);\r\n            a.stroke = d;\r\n            var h = document.createElement(\"amvml:fill\");\r\n            c.appendChild(h);\r\n            a.fill = h;\r\n            h.className = \"amvml\";\r\n            d.className = \"amvml\";\r\n            c.className = \"amvml\";\r\n        } c.style.position = \"absolute\"; c.style.top = 0; c.style.left = 0; return c; }, path: function (a, b) { a.node.setAttribute(\"src\", b); }, setAttr: function (a, b, c) {\r\n            if (void 0 !== c) {\r\n                var e;\r\n                8 === document.documentMode && (e = !0);\r\n                var h = a.node, f = a.type, g = h.style;\r\n                \"r\" == b && (g.width = 2 * c, g.height = 2 * c);\r\n                \"oval\" == a.shapeType && (\"rx\" == b && (g.width = 2 * c), \"ry\" == b && (g.height = 2 * c));\r\n                \"roundrect\" == a.shapeType && (\"width\" != b && \"height\" != b || --c);\r\n                \"cursor\" == b && (g.cursor = c);\r\n                \"cx\" == b && (g.left = c - d.removePx(g.width) / 2);\r\n                \"cy\" == b && (g.top = c - d.removePx(g.height) / 2);\r\n                var k = this.styleMap[b];\r\n                \"width\" == k && 0 > c && (c = 0);\r\n                void 0 !== k && (g[k] = c);\r\n                \"text\" == f && (\"text-anchor\" == b && (a.anchor = c, k = h.clientWidth, \"end\" == c && (g.marginLeft = -k + \"px\"), \"middle\" == c && (g.marginLeft = -(k / 2) +\r\n                    \"px\", g.textAlign = \"center\"), \"start\" == c && (g.marginLeft = \"0px\")), \"fill\" == b && (g.color = c), \"font-weight\" == b && (g.fontWeight = c));\r\n                if (g = a.children)\r\n                    for (k = 0; k < g.length; k++)\r\n                        g[k].setAttr(b, c);\r\n                if (\"shape\" == f) {\r\n                    \"cs\" == b && (h.style.width = \"100px\", h.style.height = \"100px\", h.setAttribute(\"coordsize\", c));\r\n                    \"d\" == b && h.setAttribute(\"path\", this.svgPathToVml(c));\r\n                    \"dd\" == b && h.setAttribute(\"path\", c);\r\n                    f = a.stroke;\r\n                    a = a.fill;\r\n                    \"stroke\" == b && (e ? f.color = c : f.setAttribute(\"color\", c));\r\n                    \"stroke-width\" == b && (e ? f.weight = c : f.setAttribute(\"weight\", c));\r\n                    \"stroke-opacity\" == b && (e ? f.opacity = c : f.setAttribute(\"opacity\", c));\r\n                    \"stroke-dasharray\" == b && (g = \"solid\", 0 < c && 3 > c && (g = \"dot\"), 3 <= c && 6 >= c && (g = \"dash\"), 6 < c && (g = \"longdash\"), e ? f.dashstyle = g : f.setAttribute(\"dashstyle\", g));\r\n                    if (\"fill-opacity\" == b || \"opacity\" == b)\r\n                        0 === c ? e ? a.on = !1 : a.setAttribute(\"on\", !1) : e ? a.opacity = c : a.setAttribute(\"opacity\", c);\r\n                    \"fill\" == b && (e ? a.color = c : a.setAttribute(\"color\", c));\r\n                    \"rx\" == b && (e ? h.arcSize = c + \"%\" : h.setAttribute(\"arcsize\", c + \"%\"));\r\n                }\r\n            }\r\n        }, attr: function (a, b) { for (var c in b)\r\n            b.hasOwnProperty(c) && this.setAttr(a, c, b[c]); }, text: function (a, b, c) { var e = new d.AmDObject(\"text\", this.D), h = e.node; h.style.whiteSpace = \"pre\"; h.innerHTML = a; this.D.addToContainer(h, c); this.attr(e, b); return e; }, getBBox: function (a) { return this.getBox(a.node); }, getBox: function (a) { var b = a.offsetLeft, c = a.offsetTop, d = a.offsetWidth, h = a.offsetHeight, f; if (a.hasChildNodes()) {\r\n            var g, k, l;\r\n            for (l = 0; l < a.childNodes.length; l++) {\r\n                f = this.getBox(a.childNodes[l]);\r\n                var m = f.x;\r\n                isNaN(m) || (isNaN(g) ? g = m : m < g && (g = m));\r\n                var p = f.y;\r\n                isNaN(p) || (isNaN(k) ? k = p : p < k && (k = p));\r\n                m = f.width + m;\r\n                isNaN(m) || (d = Math.max(d, m));\r\n                f = f.height + p;\r\n                isNaN(f) || (h = Math.max(h, f));\r\n            }\r\n            0 > g && (b += g);\r\n            0 > k && (c += k);\r\n        } return { x: b, y: c, width: d, height: h }; }, setText: function (a, b) { var c = a.node; c && (c.innerHTML = b); this.setAttr(a, \"text-anchor\", a.anchor); }, addListener: function (a, b, c) { a.node[\"on\" + b] = c; }, move: function (a, b, c) {\r\n            var e = a.node, h = e.style;\r\n            \"text\" == a.type && (c -= d.removePx(h.fontSize) / 2 - 1);\r\n            \"oval\" == a.shapeType && (b -= d.removePx(h.width) / 2, c -= d.removePx(h.height) / 2);\r\n            a = a.bw;\r\n            isNaN(a) || (b -= a, c -= a);\r\n            isNaN(b) || isNaN(c) || (e.style.left = b + \"px\", e.style.top =\r\n                c + \"px\");\r\n        }, svgPathToVml: function (a) {\r\n            var b = a.split(\" \");\r\n            a = \"\";\r\n            var c, d = Math.round, h;\r\n            for (h = 0; h < b.length; h++) {\r\n                var f = b[h], g = f.substring(0, 1), f = f.substring(1), k = f.split(\",\"), l = d(k[0]) + \",\" + d(k[1]);\r\n                \"M\" == g && (a += \" m \" + l);\r\n                \"L\" == g && (a += \" l \" + l);\r\n                \"Z\" == g && (a += \" x e\");\r\n                if (\"Q\" == g) {\r\n                    var m = c.length, p = c[m - 1], q = k[0], n = k[1], l = k[2], t = k[3];\r\n                    c = d(c[m - 2] / 3 + 2 / 3 * q);\r\n                    p = d(p / 3 + 2 / 3 * n);\r\n                    q = d(2 / 3 * q + l / 3);\r\n                    n = d(2 / 3 * n + t / 3);\r\n                    a += \" c \" + c + \",\" + p + \",\" + q + \",\" + n + \",\" + l + \",\" + t;\r\n                }\r\n                \"C\" == g && (a += \" c \" + k[0] + \",\" + k[1] + \",\" + k[2] + \",\" + k[3] + \",\" + k[4] + \",\" + k[5]);\r\n                \"A\" == g && (a += \" wa \" +\r\n                    f);\r\n                \"B\" == g && (a += \" at \" + f);\r\n                c = k;\r\n            }\r\n            return a;\r\n        }, animate: function (a, b, c, d, h) { var f = a.node, g = this.chart; a.animationFinished = !1; if (\"translate\" == b) {\r\n            b = c.split(\",\");\r\n            c = b[1];\r\n            var k = f.offsetTop;\r\n            g.animate(a, \"left\", f.offsetLeft, b[0], d, h, \"px\");\r\n            g.animate(a, \"top\", k, c, d, h, \"px\");\r\n        } }, clipRect: function (a, b, c, d, h) { a = a.node; 0 === b && 0 === c ? (a.style.width = d + \"px\", a.style.height = h + \"px\", a.style.overflow = \"hidden\") : a.style.clip = \"rect(\" + c + \"px \" + (b + d) + \"px \" + (c + h) + \"px \" + b + \"px)\"; }, rotate: function (a, b, c) { if (0 !== Number(b)) {\r\n            var e = a.node;\r\n            a = e.style;\r\n            c || (c = this.getBGColor(e.parentNode));\r\n            a.backgroundColor = c;\r\n            a.paddingLeft = 1;\r\n            c = b * Math.PI / 180;\r\n            var h = Math.cos(c), f = Math.sin(c), g = d.removePx(a.left), k = d.removePx(a.top), l = e.offsetWidth, e = e.offsetHeight;\r\n            b /= Math.abs(b);\r\n            a.left = g + l / 2 - l / 2 * Math.cos(c) - b * e / 2 * Math.sin(c) + 3;\r\n            a.top = k - b * l / 2 * Math.sin(c) + b * e / 2 * Math.sin(c);\r\n            a.cssText = a.cssText + \"; filter:progid:DXImageTransform.Microsoft.Matrix(M11='\" + h + \"', M12='\" + -f + \"', M21='\" + f + \"', M22='\" + h + \"', sizingmethod='auto expand');\";\r\n        } }, getBGColor: function (a) { var b = \"#FFFFFF\"; if (a.style) {\r\n            var c = a.style.backgroundColor;\r\n            \"\" !== c ? b = c : a.parentNode && (b = this.getBGColor(a.parentNode));\r\n        } return b; }, set: function (a) { var b = new d.AmDObject(\"group\", this.D); this.D.container.appendChild(b.node); if (a) {\r\n            var c;\r\n            for (c = 0; c < a.length; c++)\r\n                b.push(a[c]);\r\n        } return b; }, gradient: function (a, b, c, d) { var h = \"\"; \"radialGradient\" == b && (b = \"gradientradial\", c.reverse()); \"linearGradient\" == b && (b = \"gradient\"); var f; for (f = 0; f < c.length; f++)\r\n            h += Math.round(100 * f / (c.length - 1)) + \"% \" + c[f], f < c.length - 1 && (h += \",\"); a = a.fill; 90 == d ? d = 0 : 270 == d ? d = 180 : 180 == d ? d = 90 : 0 === d && (d = 270); 8 === document.documentMode ? (a.type = b, a.angle = d) : (a.setAttribute(\"type\", b), a.setAttribute(\"angle\", d)); h && (a.colors.value = h); }, remove: function (a) { a.clipPath && this.D.remove(a.clipPath); this.D.remove(a.node); }, disableSelection: function (a) { a.onselectstart = function () { return !1; }; a.style.cursor = \"default\"; }, pattern: function (a, b, c, e) { c = a.node; a = a.fill; var h = \"none\"; b.color && (h = b.color); c.fillColor = h; b = b.url; d.isAbsolute(b) || (b = e + b); 8 === document.documentMode ? (a.type = \"tile\", a.src = b) : (a.setAttribute(\"type\", \"tile\"), a.setAttribute(\"src\", b)); }, update: function () { } });\r\n})();\r\n(function () { var d = window.AmCharts; d.SVGRenderer = d.Class({ construct: function (a) { this.D = a; this.animations = []; }, create: function (a, b) { return document.createElementNS(d.SVG_NS, b); }, attr: function (a, b) { for (var c in b)\r\n        b.hasOwnProperty(c) && this.setAttr(a, c, b[c]); }, setAttr: function (a, b, c) { void 0 !== c && a.node.setAttribute(b, c); }, animate: function (a, b, c, e, h) { a.animationFinished = !1; var f = a.node; a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]); \"translate\" == b ? (f = (f = f.getAttribute(\"transform\")) ? String(f).substring(10, f.length - 1) : \"0,0\", f = f.split(\", \").join(\" \"), f = f.split(\" \").join(\",\"), 0 === f && (f = \"0,0\")) : f = Number(f.getAttribute(b)); c = { obj: a, frame: 0, attribute: b, from: f, to: c, time: e, effect: h }; this.animations.push(c); a[\"an_\" + b] = c; }, update: function () { var a, b = this.animations; for (a = b.length - 1; 0 <= a; a--) {\r\n        var c = b[a], e = c.time * d.updateRate, h = c.frame + 1, f = c.obj, g = c.attribute, k, l, m;\r\n        if (h <= e) {\r\n            c.frame++;\r\n            if (\"translate\" == g) {\r\n                k = c.from.split(\",\");\r\n                g = Number(k[0]);\r\n                k = Number(k[1]);\r\n                isNaN(k) && (k = 0);\r\n                l = c.to.split(\",\");\r\n                m = Number(l[0]);\r\n                l = Number(l[1]);\r\n                m = 0 === m - g ? m : Math.round(d[c.effect](0, h, g, m - g, e));\r\n                c = 0 === l - k ? l : Math.round(d[c.effect](0, h, k, l - k, e));\r\n                g = \"transform\";\r\n                if (isNaN(m) || isNaN(c))\r\n                    continue;\r\n                c = \"translate(\" + m + \",\" + c + \")\";\r\n            }\r\n            else\r\n                l = Number(c.from), k = Number(c.to), m = k - l, c = d[c.effect](0, h, l, m, e), isNaN(c) && (c = k), 0 === m && this.animations.splice(a, 1);\r\n            this.setAttr(f, g, c);\r\n        }\r\n        else\r\n            \"translate\" == g ? (l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), f.translate(m, l)) : (k = Number(c.to), this.setAttr(f, g, k)), f.animationFinished = !0, this.animations.splice(a, 1);\r\n    } }, getBBox: function (a) { if (a = a.node)\r\n        try {\r\n            return a.getBBox();\r\n        }\r\n        catch (b) { } return { width: 0, height: 0, x: 0, y: 0 }; }, path: function (a, b) { a.node.setAttributeNS(d.SVG_XLINK, \"xlink:href\", b); }, clipRect: function (a, b, c, e, h) { var f = a.node, g = a.clipPath; g && this.D.remove(g); var k = f.parentNode; k && (f = document.createElementNS(d.SVG_NS, \"clipPath\"), g = d.getUniqueId(), f.setAttribute(\"id\", g), this.D.rect(b, c, e, h, 0, 0, f), k.appendChild(f), b = \"#\", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, \"clip-path\", \"url(\" + b + g + \")\"), this.clipPathC++, a.clipPath = f); }, text: function (a, b, c) { var e = new d.AmDObject(\"text\", this.D); a = String(a).split(\"\\n\"); var h = d.removePx(b[\"font-size\"]), f; for (f = 0; f < a.length; f++) {\r\n        var g = this.create(null, \"tspan\");\r\n        g.appendChild(document.createTextNode(a[f]));\r\n        g.setAttribute(\"y\", (h + 2) * f + Math.round(h / 2));\r\n        g.setAttribute(\"x\", 0);\r\n        e.node.appendChild(g);\r\n    } e.node.setAttribute(\"y\", Math.round(h / 2)); this.attr(e, b); this.D.addToContainer(e.node, c); return e; }, setText: function (a, b) { var c = a.node; c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b))); }, move: function (a, b, c, d) { isNaN(b) && (b = 0); isNaN(c) && (c = 0); b = \"translate(\" + b + \",\" + c + \")\"; d && (b = b + \" scale(\" + d + \")\"); this.setAttr(a, \"transform\", b); }, rotate: function (a, b) { var c = a.node.getAttribute(\"transform\"), d = \"rotate(\" + b + \")\"; c && (d = c + \" \" + d); this.setAttr(a, \"transform\", d); }, set: function (a) { var b = new d.AmDObject(\"g\", this.D); this.D.container.appendChild(b.node); if (a) {\r\n        var c;\r\n        for (c = 0; c < a.length; c++)\r\n            b.push(a[c]);\r\n    } return b; }, addListener: function (a, b, c) { a.node[\"on\" + b] = c; }, gradient: function (a, b, c, e) { var h = a.node, f = a.grad; f && this.D.remove(f); b = document.createElementNS(d.SVG_NS, b); f = d.getUniqueId(); b.setAttribute(\"id\", f); if (!isNaN(e)) {\r\n        var g = 0, k = 0, l = 0, m = 0;\r\n        90 == e ? l = 100 : 270 == e ? m = 100 : 180 == e ? g = 100 : 0 === e && (k = 100);\r\n        b.setAttribute(\"x1\", g + \"%\");\r\n        b.setAttribute(\"x2\", k + \"%\");\r\n        b.setAttribute(\"y1\", l + \"%\");\r\n        b.setAttribute(\"y2\", m + \"%\");\r\n    } for (e = 0; e < c.length; e++)\r\n        g = document.createElementNS(d.SVG_NS, \"stop\"), k = 100 * e / (c.length - 1), 0 === e && (k = 0), g.setAttribute(\"offset\", k + \"%\"), g.setAttribute(\"stop-color\", c[e]), b.appendChild(g); h.parentNode.appendChild(b); c = \"#\"; d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c); h.setAttribute(\"fill\", \"url(\" + c + f + \")\"); a.grad = b; }, removeTarget: function (a) { return a.split(\"#\")[0]; }, pattern: function (a, b, c, e) { var h = a.node; isNaN(c) && (c = 1); var f = a.patternNode; f && this.D.remove(f); var f = document.createElementNS(d.SVG_NS, \"pattern\"), g = d.getUniqueId(), k = b; b.url && (k = b.url); d.isAbsolute(k) || -1 != k.indexOf(\"data:image\") || (k = e + k); e = Number(b.width); isNaN(e) && (e = 4); var l = Number(b.height); isNaN(l) && (l = 4); e /= c; l /= c; c = b.x; isNaN(c) && (c = 0); var m = -Math.random() * Number(b.randomX); isNaN(m) || (c = m); m = b.y; isNaN(m) && (m = 0); var p = -Math.random() * Number(b.randomY); isNaN(p) || (m = p); f.setAttribute(\"id\", g); f.setAttribute(\"width\", e); f.setAttribute(\"height\", l); f.setAttribute(\"patternUnits\", \"userSpaceOnUse\"); f.setAttribute(\"xlink:href\", k); b.color && (p = document.createElementNS(d.SVG_NS, \"rect\"), p.setAttributeNS(null, \"height\", e), p.setAttributeNS(null, \"width\", l), p.setAttributeNS(null, \"fill\", b.color), f.appendChild(p)); this.D.image(k, 0, 0, e, l, f).translate(c, m); k = \"#\"; d.baseHref && !d.isIE && (k = this.removeTarget(window.location.href) + k); h.setAttribute(\"fill\", \"url(\" + k + g + \")\"); a.patternNode = f; h.parentNode.appendChild(f); }, remove: function (a) { a.clipPath && this.D.remove(a.clipPath); a.grad && this.D.remove(a.grad); a.patternNode && this.D.remove(a.patternNode); this.D.remove(a.node); } }); })();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.AmLegend = d.Class({ construct: function (a) { this.enabled = !0; this.cname = \"AmLegend\"; this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"clickLabel\"); this.position = \"bottom\"; this.borderColor = this.color = \"#000000\"; this.borderAlpha = 0; this.markerLabelGap = 5; this.verticalGap = 10; this.align = \"left\"; this.horizontalGap = 0; this.spacing = 10; this.markerDisabledColor = \"#AAB3B3\"; this.markerType = \"square\"; this.markerSize = 16; this.markerBorderThickness = this.markerBorderAlpha = 1; this.marginBottom = this.marginTop = 0; this.marginLeft = this.marginRight = 20; this.autoMargins = !0; this.valueWidth = 50; this.switchable = !0; this.switchType = \"x\"; this.switchColor = \"#FFFFFF\"; this.rollOverColor = \"#CC0000\"; this.reversedOrder = !1; this.labelText = \"[[title]]\"; this.valueText = \"[[value]]\"; this.accessibleLabel = \"[[title]]\"; this.useMarkerColorForLabels = !1; this.rollOverGraphAlpha = 1; this.textClickEnabled = !1; this.equalWidths = !0; this.backgroundColor = \"#FFFFFF\"; this.backgroundAlpha = 0; this.useGraphSettings = !1; this.showEntries = !0; this.labelDx = 0; d.applyTheme(this, a, this.cname); }, setData: function (a) { this.legendData = a; this.invalidateSize(); }, invalidateSize: function () { this.destroy(); this.entries = []; this.valueLabels = []; var a = this.legendData; this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend(); }, drawLegend: function () { var a = this.chart, b = this.position, c = this.width, e = a.divRealWidth, h = a.divRealHeight, f = this.div, g = this.legendData; this.data && (g = this.combineLegend ? this.legendData.concat(this.data) : this.data); isNaN(this.fontSize) && (this.fontSize = a.fontSize); this.maxColumnsReal = this.maxColumns; if (\"right\" == b || \"left\" == b)\r\n            this.maxColumnsReal = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);\r\n        else if (this.autoMargins) {\r\n            this.marginRight = a.marginRight;\r\n            this.marginLeft = a.marginLeft;\r\n            var k = a.autoMarginOffset;\r\n            \"bottom\" == b ? (this.marginBottom = k, this.marginTop = 0) : (this.marginTop = k, this.marginBottom = 0);\r\n        } c = void 0 !== c ? d.toCoordinate(c, e) : \"right\" != b && \"left\" != b ? a.realWidth : 0 < this.ieW ? this.ieW : a.realWidth; \"outside\" == b ? (c = f.offsetWidth, h = f.offsetHeight, f.clientHeight && (c = f.clientWidth, h = f.clientHeight)) : (isNaN(c) || (f.style.width = c + \"px\"), f.className = \"amChartsLegend \" + a.classNamePrefix + \"-legend-div\"); this.divWidth = c; (b = this.container) ? (b.container.innerHTML = \"\", f.appendChild(b.container), b.width = c, b.height = h, b.setSize(c, h), b.addDefs(a)) : b = new d.AmDraw(f, c, h, a); this.container = b; this.lx = 0; this.ly = 8; h = this.markerSize; h > this.fontSize && (this.ly = h / 2 - 1); 0 < h && (this.lx += h + this.markerLabelGap); this.titleWidth = 0; if (h = this.title)\r\n            h = d.text(this.container, h, this.color, a.fontFamily, this.fontSize, \"start\", !0), d.setCN(a, h, \"legend-title\"), h.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = h.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6; this.index = this.maxLabelWidth = 0; if (this.showEntries) {\r\n            for (a = 0; a < g.length; a++)\r\n                this.createEntry(g[a]);\r\n            for (a = this.index = 0; a < g.length; a++)\r\n                this.createValue(g[a]);\r\n        } this.arrangeEntries(); this.updateValues(); }, arrangeEntries: function () {\r\n            var a = this.position, b = this.marginLeft +\r\n                this.titleWidth, c = this.marginRight, e = this.marginTop, h = this.marginBottom, f = this.horizontalGap, g = this.div, k = this.divWidth, l = this.maxColumnsReal, m = this.verticalGap, p = this.spacing, q = k - c - b, n = 0, t = 0, r = this.container;\r\n            this.set && this.set.remove();\r\n            var w = r.set();\r\n            this.set = w;\r\n            var z = r.set();\r\n            w.push(z);\r\n            var x = this.entries, u, A;\r\n            for (A = 0; A < x.length; A++) {\r\n                u = x[A].getBBox();\r\n                var y = u.width;\r\n                y > n && (n = y);\r\n                u = u.height;\r\n                u > t && (t = u);\r\n            }\r\n            var y = t = 0, B = f, D = 0, C = 0;\r\n            for (A = 0; A < x.length; A++) {\r\n                var I = x[A];\r\n                this.reversedOrder && (I = x[x.length - A - 1]);\r\n                u = I.getBBox();\r\n                var H;\r\n                this.equalWidths ? H = y * (n + p + this.markerLabelGap) : (H = B, B = B + u.width + f + p);\r\n                H + u.width > q && 0 < A && 0 !== y && (t++, H = y = 0, B = H + u.width + f + p, D = D + C + m, C = 0);\r\n                u.height > C && (C = u.height);\r\n                I.translate(H, D);\r\n                y++;\r\n                !isNaN(l) && y >= l && (y = 0, t++, D = D + C + m, B = f, C = 0);\r\n                z.push(I);\r\n            }\r\n            u = z.getBBox();\r\n            l = u.height + 2 * m - 1;\r\n            \"left\" == a || \"right\" == a ? (p = u.width + 2 * f, k = p + b + c, g.style.width = k + \"px\", this.ieW = k) : p = k - b - c - 1;\r\n            c = d.polygon(this.container, [0, p, p, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\r\n            d.setCN(this.chart, c, \"legend-bg\");\r\n            w.push(c);\r\n            w.translate(b, e);\r\n            c.toBack();\r\n            b = f;\r\n            if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a)\r\n                \"center\" == this.align ? b = f + (p - u.width) / 2 : \"right\" == this.align && (b = f + p - u.width);\r\n            z.translate(b, m + 1);\r\n            this.titleHeight > l && (l = this.titleHeight);\r\n            e = l + e + h + 1;\r\n            0 > e && (e = 0);\r\n            \"absolute\" != a && \"outside\" != a && e > this.chart.divRealHeight && (g.style.top = \"0px\");\r\n            g.style.height = Math.round(e) + \"px\";\r\n            r.setSize(this.divWidth, e);\r\n        }, createEntry: function (a) {\r\n            if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\r\n                var b = this, c = b.chart, e = b.useGraphSettings, h = a.markerType;\r\n                h && (e = !1);\r\n                a.legendEntryWidth = b.markerSize;\r\n                h || (h = b.markerType);\r\n                var f = a.color, g = a.alpha;\r\n                a.legendKeyColor && (f = a.legendKeyColor());\r\n                a.legendKeyAlpha && (g = a.legendKeyAlpha());\r\n                var k;\r\n                !0 === a.hidden && (k = f = b.markerDisabledColor);\r\n                var l = a.pattern, m, p = a.customMarker;\r\n                p || (p = b.customMarker);\r\n                var q = b.container, n = b.markerSize, t = 0, r = 0, w = n / 2;\r\n                if (e) {\r\n                    e = a.type;\r\n                    b.switchType = void 0;\r\n                    if (\"line\" == e || \"step\" == e || \"smoothedLine\" == e || \"ohlc\" == e)\r\n                        m = q.set(), a.hidden || (f = a.lineColorR, k = a.bulletBorderColorR), t = d.line(q, [0, 2 * n], [n / 2, n / 2], f, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(c, t, \"graph-stroke\"), m.push(t), a.bullet && (a.hidden || (f = a.bulletColorR), t = d.bullet(q, a.bullet, a.bulletSize, f, a.bulletAlpha, a.bulletBorderThickness, k, a.bulletBorderAlpha)) && (d.setCN(c, t, \"graph-bullet\"), t.translate(n + 1, n / 2), m.push(t)), w = 0, t = n, r = n / 3;\r\n                    else {\r\n                        a.getGradRotation && (m = a.getGradRotation(), 0 === m && (m = 180));\r\n                        t = a.fillColorsR;\r\n                        !0 === a.hidden && (t = f);\r\n                        if (m = b.createMarker(\"rectangle\", t, a.fillAlphas, a.lineThickness, f, a.lineAlpha, m, l, a.dashLength))\r\n                            w = n, m.translate(w, n / 2);\r\n                        t = n;\r\n                    }\r\n                    d.setCN(c, m, \"graph-\" + e);\r\n                    d.setCN(c, m, \"graph-\" + a.id);\r\n                }\r\n                else if (p)\r\n                    m = q.image(p, 0, 0, n, n);\r\n                else {\r\n                    var z;\r\n                    isNaN(b.gradientRotation) || (z = 180 + b.gradientRotation);\r\n                    (m = b.createMarker(h, f, g, void 0, void 0, void 0, z, l)) && m.translate(n / 2, n / 2);\r\n                }\r\n                d.setCN(c, m, \"legend-marker\");\r\n                b.addListeners(m, a);\r\n                q = q.set([m]);\r\n                b.switchable && a.switchable && q.setAttr(\"cursor\", \"pointer\");\r\n                void 0 !== a.id && d.setCN(c, q, \"legend-item-\" + a.id);\r\n                d.setCN(c, q, a.className, !0);\r\n                k = b.switchType;\r\n                var x;\r\n                k && \"none\" != k && 0 < n && (\"x\" == k ? (x = b.createX(), x.translate(n / 2, n / 2)) : x = b.createV(), x.dItem = a, !0 !== a.hidden ? \"x\" == k ? x.hide() : x.show() : \"x\" != k && x.hide(), b.switchable || x.hide(), b.addListeners(x, a), a.legendSwitch = x, q.push(x), d.setCN(c, x, \"legend-switch\"));\r\n                k = b.color;\r\n                a.showBalloon && b.textClickEnabled && void 0 !== b.selectedColor && (k = b.selectedColor);\r\n                b.useMarkerColorForLabels && !l && (k = f);\r\n                !0 === a.hidden && (k = b.markerDisabledColor);\r\n                f = d.massReplace(b.labelText, { \"[[title]]\": a.title });\r\n                void 0 !== b.tabIndex && (q.setAttr(\"tabindex\", b.tabIndex), q.setAttr(\"role\", \"menuitem\"), q.keyup(function (c) { 13 == c.keyCode && b.clickMarker(a, c); }));\r\n                c.accessible && b.accessibleLabel && (l = d.massReplace(b.accessibleLabel, { \"[[title]]\": a.title }), c.makeAccessible(q, l));\r\n                l = b.fontSize;\r\n                m && (n <= l && (n = n / 2 + b.ly - l / 2 + (l + 2 - n) / 2 - r, m.translate(w, n), x && x.translate(x.x, n)), a.legendEntryWidth = m.getBBox().width);\r\n                var u;\r\n                f && (f = d.fixBrakes(f), a.legendTextReal = f, u = b.labelWidth, u = isNaN(u) ? d.text(b.container, f, k, c.fontFamily, l, \"start\") : d.wrappedText(b.container, f, k, c.fontFamily, l, \"start\", !1, u, 0), d.setCN(c, u, \"legend-label\"),\r\n                    u.translate(b.lx + t, b.ly), q.push(u), b.labelDx = t, c = u.getBBox().width, b.maxLabelWidth < c && (b.maxLabelWidth = c));\r\n                b.entries[b.index] = q;\r\n                a.legendEntry = b.entries[b.index];\r\n                a.legendMarker = m;\r\n                a.legendLabel = u;\r\n                b.index++;\r\n            }\r\n        }, addListeners: function (a, b) { var c = this; a && a.mouseover(function (a) { c.rollOverMarker(b, a); }).mouseout(function (a) { c.rollOutMarker(b, a); }).click(function (a) { c.clickMarker(b, a); }); }, rollOverMarker: function (a, b) { this.switchable && this.dispatch(\"rollOverMarker\", a, b); this.dispatch(\"rollOverItem\", a, b); }, rollOutMarker: function (a, b) { this.switchable && this.dispatch(\"rollOutMarker\", a, b); this.dispatch(\"rollOutItem\", a, b); }, clickMarker: function (a, b) { this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b)); this.dispatch(\"clickMarker\", a, b); }, rollOverLabel: function (a, b) { a.hidden || this.textClickEnabled && a.legendLabel && a.legendLabel.attr({ fill: this.rollOverColor }); this.dispatch(\"rollOverItem\", a, b); }, rollOutLabel: function (a, b) { if (!a.hidden && this.textClickEnabled && a.legendLabel) {\r\n            var c = this.color;\r\n            void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\r\n            this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\r\n            a.legendLabel.attr({ fill: c });\r\n        } this.dispatch(\"rollOutItem\", a, b); }, clickLabel: function (a, b) { this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b)); }, dispatch: function (a, b, c) { a = { type: a, dataItem: b, target: this, event: c, chart: this.chart }; this.chart && this.chart.handleLegendEvent(a); this.fire(a); }, createValue: function (a) {\r\n            var b = this, c = b.fontSize, e = b.chart;\r\n            if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\r\n                var h = b.maxLabelWidth;\r\n                b.forceWidth && (h = b.labelWidth);\r\n                b.equalWidths || (b.valueAlign = \"left\");\r\n                \"left\" == b.valueAlign && a.legendLabel && (h = a.legendLabel.getBBox().width);\r\n                var f = h;\r\n                if (b.valueText && 0 < b.valueWidth) {\r\n                    var g = b.color;\r\n                    b.useMarkerColorForValues && (g = a.color, a.legendKeyColor && (g = a.legendKeyColor()));\r\n                    !0 === a.hidden && (g = b.markerDisabledColor);\r\n                    var k = b.valueText, h = h + b.lx + b.labelDx + b.markerLabelGap +\r\n                        b.valueWidth, l = \"end\";\r\n                    \"left\" == b.valueAlign && (h -= b.valueWidth, l = \"start\");\r\n                    g = d.text(b.container, k, g, b.chart.fontFamily, c, l);\r\n                    d.setCN(e, g, \"legend-value\");\r\n                    g.translate(h, b.ly);\r\n                    b.entries[b.index].push(g);\r\n                    f += b.valueWidth + 2 * b.markerLabelGap;\r\n                    g.dItem = a;\r\n                    b.valueLabels.push(g);\r\n                }\r\n                b.index++;\r\n                e = b.markerSize;\r\n                e < c + 7 && (e = c + 7, d.VML && (e += 3));\r\n                c = b.container.rect(a.legendEntryWidth, 0, f, e, 0, 0).attr({ stroke: \"none\", fill: \"#fff\", \"fill-opacity\": .005 });\r\n                c.dItem = a;\r\n                b.entries[b.index - 1].push(c);\r\n                c.mouseover(function (c) { b.rollOverLabel(a, c); }).mouseout(function (c) { b.rollOutLabel(a, c); }).click(function (c) { b.clickLabel(a, c); });\r\n            }\r\n        }, createV: function () { var a = this.markerSize; return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor); }, createX: function () { var a = (this.markerSize - 4) / 2, b = { stroke: this.switchColor, \"stroke-width\": 3 }, c = this.container, e = d.line(c, [-a, a], [-a, a]).attr(b), a = d.line(c, [-a, a], [a, -a]).attr(b); return this.container.set([e, a]); }, createMarker: function (a, b, c, e, h, f, g, k, l) {\r\n            var m = this.markerSize, p = this.container;\r\n            h || (h = this.markerBorderColor);\r\n            h ||\r\n                (h = b);\r\n            isNaN(e) && (e = this.markerBorderThickness);\r\n            isNaN(f) && (f = this.markerBorderAlpha);\r\n            return d.bullet(p, a, m, b, c, e, h, f, m, g, k, this.chart.path, l);\r\n        }, validateNow: function () { this.invalidateSize(); }, updateValues: function () { var a = this.valueLabels, b = this.chart, c, e = this.data; if (a)\r\n            for (c = 0; c < a.length; c++) {\r\n                var h = a[c], f = h.dItem;\r\n                f.periodDataItem = void 0;\r\n                f.periodPercentDataItem = void 0;\r\n                var g = \" \";\r\n                if (e)\r\n                    f.value ? h.text(f.value) : h.text(\"\");\r\n                else {\r\n                    var k = null;\r\n                    if (void 0 !== f.type) {\r\n                        var k = f.currentDataItem, l = this.periodValueText;\r\n                        f.legendPeriodValueText && (l = f.legendPeriodValueText);\r\n                        f.legendPeriodValueTextR && (l = f.legendPeriodValueTextR);\r\n                        k ? (g = this.valueText, f.legendValueText && (g = f.legendValueText), f.legendValueTextR && (g = f.legendValueTextR), g = b.formatString(g, k)) : l && b.formatPeriodString && (l = d.massReplace(l, { \"[[title]]\": f.title }), g = b.formatPeriodString(l, f));\r\n                    }\r\n                    else\r\n                        g = b.formatString(this.valueText, f);\r\n                    l = f;\r\n                    k && (l = k);\r\n                    var m = this.valueFunction;\r\n                    m && (g = m(l, g, b.periodDataItem));\r\n                    var p;\r\n                    this.useMarkerColorForLabels && !k && f.lastDataItem && (k = f.lastDataItem);\r\n                    k ? p = b.getBalloonColor(f, k) : f.legendKeyColor && (p = f.legendKeyColor());\r\n                    f.legendColorFunction && (p = f.legendColorFunction(l, g, f.periodDataItem, f.periodPercentDataItem));\r\n                    h.text(g);\r\n                    if (!f.pattern && (this.useMarkerColorForValues && h.setAttr(\"fill\", p), this.useMarkerColorForLabels)) {\r\n                        if (h = f.legendMarker)\r\n                            h.setAttr(\"fill\", p), h.setAttr(\"stroke\", p);\r\n                        (f = f.legendLabel) && f.setAttr(\"fill\", p);\r\n                    }\r\n                }\r\n            } }, renderFix: function () { if (!d.VML && this.enabled) {\r\n            var a = this.container;\r\n            a && a.renderFix();\r\n        } }, destroy: function () { this.div.innerHTML = \"\"; d.remove(this.set); } });\r\n})();\r\n(function () {\r\n    var d = window.AmCharts;\r\n    d.formatMilliseconds = function (a, b) { if (-1 != a.indexOf(\"fff\")) {\r\n        var c = b.getMilliseconds(), d = String(c);\r\n        10 > c && (d = \"00\" + c);\r\n        10 <= c && 100 > c && (d = \"0\" + c);\r\n        a = a.replace(/fff/g, d);\r\n    } return a; };\r\n    d.extractPeriod = function (a) { var b = d.stripNumbers(a), c = 1; b != a && (c = Number(a.slice(0, a.indexOf(b)))); return { period: b, count: c }; };\r\n    d.getDate = function (a, b, c) { return a instanceof Date ? d.newDate(a, c) : b && isNaN(a) ? d.stringToDate(a, b) : new Date(a); };\r\n    d.daysInMonth = function (a) {\r\n        return (new Date(a.getYear(), a.getMonth() +\r\n            1, 0)).getDate();\r\n    };\r\n    d.newDate = function (a, b) { return b && -1 == b.indexOf(\"fff\") ? new Date(a) : new Date(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()); };\r\n    d.resetDateToMin = function (a, b, c, e) { void 0 === e && (e = 1); var h, f, g, k, l, m, p; d.useUTC ? (h = a.getUTCFullYear(), f = a.getUTCMonth(), g = a.getUTCDate(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), p = a.getUTCMilliseconds(), a = a.getUTCDay()) : (h = a.getFullYear(), f = a.getMonth(), g = a.getDate(), k = a.getHours(), l = a.getMinutes(), m = a.getSeconds(), p = a.getMilliseconds(), a = a.getDay()); switch (b) {\r\n        case \"YYYY\":\r\n            h = Math.floor(h / c) * c;\r\n            f = 0;\r\n            g = 1;\r\n            p = m = l = k = 0;\r\n            break;\r\n        case \"MM\":\r\n            f = Math.floor(f / c) * c;\r\n            g = 1;\r\n            p = m = l = k = 0;\r\n            break;\r\n        case \"WW\":\r\n            g = a >= e ? g - a + e : g - (7 + a) + e;\r\n            p = m = l = k = 0;\r\n            break;\r\n        case \"DD\":\r\n            p = m = l = k = 0;\r\n            break;\r\n        case \"hh\":\r\n            k = Math.floor(k / c) * c;\r\n            p = m = l = 0;\r\n            break;\r\n        case \"mm\":\r\n            l = Math.floor(l / c) * c;\r\n            p = m = 0;\r\n            break;\r\n        case \"ss\":\r\n            m = Math.floor(m / c) * c;\r\n            p = 0;\r\n            break;\r\n        case \"fff\": p = Math.floor(p / c) * c;\r\n    } d.useUTC ? (a = new Date, a.setUTCFullYear(h, f, g), a.setUTCHours(k, l, m, p)) : a = new Date(h, f, g, k, l, m, p); return a; };\r\n    d.getPeriodDuration = function (a, b) { void 0 === b && (b = 1); var c; switch (a) {\r\n        case \"YYYY\":\r\n            c = 316224E5;\r\n            break;\r\n        case \"MM\":\r\n            c = 26784E5;\r\n            break;\r\n        case \"WW\":\r\n            c = 6048E5;\r\n            break;\r\n        case \"DD\":\r\n            c = 864E5;\r\n            break;\r\n        case \"hh\":\r\n            c = 36E5;\r\n            break;\r\n        case \"mm\":\r\n            c = 6E4;\r\n            break;\r\n        case \"ss\":\r\n            c = 1E3;\r\n            break;\r\n        case \"fff\": c = 1;\r\n    } return c * b; };\r\n    d.intervals = { s: { nextInterval: \"ss\", contains: 1E3 }, ss: { nextInterval: \"mm\", contains: 60, count: 0 }, mm: { nextInterval: \"hh\", contains: 60, count: 1 }, hh: { nextInterval: \"DD\", contains: 24, count: 2 }, DD: { nextInterval: \"\", contains: Infinity, count: 3 } };\r\n    d.getMaxInterval = function (a, b) { var c = d.intervals; return a >= c[b].contains ? (a = Math.round(a / c[b].contains), b = c[b].nextInterval, d.getMaxInterval(a, b)) : \"ss\" == b ? c[b].nextInterval : b; };\r\n    d.dayNames = \"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \");\r\n    d.shortDayNames = \"Sun Mon Tue Wed Thu Fri Sat\".split(\" \");\r\n    d.monthNames = \"January February March April May June July August September October November December\".split(\" \");\r\n    d.shortMonthNames = \"Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec\".split(\" \");\r\n    d.getWeekNumber = function (a) { a = new Date(a); a.setHours(0, 0, 0); a.setDate(a.getDate() + 4 - (a.getDay() || 7)); var b = new Date(a.getFullYear(), 0, 1); return Math.ceil(((a - b) / 864E5 + 1) / 7); };\r\n    d.stringToDate = function (a, b) {\r\n        var c = {}, e = [{ pattern: \"YYYY\", period: \"year\" }, { pattern: \"YY\", period: \"year\" }, { pattern: \"MM\", period: \"month\" }, { pattern: \"M\", period: \"month\" }, { pattern: \"DD\", period: \"date\" }, { pattern: \"D\", period: \"date\" }, { pattern: \"JJ\", period: \"hours\" }, { pattern: \"J\", period: \"hours\" }, { pattern: \"HH\", period: \"hours\" }, { pattern: \"H\", period: \"hours\" },\r\n            { pattern: \"KK\", period: \"hours\" }, { pattern: \"K\", period: \"hours\" }, { pattern: \"LL\", period: \"hours\" }, { pattern: \"L\", period: \"hours\" }, { pattern: \"NN\", period: \"minutes\" }, { pattern: \"N\", period: \"minutes\" }, { pattern: \"SS\", period: \"seconds\" }, { pattern: \"S\", period: \"seconds\" }, { pattern: \"QQQ\", period: \"milliseconds\" }, { pattern: \"QQ\", period: \"milliseconds\" }, { pattern: \"Q\", period: \"milliseconds\" }], h = !0, f = b.indexOf(\"AA\");\r\n        -1 != f && (a.substr(f, 2), \"pm\" == a.toLowerCase && (h = !1));\r\n        var f = b, g, k, l;\r\n        for (l = 0; l < e.length; l++)\r\n            k = e[l].period, c[k] = 0, \"date\" == k && (c[k] = 1);\r\n        for (l = 0; l < e.length; l++)\r\n            if (g = e[l].pattern, k = e[l].period, -1 != b.indexOf(g)) {\r\n                var m = d.getFromDateString(g, a, f);\r\n                b = b.replace(g, \"\");\r\n                if (\"KK\" == g || \"K\" == g || \"LL\" == g || \"L\" == g)\r\n                    h || (m += 12);\r\n                c[k] = m;\r\n            }\r\n        d.useUTC ? (e = new Date, e.setUTCFullYear(c.year, c.month, c.date), e.setUTCHours(c.hours, c.minutes, c.seconds, c.milliseconds)) : e = new Date(c.year, c.month, c.date, c.hours, c.minutes, c.seconds, c.milliseconds);\r\n        return e;\r\n    };\r\n    d.getFromDateString = function (a, b, c) { if (void 0 !== b)\r\n        return c = c.indexOf(a), b = String(b), b = b.substr(c, a.length), \"0\" == b.charAt(0) && (b = b.substr(1, b.length - 1)), b = Number(b), isNaN(b) && (b = 0), -1 != a.indexOf(\"M\") && b--, b; };\r\n    d.formatDate = function (a, b, c) { c || (c = d); var e, h, f, g, k, l, m, p, q = d.getWeekNumber(a); d.useUTC ? (e = a.getUTCFullYear(), h = a.getUTCMonth(), f = a.getUTCDate(), g = a.getUTCDay(), k = a.getUTCHours(), l = a.getUTCMinutes(), m = a.getUTCSeconds(), p = a.getUTCMilliseconds()) : (e = a.getFullYear(), h = a.getMonth(), f = a.getDate(), g = a.getDay(), k = a.getHours(), l = a.getMinutes(), m = a.getSeconds(), p = a.getMilliseconds()); var n = String(e).substr(2, 2), t = \"0\" + g; b = b.replace(/W/g, q); q = k; 24 == q && (q = 0); var r = q; 10 > r && (r = \"0\" + r); b = b.replace(/JJ/g, r); b = b.replace(/J/g, q); r = k; 0 === r && (r = 24, -1 != b.indexOf(\"H\") && (f--, 0 === f && (e = new Date(a), e.setDate(e.getDate() - 1), h = e.getMonth(), f = e.getDate(), e = e.getFullYear()))); a = h + 1; 9 > h && (a = \"0\" + a); q = f; 10 > f && (q = \"0\" + f); var w = r; 10 > w && (w = \"0\" + w); b = b.replace(/HH/g, w); b = b.replace(/H/g, r); r = k; 11 < r && (r -= 12); w = r; 10 > w && (w = \"0\" + w); b = b.replace(/KK/g, w); b = b.replace(/K/g, r); r = k; 0 === r && (r = 12); 12 < r && (r -= 12); w = r; 10 > w && (w = \"0\" + w); b = b.replace(/LL/g, w); b = b.replace(/L/g, r); r = l; 10 > r && (r = \"0\" + r); b = b.replace(/NN/g, r); b = b.replace(/N/g, l); l = m; 10 > l && (l = \"0\" + l); b = b.replace(/SS/g, l); b = b.replace(/S/g, m); m = p; 10 > m ? m = \"00\" + m : 100 > m && (m = \"0\" + m); l = p; 10 > l && (l = \"00\" + l); b = b.replace(/A/g, \"@A@\"); b = b.replace(/QQQ/g, m); b = b.replace(/QQ/g, l); b = b.replace(/Q/g, p); b = b.replace(/YYYY/g, \"@IIII@\"); b = b.replace(/YY/g, \"@II@\"); b = b.replace(/MMMM/g, \"@XXXX@\"); b = b.replace(/MMM/g, \"@XXX@\"); b = b.replace(/MM/g, \"@XX@\"); b = b.replace(/M/g, \"@X@\"); b = b.replace(/DD/g, \"@RR@\"); b = b.replace(/D/g, \"@R@\"); b = b.replace(/EEEE/g, \"@PPPP@\"); b = b.replace(/EEE/g, \"@PPP@\"); b = b.replace(/EE/g, \"@PP@\"); b = b.replace(/E/g, \"@P@\"); b = b.replace(/@IIII@/g, e); b = b.replace(/@II@/g, n); b = b.replace(/@XXXX@/g, c.monthNames[h]); b = b.replace(/@XXX@/g, c.shortMonthNames[h]); b = b.replace(/@XX@/g, a); b = b.replace(/@X@/g, h + 1); b = b.replace(/@RR@/g, q); b = b.replace(/@R@/g, f); b = b.replace(/@PPPP@/g, c.dayNames[g]); b = b.replace(/@PPP@/g, c.shortDayNames[g]); b = b.replace(/@PP@/g, t); b = b.replace(/@P@/g, g); return b = 12 > k ? b.replace(/@A@/g, c.amString) : b.replace(/@A@/g, c.pmString); };\r\n    d.changeDate = function (a, b, c, e, h) {\r\n        if (d.useUTC)\r\n            return d.changeUTCDate(a, b, c, e, h);\r\n        var f = -1;\r\n        void 0 === e && (e = !0);\r\n        void 0 === h && (h = !1);\r\n        !0 === e && (f = 1);\r\n        switch (b) {\r\n            case \"YYYY\":\r\n                a.setFullYear(a.getFullYear() + c * f);\r\n                e || h || a.setDate(a.getDate() + 1);\r\n                break;\r\n            case \"MM\":\r\n                b = a.getMonth();\r\n                a.setMonth(a.getMonth() + c * f);\r\n                a.getMonth() > b + c * f && a.setDate(a.getDate() - 1);\r\n                e || h || a.setDate(a.getDate() + 1);\r\n                break;\r\n            case \"DD\":\r\n                a.setDate(a.getDate() + c * f);\r\n                break;\r\n            case \"WW\":\r\n                a.setDate(a.getDate() + c * f * 7);\r\n                break;\r\n            case \"hh\":\r\n                a.setHours(a.getHours() + c * f);\r\n                break;\r\n            case \"mm\":\r\n                a.setMinutes(a.getMinutes() +\r\n                    c * f);\r\n                break;\r\n            case \"ss\":\r\n                a.setSeconds(a.getSeconds() + c * f);\r\n                break;\r\n            case \"fff\": a.setMilliseconds(a.getMilliseconds() + c * f);\r\n        }\r\n        return a;\r\n    };\r\n    d.changeUTCDate = function (a, b, c, d, h) {\r\n        var f = -1;\r\n        void 0 === d && (d = !0);\r\n        void 0 === h && (h = !1);\r\n        !0 === d && (f = 1);\r\n        switch (b) {\r\n            case \"YYYY\":\r\n                a.setUTCFullYear(a.getUTCFullYear() + c * f);\r\n                d || h || a.setUTCDate(a.getUTCDate() + 1);\r\n                break;\r\n            case \"MM\":\r\n                b = a.getUTCMonth();\r\n                a.setUTCMonth(a.getUTCMonth() + c * f);\r\n                a.getUTCMonth() > b + c * f && a.setUTCDate(a.getUTCDate() - 1);\r\n                d || h || a.setUTCDate(a.getUTCDate() + 1);\r\n                break;\r\n            case \"DD\":\r\n                a.setUTCDate(a.getUTCDate() +\r\n                    c * f);\r\n                break;\r\n            case \"WW\":\r\n                a.setUTCDate(a.getUTCDate() + c * f * 7);\r\n                break;\r\n            case \"hh\":\r\n                a.setUTCHours(a.getUTCHours() + c * f);\r\n                break;\r\n            case \"mm\":\r\n                a.setUTCMinutes(a.getUTCMinutes() + c * f);\r\n                break;\r\n            case \"ss\":\r\n                a.setUTCSeconds(a.getUTCSeconds() + c * f);\r\n                break;\r\n            case \"fff\": a.setUTCMilliseconds(a.getUTCMilliseconds() + c * f);\r\n        }\r\n        return a;\r\n    };\r\n})();\r\n",null]}