{"remainingRequest":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\es7.string.match-all.js","dependencies":[{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\es7.string.match-all.js","mtime":1594653264000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594653262000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1594653256000}],"contextDependencies":[],"result":["'use strict';\r\n// https://tc39.github.io/String.prototype.matchAll/\r\nvar $export = require('./_export');\r\nvar defined = require('./_defined');\r\nvar toLength = require('./_to-length');\r\nvar isRegExp = require('./_is-regexp');\r\nvar getFlags = require('./_flags');\r\nvar RegExpProto = RegExp.prototype;\r\n\r\nvar $RegExpStringIterator = function (regexp, string) {\r\n  this._r = regexp;\r\n  this._s = string;\r\n};\r\n\r\nrequire('./_iter-create')($RegExpStringIterator, 'RegExp String', function next() {\r\n  var match = this._r.exec(this._s);\r\n  return { value: match, done: match === null };\r\n});\r\n\r\n$export($export.P, 'String', {\r\n  matchAll: function matchAll(regexp) {\r\n    defined(this);\r\n    if (!isRegExp(regexp)) throw TypeError(regexp + ' is not a regexp!');\r\n    var S = String(this);\r\n    var flags = 'flags' in RegExpProto ? String(regexp.flags) : getFlags.call(regexp);\r\n    var rx = new RegExp(regexp.source, ~flags.indexOf('g') ? flags : 'g' + flags);\r\n    rx.lastIndex = toLength(regexp.lastIndex);\r\n    return new $RegExpStringIterator(rx, S);\r\n  }\r\n});\r\n",null]}