{"remainingRequest":"D:\\SIGESPRO\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\SIGESPRO\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-item.component.js","dependencies":[{"path":"D:\\SIGESPRO\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-item.component.js","mtime":1582660892592},{"path":"D:\\SIGESPRO\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1582660885942},{"path":"D:\\SIGESPRO\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1582660881929}],"contextDependencies":[],"result":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { isNil } from 'lodash';\nimport { TreeviewConfig } from './treeview-config';\nvar TreeviewItemComponent = /*@__PURE__*/ (function () {\n    function TreeviewItemComponent(defaultConfig) {\n        var _this = this;\n        this.defaultConfig = defaultConfig;\n        this.checkedChange = new EventEmitter();\n        this.onCollapseExpand = function () {\n            _this.item.collapsed = !_this.item.collapsed;\n        };\n        this.onCheckedChange = function () {\n            var checked = _this.item.checked;\n            if (!isNil(_this.item.children) && !_this.config.decoupleChildFromParent) {\n                _this.item.children.forEach(function (child) { return child.setCheckedRecursive(checked); });\n            }\n            _this.checkedChange.emit(checked);\n        };\n        this.config = this.defaultConfig;\n    }\n    TreeviewItemComponent.prototype.onChildCheckedChange = function (child, checked) {\n        if (!this.config.decoupleChildFromParent) {\n            var itemChecked = null;\n            for (var _i = 0, _a = this.item.children; _i < _a.length; _i++) {\n                var childItem = _a[_i];\n                if (itemChecked === null) {\n                    itemChecked = childItem.checked;\n                }\n                else if (itemChecked !== childItem.checked) {\n                    itemChecked = undefined;\n                    break;\n                }\n            }\n            if (itemChecked === null) {\n                itemChecked = false;\n            }\n            if (this.item.checked !== itemChecked) {\n                this.item.checked = itemChecked;\n            }\n        }\n        this.checkedChange.emit(checked);\n    };\n    return TreeviewItemComponent;\n}());\nexport { TreeviewItemComponent };\n//# sourceMappingURL=treeview-item.component.js.map \n",null]}