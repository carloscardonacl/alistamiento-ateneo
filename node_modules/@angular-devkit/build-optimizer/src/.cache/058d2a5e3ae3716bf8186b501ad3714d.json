{"remainingRequest":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-helper.js","dependencies":[{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-helper.js","mtime":1576545874057},{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1576545781437},{"path":"C:\\Users\\Gerente CorvusLab\\Desktop\\Master_Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1576545722790}],"contextDependencies":[],"result":["import { concat, isNil, pull } from 'lodash';\nexport var TreeviewHelper = {\n    findItem: findItem,\n    findItemInList: findItemInList,\n    findParent: findParent,\n    removeItem: removeItem,\n    concatSelection: concatSelection\n};\nfunction findItem(root, value) {\n    if (isNil(root)) {\n        return undefined;\n    }\n    if (root.value === value) {\n        return root;\n    }\n    if (root.children) {\n        for (var _i = 0, _a = root.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var foundItem = findItem(child, value);\n            if (foundItem) {\n                return foundItem;\n            }\n        }\n    }\n    return undefined;\n}\nfunction findItemInList(list, value) {\n    if (isNil(list)) {\n        return undefined;\n    }\n    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\n        var item = list_1[_i];\n        var foundItem = findItem(item, value);\n        if (foundItem) {\n            return foundItem;\n        }\n    }\n    return undefined;\n}\nfunction findParent(root, item) {\n    if (isNil(root) || isNil(root.children)) {\n        return undefined;\n    }\n    for (var _i = 0, _a = root.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        if (child === item) {\n            return root;\n        }\n        else {\n            var parent_1 = findParent(child, item);\n            if (parent_1) {\n                return parent_1;\n            }\n        }\n    }\n    return undefined;\n}\nfunction removeItem(root, item) {\n    var parent = findParent(root, item);\n    if (parent) {\n        pull(parent.children, item);\n        if (parent.children.length === 0) {\n            parent.children = undefined;\n        }\n        else {\n            parent.correctChecked();\n        }\n        return true;\n    }\n    return false;\n}\nfunction concatSelection(items, checked, unchecked) {\n    var checkedItems = checked.slice();\n    var uncheckedItems = unchecked.slice();\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        var selection = item.getSelection();\n        checkedItems = concat(checkedItems, selection.checkedItems);\n        uncheckedItems = concat(uncheckedItems, selection.uncheckedItems);\n    }\n    return {\n        checked: checkedItems,\n        unchecked: uncheckedItems\n    };\n}\n//# sourceMappingURL=treeview-helper.js.map",null]}