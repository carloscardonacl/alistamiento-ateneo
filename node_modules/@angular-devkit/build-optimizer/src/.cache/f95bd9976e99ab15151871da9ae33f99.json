{"remainingRequest":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\rxjs\\_esm5\\operator\\timeInterval.js","dependencies":[{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\rxjs\\_esm5\\operator\\timeInterval.js","mtime":1594653278000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594653262000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1594653256000}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._scheduler_async,.._operators_timeInterval PURE_IMPORTS_END */\r\nimport { async } from '../scheduler/async';\r\nimport { timeInterval as higherOrder, TimeInterval } from '../operators/timeInterval';\r\nexport { TimeInterval };\r\n/**\r\n * @param scheduler\r\n * @return {Observable<TimeInterval<any>>|WebSocketSubject<T>|Observable<T>}\r\n * @method timeInterval\r\n * @owner Observable\r\n */\r\nexport function timeInterval(scheduler) {\r\n    if (scheduler === void 0) {\r\n        scheduler = async;\r\n    }\r\n    return higherOrder(scheduler)(this);\r\n}\r\n//# sourceMappingURL=timeInterval.js.map\r\n",null]}