{"remainingRequest":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-i18n.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-i18n.js","mtime":1577367854575},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535664048428},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1535664036292}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nvar TreeviewI18n = /*@__PURE__*/ (function () {\n    function TreeviewI18n() {\n    }\n    return TreeviewI18n;\n}());\nexport { TreeviewI18n };\nvar TreeviewI18nDefault = /*@__PURE__*/ (function (_super) {\n    __extends(TreeviewI18nDefault, _super);\n    function TreeviewI18nDefault() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreeviewI18nDefault.prototype.getText = function (selection) {\n        if (selection.uncheckedItems.length === 0) {\n            return this.getAllCheckboxText();\n        }\n        switch (selection.checkedItems.length) {\n            case 0:\n                return 'Select options';\n            case 1:\n                return selection.checkedItems[0].text;\n            default:\n                return selection.checkedItems.length + \" options selected\";\n        }\n    };\n    TreeviewI18nDefault.prototype.getAllCheckboxText = function () {\n        return 'All';\n    };\n    TreeviewI18nDefault.prototype.getFilterPlaceholder = function () {\n        return 'Filter';\n    };\n    TreeviewI18nDefault.prototype.getFilterNoItemsFoundText = function () {\n        return 'No items found';\n    };\n    TreeviewI18nDefault.prototype.getTooltipCollapseExpandText = function (isCollapse) {\n        return isCollapse ? 'Expand' : 'Collapse';\n    };\n    return TreeviewI18nDefault;\n}(TreeviewI18n));\nexport { TreeviewI18nDefault };\n//# sourceMappingURL=treeview-i18n.js.map \n",null]}