{"remainingRequest":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\_string-pad.js","dependencies":[{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\_string-pad.js","mtime":1594653264000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594653262000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1594653256000}],"contextDependencies":[],"result":["// https://github.com/tc39/proposal-string-pad-start-end\r\nvar toLength = require('./_to-length');\r\nvar repeat = require('./_string-repeat');\r\nvar defined = require('./_defined');\r\n\r\nmodule.exports = function (that, maxLength, fillString, left) {\r\n  var S = String(defined(that));\r\n  var stringLength = S.length;\r\n  var fillStr = fillString === undefined ? ' ' : String(fillString);\r\n  var intMaxLength = toLength(maxLength);\r\n  if (intMaxLength <= stringLength || fillStr == '') return S;\r\n  var fillLen = intMaxLength - stringLength;\r\n  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));\r\n  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);\r\n  return left ? stringFiller + S : S + stringFiller;\r\n};\r\n",null]}