{"remainingRequest":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\_math-scale.js","dependencies":[{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\core-js\\modules\\_math-scale.js","mtime":1594653264000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1594653262000},{"path":"C:\\wamp64\\www\\sigespro\\front\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1594653256000}],"contextDependencies":[],"result":["// https://rwaldron.github.io/proposal-math-extensions/\r\nmodule.exports = Math.scale || function scale(x, inLow, inHigh, outLow, outHigh) {\r\n  if (\r\n    arguments.length === 0\r\n      // eslint-disable-next-line no-self-compare\r\n      || x != x\r\n      // eslint-disable-next-line no-self-compare\r\n      || inLow != inLow\r\n      // eslint-disable-next-line no-self-compare\r\n      || inHigh != inHigh\r\n      // eslint-disable-next-line no-self-compare\r\n      || outLow != outLow\r\n      // eslint-disable-next-line no-self-compare\r\n      || outHigh != outHigh\r\n  ) return NaN;\r\n  if (x === Infinity || x === -Infinity) return x;\r\n  return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\r\n};\r\n",null]}