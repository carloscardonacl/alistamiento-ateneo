{"remainingRequest":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-helper.js","dependencies":[{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\ngx-treeview\\src\\treeview-helper.js","mtime":1577367854573},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1535664048428},{"path":"C:\\Users\\User\\Desktop\\Master-Sigespro\\sigespro\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1535664036292}],"contextDependencies":[],"result":["import { concat, isNil, pull } from 'lodash';\r\nexport var TreeviewHelper = {\r\n    findItem: findItem,\r\n    findItemInList: findItemInList,\r\n    findParent: findParent,\r\n    removeItem: removeItem,\r\n    concatSelection: concatSelection\r\n};\r\nfunction findItem(root, value) {\r\n    if (isNil(root)) {\r\n        return undefined;\r\n    }\r\n    if (root.value === value) {\r\n        return root;\r\n    }\r\n    if (root.children) {\r\n        for (var _i = 0, _a = root.children; _i < _a.length; _i++) {\r\n            var child = _a[_i];\r\n            var foundItem = findItem(child, value);\r\n            if (foundItem) {\r\n                return foundItem;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction findItemInList(list, value) {\r\n    if (isNil(list)) {\r\n        return undefined;\r\n    }\r\n    for (var _i = 0, list_1 = list; _i < list_1.length; _i++) {\r\n        var item = list_1[_i];\r\n        var foundItem = findItem(item, value);\r\n        if (foundItem) {\r\n            return foundItem;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction findParent(root, item) {\r\n    if (isNil(root) || isNil(root.children)) {\r\n        return undefined;\r\n    }\r\n    for (var _i = 0, _a = root.children; _i < _a.length; _i++) {\r\n        var child = _a[_i];\r\n        if (child === item) {\r\n            return root;\r\n        }\r\n        else {\r\n            var parent_1 = findParent(child, item);\r\n            if (parent_1) {\r\n                return parent_1;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction removeItem(root, item) {\r\n    var parent = findParent(root, item);\r\n    if (parent) {\r\n        pull(parent.children, item);\r\n        if (parent.children.length === 0) {\r\n            parent.children = undefined;\r\n        }\r\n        else {\r\n            parent.correctChecked();\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction concatSelection(items, checked, unchecked) {\r\n    var checkedItems = checked.slice();\r\n    var uncheckedItems = unchecked.slice();\r\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\r\n        var item = items_1[_i];\r\n        var selection = item.getSelection();\r\n        checkedItems = concat(checkedItems, selection.checkedItems);\r\n        uncheckedItems = concat(uncheckedItems, selection.uncheckedItems);\r\n    }\r\n    return {\r\n        checked: checkedItems,\r\n        unchecked: uncheckedItems\r\n    };\r\n}\r\n//# sourceMappingURL=treeview-helper.js.map",null]}